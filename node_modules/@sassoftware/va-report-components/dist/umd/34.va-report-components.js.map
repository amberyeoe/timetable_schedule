{"version":3,"file":"34.va-report-components.js","mappings":"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BACVjD,QAAS,GACT8C,MAAO,GACP7E,OAAQ,QACR8B,MAAO,IAIXmD,EAAOC,QAAUjE,EAAiBM,O,UCpIlC0D,EAAOC,QAAU,CACbN,iBAhHqB,CACvB,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KAuFHO,iBAhFqB,CACvB,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,IACL,EAAK,KA6DHH,iBA1DqB,CACvsources":["webpack://vaReportComponents/../node_modules/@sas/nova-core/i18n/pseudo/pseudoI18n.js","webpack://vaReportComponents/../node_modules/sas-pseudol10n4js/src/PseudoL10nString.js","webpack://vaReportComponents/../node_modules/sas-pseudol10n4js/src/charMaps.js"],"sourcesContent":["import PseudoStringBuilder from 'sas-pseudol10n4js/src/PseudoL10nString';\nconst pseudoString = PseudoStringBuilder('');\nconst getStrategy = locale => {\n  return pseudoString._strategies[getStrategyName(locale)];\n};\nconst getStrategyName = strategy => {\n  strategy = strategy.toLowerCase();\n  switch (strategy) {\n    case 'zh-cn-pseudo':\n      return 'zh_CN_pseudo';\n    case 'ar-xx':\n      return 'ar_XX';\n    case 'pl-xx':\n    default:\n      return 'pl_XX';\n  }\n};\n\n/**\n * Pseudo-localize a string for the locale\n *\n * @param {string} locale Name of locale\n * @param {string} str The string to pseudo-localize\n * @return {string}\n */\nexport const pseudoLocalizeStringForLocale = (locale, str) => {\n  if (str && str.length < 1) return str;\n  const strategy = getStrategy(locale);\n  return pseudoString._transformString(strategy, str);\n};\n\n/**\n * Pseudo-translates the provided bundle to the pseudo-locale.\n *\n * @param locale locale to pseudo-translate to\n * @param bundle an object of message keys and messages\n * @returns\n */\nexport const pseudoLocalizeBundle = (locale, bundle) => {\n  if (!bundle) {\n    return bundle;\n  }\n  const newBundle = {};\n  Object.keys(bundle).forEach(k => {\n    // Skip translation for below type of keys in pseudo langauges\n    if (/[._](notrans|lcl|image|classname|gif)$/i.test(k)) newBundle[k] = bundle[k];else newBundle[k] = pseudoLocalizeStringForLocale(locale, bundle[k]);\n  });\n  return newBundle;\n};\n//# sourceMappingURL=pseudoI18n.js.map","\"use strict\";\n\nconst maps = require('./charMaps');\nconst ignoreValue = new RegExp('^(_)+([a-zA-Z0-9]+)(_)+$');\n\n/**\n *\n * @param {String} message\n * @param {String} strategy\n * @constructor\n * @name {PseudoL10nString}\n */\nclass PseudoL10nString {\n  constructor(text) {\n    this._pseudo = {};\n    this._createPseudo(text);\n  }\n  static builder(message) {\n    return new PseudoL10nString(message);\n  }\n  _createPseudo(str) {\n    for (const key of Object.keys(this._strategies)) {\n      this._pseudo[key] = this.pseudoLocalizeWith(this._strategies[key], str);\n    }\n  }\n  getPseudo() {\n    return (this._pseudo);\n  }\n  /**\n   * Returns the expansion string\n   *\n   * @param {Int} len\n   * @param {Object} strategy\n   * @return {String}\n   */\n  _getExtension(len, ratio, extChar, locale) {\n    let i, extstr = '', exp = len <= this._expMap.length ? this._expMap[len] : len * 0.16;\n    exp = (ratio > 0) ? parseInt(exp / ratio) : 0;\n    if (exp === 0 || extChar.length === 0)\n      return extstr;\n    extstr = extChar.repeat(exp);\n    if (exp <= 3)\n      return extstr;\n\n    var array = [];\n    for (i = 0; i < exp; i++) {\n      if (i === 1 || (i > 0 && (i % 6) === 0))\n        array.push(' ');\n      else\n        array.push(extChar);\n    }\n    extstr = array.join('');\n    return extstr;\n  }\n  /**\n   * Returns the transcoded string according to the mapping table\n   *\n   * @param {Map} charMap\n   * @param {String} str\n   * @return {String}\n   */\n  _transformString(strategy, str) {\n    if (!str || str.length === 0 || ignoreValue.test(str)) {\n      return str;\n    }\n    var charMap = strategy.map;\n\n    //replace escaped characters: \\\\n \\\\t \\\\r \\\\uXXXX\n    str = str.replace(/\\\\[nrt]|\\\\u([0-9A-Fa-f]{4})/g,\"%$&!\");\n    const {result,charCount} = str.split('').reduce(({ignoreFn, result, charCount}, char, idx) => {\n      // if we can stop ignoring\n      if (ignoreFn && ignoreFn(char, idx)) {\n        ignoreFn = null;\n      }\n      if (!ignoreFn) {\n        // if we need to start ignoring\n        ignoreFn = this._ignoreMap[char];\n        if (!ignoreFn) {\n            if (char.match(/[a-z0-9]/i))\n               charCount+=1;\n            if (charMap!=null && charMap[char]) {\n               char = charMap[char];\n            }\n        }\n      }\n      result += char;\n      return {ignoreFn, result, charCount}\n    }, {ignoreFn: null, result: '', charCount: 0});\n    // put escaped character back in the string\n    var res2 = result.replace(/\\%(\\\\[nrt]|\\\\u([0-9A-Fa-f]{4}))\\!/g,function(match,offset,start) {\n        return match.substr(1).slice(0, -1);\n    });\n    var res =strategy.prefix\n            + res2\n            + this._getExtension(charCount,strategy.ratio,strategy.extChar,strategy.locale)\n            + strategy.suffix;\n    return res;\n  }\n  /**\n   * Returns the strategies options table\n   *\n   * @param {String} strategy\n   * @return {Object}\n   */\n  _getStrategy(strategy) {\n    var ps;\n    switch (strategy) {\n      case \"plxx\":\n        ps = strategies['plxx'];\n        break;\n      case \"frxx\":\n        ps = strategies['frxx'];\n        break;\n      case \"zhxx\":\n        ps = strategies['zhxx'];\n        break;\n      default:\n        ps = strategies['plxx'];\n        break;\n    }\n    return ps;\n  }\n  /**\n   * Convert a string from UTF-8 to ASCII with Unicode Escaped Notation\n   *\n   * @param {String} strategy\n   * @return {String}\n   */\n  _utf8_2ascii(str) {\n    var out = \"\";\n    for (var i = 0; i < str.length; i++) {\n      if (str.charCodeAt(i) < 0x80) {\n        out += str.charAt(i);\n      } else {\n        var u = \"\" + str.charCodeAt(i).toString(16).toUpperCase();\n        out += \"\\\\u\" + (u.length === 2 ? \"00\" + u : u.length === 3 ? \"0\" + u : u);\n      }\n    }\n    return out;\n  }\n  /**\n   * Indicates if a message contains placeholder\n   *\n   * @param {String} strategy\n   * @return {boolean}\n   */\n  _hasPlaceholder(str) {\n    var regex = /\\{[A-Za-z0-9_]+}/g;\n    return str.match(regex);\n  }\n  /**\n   * Pseudo-localize a string using a given strategy\n   *\n   * @param {String} strategy\n   * @param {String} str\n   * @return {String}\n   */\n  pseudoLocalizeWith(strategy, str) {\n    var result = this._transformString(strategy, str);\n    return (this._utf8_2ascii(result));\n  }\n  /**\n   * Pseudo-localize a string using this strategy name\n   *\n   * @param {String} name\n   * @param {String} str\n   * @return {String}\n   */\n  pseudoLocalize(name, str) {\n    if (str.length <= 1)\n      return str;\n    var strategy = this._getStrategy(name);\n    return (this.pseudoLocalizeWith(strategy));\n  }\n}\n\n\n/**\n * @type {Array} Mapping table for expansion characters\n * @ignore\n */\n\nPseudoL10nString.prototype._expMap= [\n                                   0, 0, 1, 2, 3, 3, 3, 3, 4, 4,\n                                   4, 5, 5, 5, 6, 6, 7, 7, 8, 8,\n                                   8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n                           /*30*/  8, 8, 9, 9, 9, 9, 9, 9, 9,10,\n                                  10,10,10,10,11,11,11,11,12,12,\n                                  12,12,12,12,12,12,12,12,12,12,\n                                  12,12,12,12,12,12,12,12,12,12,\n                                  12,12,12,12,12,12,13,13,13,13,\n                           /*80*/ 13,13,13,13,14,14,14,14,14,14];\n                                /* 0, 1, 2, 3, 4, 5, 6, 7, 8, 9*/\n\n/**\n * @type {Map} Mapping table for characters to ignore\n * @ignore\n */\n\nPseudoL10nString.prototype._ignoreMap = {\n  // html\n  '<': (char) => char === '>',\n  // html\n  '{': (char) => char === '}',\n  // macro function\n  '%': (char) => ~[' ', ',', ':', ';', '?', '!', ')', '}', ']'].indexOf(char),\n  //macro variable, html entities\n  '&': (char) => ~[' ', ';'].indexOf(char)\n};\n\n/**\n * @type {Map} Mapping table for strategies to pseudo-translate\n * @ignore\n */\nPseudoL10nString.prototype._strategies = {\n  pl_XX: {\n    prefix: '[',\n    suffix: ']',\n    map: maps.pl_pseudoCharMap,\n    extChar: '@',\n    quote: '',\n    locale: 'pl_XX',\n    ratio: 1\n  },\n  zh_CN_pseudo: {\n    prefix: 'Ｘ',\n    suffix: 'Ｚ',\n    map: null,\n    extChar: '补',\n    quote: '',\n    locale: 'zh_CN_pseudo',\n    ratio: 1.25\n  },\n   ar_XX: {\n    prefix: '',\n    suffix: '',\n    map: maps.ar_pseudoCharMap,\n    extChar: '',\n    quote: '',\n    locale: 'ar_XX',\n    ratio: 1\n  }\n};\n\nmodule.exports = PseudoL10nString.builder;\n","\nconst pl_pseudoCharMap = {\n  'a': 'ą', // \\u0105\n  'c': 'ć', // \\u0107\n  'd': 'đ', // \\u0111\n  'e': 'ę', // \\u0119\n  'i': 'í', // \\u00ed\n  'l': 'ł', // \\u0142\n  'n': 'ň', // \\u0148\n  'o': 'ő', // \\u0151\n  'r': 'ř', // \\u0159\n  's': 'ś', // \\u015B\n  't': 'ţ', // \\u0163\n  'u': 'ű', // \\u0171\n  'z': 'ż', // \\u017C\n  'A': 'Ą', // \\U0104\n  'C': 'Ć', // \\U0106\n  'D': 'Đ', // \\U0110\n  'E': 'Ę', // \\U0118\n  'I': 'Í', // \\U00CD\n  'L': 'Ł', // \\U0141\n  'N': 'Ň', // \\U0147\n  'O': 'Ő', // \\U0150\n  'R': 'Ř', // \\U0158\n  'S': 'Ś', // \\U015A\n  'T': 'Ţ', // \\U0162\n  'U': 'Ű', // \\U0170\n  'Z': 'Ż'  // \\U017B\n};\n\n/**\n * @type {Map} Mapping table for pseudo-French\n * @ignore\n */\nconst fr_pseudoCharMap = {\n  'a': 'å', // \\u00E5\n  'b': 'þ', // \\u00FE\n  'c': 'ç', // \\u00E7\n  'd': 'ð', // \\u00F0\n  'e': 'ë', // \\u00EB\n  'i': 'î', // \\u00EE\n  'n': 'ñ', // \\u00F1\n  'o': 'ǿ', // \\u00F8\n  'u': 'ü', // \\u00FC\n  'y': 'ÿ', // \\u00FD\n  'A': 'Å', // \\U00C5\n  'B': 'ß', // \\U00DF\n  'C': 'Ç', // \\U00C7\n  'D': 'Ð', // \\U00D0\n  'E': 'Ë', // \\U00CB\n  'I': 'Î', // \\U00CE\n  'N': 'Ñ', // \\U00D1\n  'O': 'Ǿ', // \\U00D8\n  'U': 'Ü', // \\U00DC\n  'Y': 'Ÿ'  // \\U00DD\n};\n\nconst ar_pseudoCharMap = {\n  'A': 'ٯ', // \\u066F\n  'B': 'إ', // \\u0625\n  'C': 'ژ', // \\u0698\n  'D': 'ٺ', // \\u067A\n  'E': 'ٻ', // \\u067B\n  'F': 'ټ', // \\u067C\n  'G': 'ں', // \\u06BA\n  'H': 'آ', // \\u0622   \n  'I': 'ک', // u06A9\n  'J': 'ھ', // u06BE\n  'K': 'ٹ', // u0679\n  'L': 'ہ', // u06C1\n  'M': 'ٽ', // u067D\n  'N': 'أ', // u0623\n  'O': 'گ', // u06AF\n  'P': 'ے', // u06D2\n  'Q': 'ٿ', // u067F\n  'R': 'ج', // u062C\n  'S': 'ڀ', // u0680\n  'T': 'ځ', // u0681\n  'U': 'پ', // u067E\n  'V': 'ؤ', // u0624\n  'W': 'ڂ', // u0682\n  'X': 'ي', // u064A\n  'Y': 'چ', // u0686    \n  'Z': 'ة', // u0629\n  'a': 'ش', // u0634\n  'b': 'ذ', // u0630\n  'c': 'ز', // u0632\n  'd': 'ڈ', // u0688\n  'e': 'ث', // u062B\n  'f': 'ب', // u0628\n  'g': 'ل', // u0644\n  'h': 'ا', // u0627   \n  'i': 'ه', // u0647\n  'j': 'ت', // u062A\n  'k': 'ن', // u0646    \n  'l': 'م', // u0645\n  'm': 'ئ', // u0626    \n  'n': 'د', // u062F\n  'o': 'خ', // u062E\n  'p': 'ح', // u062D\n  'q': 'ض', // u0636    \n  'r': 'ق', // u0642\n  's': 'س', // u0633\n  't': 'ف', // u0641\n  'u': 'ع', // u0639\n  'v': 'ر', // u0631\n  'w': 'ص', // u0635\n  'x': 'ط', // u0637\n  'y': 'غ', // u063A        \n  'z': 'ظ' // u0638\n};\n\nmodule.exports = {\n    pl_pseudoCharMap,\n    fr_pseudoCharMap,\n    ar_pseudoCharMap\n}"],"names":["pseudoString","getStrategyName","strategy","toLowerCase","pseudoLocalizeStringForLocale","locale","str","length","_strategies","getStrategy","_transformString","pseudoLocalizeBundle","bundle","newBundle","Object","keys","forEach","k","test","maps","ignoreValue","RegExp","PseudoL10nString","constructor","text","this","_pseudo","_createPseudo","builder","message","key","pseudoLocalizeWith","getPseudo","_getExtension","len","ratio","extChar","i","extstr","exp","_expMap","parseInt","repeat","array","push","join","charMap","map","replace","result","charCount","split","reduce","ignoreFn","char","idx","_ignoreMap","match","res2","offset","start","substr","slice","prefix","suffix","_getStrategy","ps","strategies","_utf8_2ascii","out","charCodeAt","charAt","u","toString","toUpperCase","_hasPlaceholder","pseudoLocalize","name","prototype","indexOf","pl_XX","pl_pseudoCharMap","quote","zh_CN_pseudo","ar_XX","ar_pseudoCharMap","module","exports","fr_pseudoCharMap"],"sourceRoot":""}