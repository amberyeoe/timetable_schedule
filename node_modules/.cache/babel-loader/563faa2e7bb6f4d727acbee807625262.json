{"ast":null,"code":"// Base reference date: 07/10/2024 is Monday\nexport const baseDate = new Date(2024, 9, 7); // October is month 9 (zero-indexed)\n\nexport const getDateForSelectedDay = day => {\n  const dayMap = {\n    \"Monday\": 0,\n    \"Tuesday\": 1,\n    \"Wednesday\": 2,\n    \"Thursday\": 3,\n    \"Friday\": 4\n  };\n  const offset = dayMap[day];\n  const selectedDate = new Date(baseDate);\n  selectedDate.setDate(baseDate.getDate() + offset); // Add the offset to 07/10/2024 (Monday)\n\n  return selectedDate;\n};\nexport const convertToDayDateTime = isoString => {\n  const date = new Date(isoString);\n  console.log(date);\n  const dayOfWeek = date.toLocaleDateString('en-US', {\n    weekday: 'long'\n  });\n  const time = dateObj.toLocaleTimeString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false\n  }); // Example: 10:30\n\n  return {\n    dayOfWeek,\n    date,\n    time\n  };\n};","map":{"version":3,"names":["baseDate","Date","getDateForSelectedDay","day","dayMap","offset","selectedDate","setDate","getDate","convertToDayDateTime","isoString","date","console","log","dayOfWeek","toLocaleDateString","weekday","time","dateObj","toLocaleTimeString","hour","minute","hour12"],"sources":["C:/Users/amyeoz/Downloads/testing/src/calendar/days.js"],"sourcesContent":["// Base reference date: 07/10/2024 is Monday\r\nexport const baseDate = new Date(2024, 9, 7); // October is month 9 (zero-indexed)\r\n\r\nexport const getDateForSelectedDay = (day) => {\r\n    const dayMap = { \"Monday\": 0, \"Tuesday\": 1, \"Wednesday\": 2, \"Thursday\": 3, \"Friday\": 4 };\r\n    const offset = dayMap[day];\r\n    const selectedDate = new Date(baseDate);\r\n    selectedDate.setDate(baseDate.getDate() + offset); // Add the offset to 07/10/2024 (Monday)\r\n    return selectedDate;\r\n  };\r\n\r\nexport const convertToDayDateTime = (isoString) => {\r\n    const date = new Date(isoString);\r\n    console.log(date)\r\n    const dayOfWeek = date.toLocaleDateString('en-US', { weekday: 'long' });\r\n    const time = dateObj.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: false }); // Example: 10:30\r\n    return { dayOfWeek, date, time };\r\n}"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAAjB,C,CAAuC;;AAE9C,OAAO,MAAMC,qBAAqB,GAAIC,GAAD,IAAS;EAC1C,MAAMC,MAAM,GAAG;IAAE,UAAU,CAAZ;IAAe,WAAW,CAA1B;IAA6B,aAAa,CAA1C;IAA6C,YAAY,CAAzD;IAA4D,UAAU;EAAtE,CAAf;EACA,MAAMC,MAAM,GAAGD,MAAM,CAACD,GAAD,CAArB;EACA,MAAMG,YAAY,GAAG,IAAIL,IAAJ,CAASD,QAAT,CAArB;EACAM,YAAY,CAACC,OAAb,CAAqBP,QAAQ,CAACQ,OAAT,KAAqBH,MAA1C,EAJ0C,CAIS;;EACnD,OAAOC,YAAP;AACD,CANI;AAQP,OAAO,MAAMG,oBAAoB,GAAIC,SAAD,IAAe;EAC/C,MAAMC,IAAI,GAAG,IAAIV,IAAJ,CAASS,SAAT,CAAb;EACAE,OAAO,CAACC,GAAR,CAAYF,IAAZ;EACA,MAAMG,SAAS,GAAGH,IAAI,CAACI,kBAAL,CAAwB,OAAxB,EAAiC;IAAEC,OAAO,EAAE;EAAX,CAAjC,CAAlB;EACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,kBAAR,CAA2B,OAA3B,EAAoC;IAAEC,IAAI,EAAE,SAAR;IAAmBC,MAAM,EAAE,SAA3B;IAAsCC,MAAM,EAAE;EAA9C,CAApC,CAAb,CAJ+C,CAI0D;;EACzG,OAAO;IAAER,SAAF;IAAaH,IAAb;IAAmBM;EAAnB,CAAP;AACH,CANM"},"metadata":{},"sourceType":"module"}