{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amyeoz\\\\Downloads\\\\timetable_schedule\\\\src\\\\calendar\\\\days.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { DayPilotCalendar, DayPilot } from \"@daypilot/daypilot-lite-react\"; // Import DayPilot\n\nimport \"./Calendar.css\";\nimport { convertToDayDateTime, processFormDates, convertToCSV, downloadCSV, getDateForSelectedDay } from './days.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  wrap: {\n    display: \"flex\"\n  },\n  main: {\n    flexGrow: \"1\"\n  }\n};\n\nconst Calendar = () => {\n  _s();\n\n  const [calendar, setCalendar] = useState(null);\n  const [events, setEvents] = useState([]);\n  const startDate = \"2024-10-07\"; // Fixed start date for the week (Monday)\n\n  const config = {\n    viewType: \"days\",\n    durationBarVisible: false,\n    days: 5,\n    // Show only Monday to Friday\n    timeRangeSelectedHandling: \"Enabled\",\n    businessBeginsHour: 7,\n    businessEndsHour: 20,\n    // Time range selection and event creation logic goes here...\n    events: events\n  }; // Helper function to read the CSV file and parse it into event objects\n\n  const parseCSVFile = file => {\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      const csvContent = e.target.result;\n      const rows = csvContent.split(\"\\n\").slice(1); // Skip the header row\n\n      const parsedEvents = rows.map(row => {\n        const [module, classInfo, classType, timeSlot, room, timeslotDay, timeslotStart, timeslotEnd] = row.split(\",\");\n        const startDateTime = processFormDates(timeslotDay, timeslotStart, timeslotEnd).startDateTime;\n        const endDateTime = processFormDates(timeslotDay, timeslotStart, timeslotEnd).endDateTime;\n        return {\n          id: DayPilot.guid(),\n          start: new DayPilot.Date(startDateTime),\n          end: new DayPilot.Date(endDateTime),\n          text: module,\n          classroom: room,\n          class: classInfo,\n          classType: classType\n        };\n      });\n      setEvents(parsedEvents); // Update the events state\n\n      calendar.update(); // Force the calendar to update\n    };\n\n    reader.readAsText(file); // Read the CSV file as text\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.buttonWrap,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const csvContent = convertToCSV(events); // Convert events to CSV format\n\n          downloadCSV(csvContent, 'schedule.csv'); // Trigger the download\n        },\n        children: \"Export to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: e => {\n          const file = e.target.files[0];\n\n          if (file) {\n            parseCSVFile(file);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Import from CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.main,\n      children: /*#__PURE__*/_jsxDEV(DayPilotCalendar, { ...config,\n        startDate: startDate,\n        controlRef: setCalendar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"zuRJhdDuPNajtmGWqS48/Wqf5uw=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useEffect","useState","DayPilotCalendar","DayPilot","convertToDayDateTime","processFormDates","convertToCSV","downloadCSV","getDateForSelectedDay","styles","wrap","display","main","flexGrow","Calendar","calendar","setCalendar","events","setEvents","startDate","config","viewType","durationBarVisible","days","timeRangeSelectedHandling","businessBeginsHour","businessEndsHour","parseCSVFile","file","reader","FileReader","onload","e","csvContent","target","result","rows","split","slice","parsedEvents","map","row","module","classInfo","classType","timeSlot","room","timeslotDay","timeslotStart","timeslotEnd","startDateTime","endDateTime","id","guid","start","Date","end","text","classroom","class","update","readAsText","buttonWrap","files"],"sources":["C:/Users/amyeoz/Downloads/timetable_schedule/src/calendar/days.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { DayPilotCalendar, DayPilot } from \"@daypilot/daypilot-lite-react\"; // Import DayPilot\r\nimport \"./Calendar.css\";\r\nimport { convertToDayDateTime, processFormDates, convertToCSV, downloadCSV, getDateForSelectedDay } from './days.js';\r\n\r\nconst styles = {\r\n  wrap: {\r\n    display: \"flex\"\r\n  },\r\n  main: {\r\n    flexGrow: \"1\"\r\n  }\r\n};\r\n\r\nconst Calendar = () => {\r\n  const [calendar, setCalendar] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const startDate = \"2024-10-07\"; // Fixed start date for the week (Monday)\r\n\r\n  const config = {\r\n    viewType: \"days\",\r\n    durationBarVisible: false,\r\n    days: 5, // Show only Monday to Friday\r\n    timeRangeSelectedHandling: \"Enabled\",\r\n    businessBeginsHour: 7,\r\n    businessEndsHour: 20,\r\n    // Time range selection and event creation logic goes here...\r\n    events: events\r\n  };\r\n\r\n  // Helper function to read the CSV file and parse it into event objects\r\n  const parseCSVFile = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csvContent = e.target.result;\r\n      const rows = csvContent.split(\"\\n\").slice(1); // Skip the header row\r\n\r\n      const parsedEvents = rows.map(row => {\r\n        const [module, classInfo, classType, timeSlot, room, timeslotDay, timeslotStart, timeslotEnd] = row.split(\",\");\r\n        const startDateTime = processFormDates(timeslotDay, timeslotStart, timeslotEnd).startDateTime;\r\n        const endDateTime = processFormDates(timeslotDay, timeslotStart, timeslotEnd).endDateTime;\r\n\r\n        return {\r\n          id: DayPilot.guid(),\r\n          start: new DayPilot.Date(startDateTime),\r\n          end: new DayPilot.Date(endDateTime),\r\n          text: module,\r\n          classroom: room,\r\n          class: classInfo,\r\n          classType: classType\r\n        };\r\n      });\r\n\r\n      setEvents(parsedEvents); // Update the events state\r\n      calendar.update(); // Force the calendar to update\r\n    };\r\n\r\n    reader.readAsText(file); // Read the CSV file as text\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={styles.buttonWrap}>\r\n        <button onClick={() => {\r\n          const csvContent = convertToCSV(events);  // Convert events to CSV format\r\n          downloadCSV(csvContent, 'schedule.csv');  // Trigger the download\r\n        }}>\r\n          Export to CSV\r\n        </button>\r\n\r\n        {/* Add the file input for CSV import */}\r\n        <input\r\n          type=\"file\"\r\n          accept=\".csv\"\r\n          onChange={(e) => {\r\n            const file = e.target.files[0];\r\n            if (file) {\r\n              parseCSVFile(file);\r\n            }\r\n          }}\r\n        />\r\n        <button>Import from CSV</button>\r\n      </div>\r\n\r\n      <div style={styles.main}>\r\n        <DayPilotCalendar\r\n          {...config}\r\n          startDate={startDate}\r\n          controlRef={setCalendar}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}