{"version":3,"file":"40.va-report-components.js","mappings":"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","sources":["webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/screen-reader-message-preset.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-unique-id.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/utils/batch.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/components/Context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/hooks/useSelector.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/connect/selectorFactory.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/connect/wrapMapToProps.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/connect/invalidArgFactory.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/connect/mergeProps.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/utils/Subscription.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/utils/shallowEqual.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/utils/useSyncExternalStore.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/components/connect.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/connect/mapStateToProps.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/connect/mapDispatchToProps.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/utils/bindActionCreators.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/components/Provider.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-redux/es/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/redux/es/redux.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/dev-warning.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/invariant.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/action-creators.js","webpack://vaReportComponents/../node_modules/raf-schd/dist/raf-schd.esm.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/debug/timings.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/what-is-dragged-over.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/native-with-fallback.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/dimension-structures.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/is-within.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/visibility/is-position-in-frame.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-best-scrollable-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/position.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/can-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/axis.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/config.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-percentage.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/dampen-value-by-time.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/get-value.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/get-value-from-distance.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/min-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/get-distance-thresholds.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-scroll/adjust-for-size-limits.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-window-scroll-change.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/get-droppable-scroll-change.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/jump-scroller.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/auto-scroller/fluid-scroller/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/can-start-drag.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/drop/drop-animation-finish-middleware.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/event-bindings/bind-events.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/drop/drop-animation-flush-on-scroll-middleware.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-impact-location.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/animation.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/drop/get-drop-duration.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/no-impact.js","webpack://vaReportComponents/../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack://vaReportComponents/../node_modules/css-box-model/dist/css-box-model.esm.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/spacing.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/visibility/is-partially-visible-through-frame.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/visibility/is-totally-visible-through-frame.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/visibility/is-visible.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-displacement-groups.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/update-displacement-visibility/recompute.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/with-scroll-change/with-droppable-displacement.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/did-start-after-critical.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-combined-item-displacement.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-center-from-impact/get-page-border-box-center/when-combining.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-draggables-inside-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-center-from-impact/move-relative-to.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-center-from-impact/get-page-border-box-center/when-reordering.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-center-from-impact/get-page-border-box-center/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-center-from-impact/get-client-border-box-center/get-client-from-page-border-box-center.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/with-scroll-change/with-viewport-displacement.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-center-from-impact/get-client-border-box-center/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/drop/drop-middleware.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/drop/get-drop-impact.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/drop/get-new-home-client-offset.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/lift.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/pending-drop.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/responders/async-marshal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/responders/publisher.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/responders/expiring-announce.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/responders/responders-middleware.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/responders/is-equal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/empty.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/window/get-window-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/scroll-listener.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/scroll-listener.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/util/get-subject.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/util/clip.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/scroll-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-displaced-by.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-lift-effect.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-home-location.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/is-movement-allowed.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-cross-axis/get-best-cross-axis-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-cross-axis/without-starting-displacement.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/is-home-of.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/remove-draggable-from-list.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/calculate-drag-impact/calculate-reorder-impact.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/with-placeholder.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-to-next-place/is-totally-visible-in-new-location.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/visibility/is-totally-visible-through-frame-on-axis.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-cross-axis/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-cross-axis/get-closest-draggable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-cross-axis/move-to-new-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/scroll-viewport.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/update-displacement-visibility/speculatively-increase.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-to-next-place/move-to-next-index/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-to-next-place/move-to-next-index/from-reorder.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-to-next-place/move-to-next-index/from-combine.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-to-next-place/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/move-to-next-place/move-to-next-combine/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/move-in-direction/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/patch-droppable-map.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-droppable-over.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/rect.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-is-displaced.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-drag-impact/get-reorder-impact.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-drag-impact/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/with-scroll-change/with-droppable-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-drag-impact/get-combine-impact.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/recompute-placeholders.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/post-reducer/when-moving/update.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/post-reducer/when-moving/refresh-snap.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/publish-while-dragging-in-virtual/adjust-additions-for-scroll-changes.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-frame.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/publish-while-dragging-in-virtual/offset-draggable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/reducer.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/patch-dimension-map.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/type-utils.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/publish-while-dragging-in-virtual/index.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/create-store.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/style.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/dimension-marshal-stopper.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/auto-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/middleware/focus.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/get-document-element.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/get-max-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/window/get-max-window-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/dimension-marshal/get-initial-publish.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/window/get-viewport.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/dimension-marshal/dimension-marshal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/dimension-marshal/while-dragging-publisher.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/registry/create-registry.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/context/app-context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/context/store-context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/get-body-element.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/visually-hidden-style.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-announcer/use-announcer.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/data-attributes.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/window/get-window-from-el.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/is-type-of-element/is-html-element.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/get-elements/find-drag-handle.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-isomorphic-layout-effect.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-previous-ref.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/get-border-box-center-position.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/closest.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/find-closest-draggable-id-from-event.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/is-type-of-element/is-element.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/is-event-in-interactive-element.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/key-codes.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/sensors/util/prevent-standard-key-events.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/sensors/util/supported-page-visibility-event-name.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/sensors/use-mouse-sensor.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/sensors/use-touch-sensor.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-dev.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-dev-setup-warning.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/use-sensor-marshal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/get-elements/find-draggable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/lock.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/use-validate-sensor-hooks.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-style-marshal/get-styles.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-style-marshal/use-style-marshal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/window/scroll-window.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/drag-drop-context/app.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/drag-drop-context/use-startup-validation.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-hidden-text-element/use-hidden-text-element.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/registry/use-registry.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-focus-marshal/use-focus-marshal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/drag-drop-context/embedded-drag-drop-context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/drag-drop-context/error-boundary.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/drag-drop-context/use-unique-context-id.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/drag-drop-context/drag-drop-context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/what-is-dragged-over-from-result.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/is-strict-equal.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/animate-in-out/animate-in-out.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/context/droppable-context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-required-context.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-draggable-publisher/use-draggable-publisher.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-draggable-publisher/get-dimension.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/draggable/get-style.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/draggable/use-validation.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/draggable/draggable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/draggable/connected-draggable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/draggable/draggable-api.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/placeholder/placeholder.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-droppable-publisher/get-closest-scrollable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-droppable-publisher/get-scroll.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-droppable-publisher/get-dimension.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/state/droppable/get-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-droppable-publisher/get-env.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-droppable-publisher/get-listener-options.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-droppable-publisher/use-droppable-publisher.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/droppable/connected-droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/droppable/droppable.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/droppable/use-validation.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/dnd/view/use-sensor-marshal/sensors/use-keyboard-sensor.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-is/cjs/react-is.production.min.js","webpack://vaReportComponents/../node_modules/@sas/nova-commons/node_modules/react-is/index.js"],"sourcesContent":["const dragHandleUsageInstructions = `\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n`;\nconst position = index => index + 1;\n\n// We cannot list what index the Droppable is in automatically as we are not sure how\n// the Droppable's have been configured\nconst onDragStart = start => `\n  You have lifted an item in position ${position(start.source.index)}\n`;\nconst withLocation = (source, destination) => {\n  const isInHomeList = source.droppableId === destination.droppableId;\n  const startPosition = position(source.index);\n  const endPosition = position(destination.index);\n  if (isInHomeList) {\n    return `\n      You have moved the item from position ${startPosition}\n      to position ${endPosition}\n    `;\n  }\n  return `\n    You have moved the item from position ${startPosition}\n    in list ${source.droppableId}\n    to list ${destination.droppableId}\n    in position ${endPosition}\n  `;\n};\nconst withCombine = (id, source, combine) => {\n  const inHomeList = source.droppableId === combine.droppableId;\n  if (inHomeList) {\n    return `\n      The item ${id}\n      has been combined with ${combine.draggableId}`;\n  }\n  return `\n      The item ${id}\n      in list ${source.droppableId}\n      has been combined with ${combine.draggableId}\n      in list ${combine.droppableId}\n    `;\n};\nconst onDragUpdate = update => {\n  const location = update.destination;\n  if (location) {\n    return withLocation(update.source, location);\n  }\n  const combine = update.combine;\n  if (combine) {\n    return withCombine(update.draggableId, update.source, combine);\n  }\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  return 'You are over an area that cannot be dropped on';\n};\nconst returnedToStart = source => `\n  The item has returned to its starting position\n  of ${position(source.index)}\n`;\nconst onDragEnd = result => {\n  if (result.reason === 'CANCEL') {\n    return `\n      Movement cancelled.\n      ${returnedToStart(result.source)}\n    `;\n  }\n  const location = result.destination;\n  const combine = result.combine;\n  if (location) {\n    return `\n      You have dropped the item.\n      ${withLocation(result.source, location)}\n    `;\n  }\n  if (combine) {\n    return `\n      You have dropped the item.\n      ${withCombine(result.draggableId, result.source, combine)}\n    `;\n  }\n  return `\n    The item has been dropped while not over a drop area.\n    ${returnedToStart(result.source)}\n  `;\n};\nconst preset = {\n  dragHandleUsageInstructions,\n  onDragStart,\n  onDragUpdate,\n  onDragEnd\n};\nexport default preset;\n//# sourceMappingURL=screen-reader-message-preset.js.map","import { useMemo } from 'use-memo-one';\nlet count = 0;\nconst defaults = {\n  separator: '::'\n};\nexport function reset() {\n  count = 0;\n}\nexport default function useUniqueId(prefix, options = defaults) {\n  return useMemo(() => `${prefix}${options.separator}${count++}`, [options.separator, prefix]);\n}\n//# sourceMappingURL=use-unique-id.js.map","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nlet batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings\n\nexport const getBatch = () => batch;","import React from 'react';\nexport const ReactReduxContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactReduxContext.displayName = 'ReactRedux';\n}\n\nexport default ReactReduxContext;","import { useContext, useDebugValue } from 'react';\nimport { useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { ReactReduxContext } from '../components/Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStoreWithSelector = notInitialized;\nexport const initializeUseSelector = fn => {\n  useSyncExternalStoreWithSelector = fn;\n};\n\nconst refEquality = (a, b) => a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : () => useContext(context);\n  return function useSelector(selector, equalityFn = refEquality) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(`You must pass a function as an equality function to useSelector`);\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState\n    } = useReduxContext();\n    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport const useSelector = /*#__PURE__*/createSelectorHook();","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"];\nimport verifySubselectors from './verifySubselectors';\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, {\n  areStatesEqual,\n  areOwnPropsEqual,\n  areStatePropsEqual\n}) {\n  let hasRunAtLeastOnce = false;\n  let state;\n  let ownProps;\n  let stateProps;\n  let dispatchProps;\n  let mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps);\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    const stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n}\n// TODO: Add more comments\n// The selector returned by selectorFactory will memoize its results,\n// allowing connect's shouldComponentUpdate to return false if final\n// props have not changed.\nexport default function finalPropsSelectorFactory(dispatch, _ref) {\n  let {\n    initMapStateToProps,\n    initMapDispatchToProps,\n    initMergeProps\n  } = _ref,\n      options = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const mapStateToProps = initMapStateToProps(dispatch, options);\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  const mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps);\n  }\n\n  return pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}","import verifyPlainObject from '../utils/verifyPlainObject';\nexport function wrapMapToPropsConstant( // * Note:\n//  It seems that the dispatch argument\n//  could be a dispatch function in some cases (ex: whenMapDispatchToPropsIsMissing)\n//  and a state object in some others (ex: whenMapStateToPropsIsMissing)\n// eslint-disable-next-line no-unused-vars\ngetConstant) {\n  return function initConstantSelector(dispatch) {\n    const constant = getConstant(dispatch);\n\n    function constantSelector() {\n      return constant;\n    }\n\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n// TODO Can this get pulled out so that we can subscribe directly to the store if we don't need ownProps?\n\nexport function getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\n\nexport function wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, {\n    displayName\n  }) {\n    const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch, undefined);\n    }; // allow detectFactoryAndVerify to get ownProps\n\n\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      let props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (process.env.NODE_ENV !== 'production') verifyPlainObject(props, displayName, methodName);\n      return props;\n    };\n\n    return proxy;\n  };\n}","export function createInvalidArgFactory(arg, name) {\n  return (dispatch, options) => {\n    throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`);\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  // @ts-ignore\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, {\n    displayName,\n    areMergedPropsEqual\n  }) {\n    let hasRunOnce = false;\n    let mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function mergePropsFactory(mergeProps) {\n  return !mergeProps ? () => defaultMergeProps : typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : createInvalidArgFactory(mergeProps, 'mergeProps');\n}","import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe,\n    tryUnsubscribe,\n    getListeners: () => listeners\n  };\n  return subscription;\n}","import { useEffect, useLayoutEffect } from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\n\nexport const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexport const useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;","function is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}","export const notInitialized = () => {\n  throw new Error('uSES not initialized!');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"reactReduxForwardedRef\"];\n\n/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport hoistStatics from 'hoist-non-react-statics';\nimport React, { useContext, useMemo, useRef } from 'react';\nimport { isValidElementType, isContextConsumer } from 'react-is';\nimport defaultSelectorFactory from '../connect/selectorFactory';\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps';\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps';\nimport { mergePropsFactory } from '../connect/mergeProps';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport shallowEqual from '../utils/shallowEqual';\nimport warning from '../utils/warning';\nimport { ReactReduxContext } from './Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStore = notInitialized;\nexport const initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = shallowEqual,\n  areStatePropsEqual = shallowEqual,\n  areMergedPropsEqual = shallowEqual,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      warning('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);\n  const initMergeProps = mergePropsFactory(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !isValidElementType(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = useMemo(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = useContext(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return _extends({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = useRef();\n      const lastWrapperProps = useRef(wrapperProps);\n      const childPropsFromStoreUpdate = useRef();\n      const renderIsScheduled = useRef(false);\n      const isProcessingDispatch = useRef(false);\n      const isMounted = useRef(false);\n      const latestSubscriptionCallbackError = useRef();\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = useMemo(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = useMemo(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          React.createElement(WrappedComponent, _extends({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = React.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return hoistStatics(forwarded, WrappedComponent);\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nexport default connect;","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapStateToPropsFactory(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(() => ({})) : typeof mapStateToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : createInvalidArgFactory(mapStateToProps, 'mapStateToProps');\n}","import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nimport { createInvalidArgFactory } from './invalidArgFactory';\nexport function mapDispatchToPropsFactory(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(dispatch => // @ts-ignore\n  bindActionCreators(mapDispatchToProps, dispatch)) : !mapDispatchToProps ? wrapMapToPropsConstant(dispatch => ({\n    dispatch\n  })) : typeof mapDispatchToProps === 'function' ? // @ts-ignore\n  wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : createInvalidArgFactory(mapDispatchToProps, 'mapDispatchToProps');\n}","export default function bindActionCreators(actionCreators, dispatch) {\n  const boundActionCreators = {};\n\n  for (const key in actionCreators) {\n    const actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = (...args) => dispatch(actionCreator(...args));\n    }\n  }\n\n  return boundActionCreators;\n}","import React, { useMemo } from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children,\n  serverState\n}) {\n  const contextValue = useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined\n    };\n  }, [store, serverState]);\n  const previousState = useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch';\nimport { initializeUseSelector } from './hooks/useSelector';\nimport { initializeConnect } from './components/connect';\ninitializeUseSelector(useSyncExternalStoreWithSelector);\ninitializeConnect(useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };\nexport * from './exports';","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\n    function miniKindOf(val) {\n      if (val === void 0) return 'undefined';\n      if (val === null) return 'null';\n      var type = typeof val;\n\n      switch (type) {\n        case 'boolean':\n        case 'string':\n        case 'number':\n        case 'symbol':\n        case 'function':\n          {\n            return type;\n          }\n      }\n\n      if (Array.isArray(val)) return 'array';\n      if (isDate(val)) return 'date';\n      if (isError(val)) return 'error';\n      var constructorName = ctorName(val);\n\n      switch (constructorName) {\n        case 'Symbol':\n        case 'Promise':\n        case 'WeakMap':\n        case 'WeakSet':\n        case 'Map':\n        case 'Set':\n          return constructorName;\n      } // other\n\n\n      return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n    }\n\n    function ctorName(val) {\n      return typeof val.constructor === 'function' ? val.constructor.name : null;\n    }\n\n    function isError(val) {\n      return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n    }\n\n    function isDate(val) {\n      if (val instanceof Date) return true;\n      return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n    }\n\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore };\n","const isProduction = process.env.NODE_ENV === 'production';\n// not replacing newlines (which \\s does)\nconst spacesAndTabs = /[ \\t]{2,}/g;\nconst lineStartWithSpaces = /^[ \\t]*/gm;\n\n// using .trim() to clear the any newlines before the first text and after last text\nconst clean = value => value.replace(spacesAndTabs, ' ').replace(lineStartWithSpaces, '').trim();\nconst getDevMessage = message => clean(`\n  %creact-beautiful-dnd\n\n  %c${clean(message)}\n\n  %c👷‍ This is a development only message. It will be removed in production builds.\n`);\nexport const getFormattedMessage = message => [getDevMessage(message),\n// title (green400)\n'color: #00C584; font-size: 1.2em; font-weight: bold;',\n// message\n'line-height: 1.5',\n// footer (purple300)\n'color: #723874;'];\nconst isDisabledFlag = '__react-beautiful-dnd-disable-dev-warnings';\nexport function log(type, message) {\n  // no warnings in production\n  if (isProduction) {\n    return;\n  }\n\n  // manual opt out of warnings\n  if (typeof window !== 'undefined' && window[isDisabledFlag]) {\n    return;\n  }\n\n  // eslint-disable-next-line no-console\n  console[type](...getFormattedMessage(message));\n}\nexport const warning = log.bind(null, 'warn');\nexport const error = log.bind(null, 'error');\n//# sourceMappingURL=dev-warning.js.map","/* eslint-disable no-restricted-syntax */\nconst isProduction = process.env.NODE_ENV === 'production';\n// eslint-disable-next-line @sas/i18n/jsx-to-localize\nconst prefix = 'Invariant failed';\n// Want to use this:\n// export class RbdInvariant extends Error { }\n// But it causes babel to bring in a lot of code\nexport class RbdInvariant {\n  constructor(message) {\n    this.message = message;\n  }\n}\nRbdInvariant.prototype.toString = function toString() {\n  return this.message;\n};\n\n// A copy-paste of tiny-invariant but with a custom error type\n// Throw an error if the condition fails\nexport function invariant(condition, message) {\n  if (condition) {\n    return;\n  }\n  if (isProduction) {\n    // In production we strip the message but still throw\n    throw new RbdInvariant(prefix);\n  } else {\n    // When not in production we allow the message to pass through\n    // *This block will be removed in production builds*\n    throw new RbdInvariant(`${prefix}: ${message || ''}`);\n  }\n}\n//# sourceMappingURL=invariant.js.map","export const beforeInitialCapture = args => ({\n  type: 'BEFORE_INITIAL_CAPTURE',\n  payload: args\n});\nexport const lift = args => ({\n  type: 'LIFT',\n  payload: args\n});\nexport const initialPublish = args => ({\n  type: 'INITIAL_PUBLISH',\n  payload: args\n});\nexport const publishWhileDragging = args => ({\n  type: 'PUBLISH_WHILE_DRAGGING',\n  payload: args\n});\nexport const collectionStarting = () => ({\n  type: 'COLLECTION_STARTING',\n  payload: null\n});\nexport const updateDroppableScroll = args => ({\n  type: 'UPDATE_DROPPABLE_SCROLL',\n  payload: args\n});\nexport const updateDroppableIsEnabled = args => ({\n  type: 'UPDATE_DROPPABLE_IS_ENABLED',\n  payload: args\n});\nexport const updateDroppableIsCombineEnabled = args => ({\n  type: 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED',\n  payload: args\n});\nexport const move = args => ({\n  type: 'MOVE',\n  payload: args\n});\nexport const moveByWindowScroll = args => ({\n  type: 'MOVE_BY_WINDOW_SCROLL',\n  payload: args\n});\nexport const updateViewportMaxScroll = args => ({\n  type: 'UPDATE_VIEWPORT_MAX_SCROLL',\n  payload: args\n});\nexport const moveUp = () => ({\n  type: 'MOVE_UP',\n  payload: null\n});\nexport const moveDown = () => ({\n  type: 'MOVE_DOWN',\n  payload: null\n});\nexport const moveRight = () => ({\n  type: 'MOVE_RIGHT',\n  payload: null\n});\nexport const moveLeft = () => ({\n  type: 'MOVE_LEFT',\n  payload: null\n});\nexport const flush = () => ({\n  type: 'FLUSH',\n  payload: null\n});\nexport const animateDrop = args => ({\n  type: 'DROP_ANIMATE',\n  payload: args\n});\nexport const completeDrop = args => ({\n  type: 'DROP_COMPLETE',\n  payload: args\n});\nexport const drop = args => ({\n  type: 'DROP',\n  payload: args\n});\nexport const cancel = () => drop({\n  reason: 'CANCEL'\n});\nexport const dropPending = args => ({\n  type: 'DROP_PENDING',\n  payload: args\n});\nexport const dropAnimationFinished = () => ({\n  type: 'DROP_ANIMATION_FINISHED',\n  payload: null\n});\n//# sourceMappingURL=action-creators.js.map","var rafSchd = function rafSchd(fn) {\n  var lastArgs = [];\n  var frameId = null;\n\n  var wrapperFn = function wrapperFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    lastArgs = args;\n\n    if (frameId) {\n      return;\n    }\n\n    frameId = requestAnimationFrame(function () {\n      frameId = null;\n      fn.apply(void 0, lastArgs);\n    });\n  };\n\n  wrapperFn.cancel = function () {\n    if (!frameId) {\n      return;\n    }\n\n    cancelAnimationFrame(frameId);\n    frameId = null;\n  };\n\n  return wrapperFn;\n};\n\nexport default rafSchd;\n","const records = {};\nlet isEnabled = false;\nconst isTimingsEnabled = () => isEnabled;\nexport const forceEnable = () => {\n  isEnabled = true;\n};\n// Debug: uncomment to enable\n// forceEnable();\nexport const start = key => {\n  // we want to strip all the code out for production builds\n  // draw back: can only do timings in dev env (which seems to be fine for now)\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isTimingsEnabled()) {\n      return;\n    }\n    const now = performance.now();\n    records[key] = now;\n  }\n};\nexport const finish = key => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isTimingsEnabled()) {\n      return;\n    }\n    const now = performance.now();\n    const previous = records[key];\n    if (!previous) {\n      // eslint-disable-next-line no-console\n      console.warn('cannot finish timing as no previous time found', key);\n      return;\n    }\n    const result = now - previous;\n    const rounded = result.toFixed(2);\n    const style = (() => {\n      if (result < 12) {\n        return {\n          textColor: 'green',\n          symbol: '✅'\n        };\n      }\n      if (result < 40) {\n        return {\n          textColor: 'orange',\n          symbol: '⚠️'\n        };\n      }\n      return {\n        textColor: 'red',\n        symbol: '❌'\n      };\n    })();\n\n    // eslint-disable-next-line no-console\n    console.log(`${style.symbol} %cTiming %c${rounded} %cms %c${key}`,\n    // title\n    'color: blue; font-weight: bold;',\n    // result\n    `color: ${style.textColor}; font-size: 1.1em;`,\n    // ms\n    'color: grey;',\n    // key\n    'color: purple; font-weight: bold;');\n  }\n};\n//# sourceMappingURL=timings.js.map","export default (impact => {\n  const at = impact.at;\n  if (!at) {\n    return null;\n  }\n  if (at.type === 'REORDER') {\n    return at.destination.droppableId;\n  }\n  return at.combine.droppableId;\n});\n//# sourceMappingURL=what-is-dragged-over.js.map","/* eslint-disable no-restricted-globals */\n\nexport function isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n// Using this helper to ensure there are correct flow types\n// https://github.com/facebook/flow/issues/2221\nexport function values(map) {\n  if (Object.values) {\n    // $FlowFixMe - Object.values currently does not have good flow support\n    return Object.values(map);\n  }\n  return Object.keys(map).map(key => map[key]);\n}\n// Could also extend to pass index and list\n\n// TODO: swap order\nexport function findIndex(list, predicate) {\n  if (list.findIndex) {\n    return list.findIndex(predicate);\n  }\n\n  // Using a for loop so that we can exit early\n  for (let i = 0; i < list.length; i++) {\n    if (predicate(list[i])) {\n      return i;\n    }\n  }\n\n  // Array.prototype.find returns -1 when nothing is found\n  return -1;\n}\nexport function find(list, predicate) {\n  if (list.find) {\n    return list.find(predicate);\n  }\n  const index = findIndex(list, predicate);\n  if (index !== -1) {\n    return list[index];\n  }\n\n  // Array.prototype.find returns undefined when nothing is found\n  return undefined;\n}\n// Using this rather than Array.from as Array.from adds 2kb to the gzip\n// document.querySelector actually returns Element[], but flow thinks it is HTMLElement[]\n// So we downcast the result to Element[]\nexport function toArray(list) {\n  return Array.prototype.slice.call(list);\n}\n//# sourceMappingURL=native-with-fallback.js.map","import memoizeOne from 'memoize-one';\nimport { values } from '../native-with-fallback';\nexport const toDroppableMap = memoizeOne(droppables => droppables.reduce((previous, current) => {\n  previous[current.descriptor.id] = current;\n  return previous;\n}, {}));\nexport const toDraggableMap = memoizeOne(draggables => draggables.reduce((previous, current) => {\n  previous[current.descriptor.id] = current;\n  return previous;\n}, {}));\nexport const toDroppableList = memoizeOne(droppables => values(droppables));\nexport const toDraggableList = memoizeOne(draggables => values(draggables));\n//# sourceMappingURL=dimension-structures.js.map","// is a value between two other values\nexport default ((lowerBound, upperBound) => value => lowerBound <= value && value <= upperBound);\n//# sourceMappingURL=is-within.js.map","import isWithin from '../is-within';\nexport default function isPositionInFrame(frame) {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return function run(point) {\n    return isWithinVertical(point.y) && isWithinHorizontal(point.x);\n  };\n}\n//# sourceMappingURL=is-position-in-frame.js.map","import memoizeOne from 'memoize-one';\nimport { invariant } from '../../../invariant';\nimport { find } from '../../../native-with-fallback';\nimport { toDroppableList } from '../../dimension-structures';\nimport isPositionInFrame from '../../visibility/is-position-in-frame';\nconst getScrollableDroppables = memoizeOne(droppables => toDroppableList(droppables).filter(droppable => {\n  // exclude disabled droppables\n  if (!droppable.isEnabled) {\n    return false;\n  }\n\n  // only want droppables that are scrollable\n  if (!droppable.frame) {\n    return false;\n  }\n  return true;\n}));\nconst getScrollableDroppableOver = (target, droppables) => {\n  const maybe = find(getScrollableDroppables(droppables), droppable => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(droppable.frame, 'Invalid result');\n    return isPositionInFrame(droppable.frame.pageMarginBox)(target);\n  });\n  return maybe;\n};\nexport default (({\n  center,\n  destination,\n  droppables\n}) => {\n  // We need to scroll the best droppable frame we can so that the\n  // placeholder buffer logic works correctly\n  if (destination) {\n    const dimension = droppables[destination];\n    if (!dimension.frame) {\n      return null;\n    }\n    return dimension;\n  }\n\n  // 2. If we are not over a droppable - are we over a droppable frame?\n  const dimension = getScrollableDroppableOver(center, droppables);\n  return dimension;\n});\n//# sourceMappingURL=get-best-scrollable-droppable.js.map","export const origin = {\n  x: 0,\n  y: 0\n};\nexport const add = (point1, point2) => ({\n  x: point1.x + point2.x,\n  y: point1.y + point2.y\n});\nexport const subtract = (point1, point2) => ({\n  x: point1.x - point2.x,\n  y: point1.y - point2.y\n});\nexport const isEqual = (point1, point2) => point1.x === point2.x && point1.y === point2.y;\nexport const negate = point => ({\n  // if the value is already 0, do not return -0\n  x: point.x !== 0 ? -point.x : 0,\n  y: point.y !== 0 ? -point.y : 0\n});\n// Allows you to build a position from values.\n// Really useful when working with the Axis type\n// patch('x', 5)    = { x: 5, y: 0 }\n// patch('y', 5, 1) = { x: 1, y: 5 }\nexport const patch = (line, value, otherValue = 0) => {\n  if (line === 'x') {\n    return {\n      x: value,\n      y: otherValue\n    };\n  }\n  return {\n    x: otherValue,\n    y: value\n  };\n};\n// Returns the distance between two points\n// https://www.mathsisfun.com/algebra/distance-2-points.html\nexport const distance = (point1, point2) => Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n// When given a list of points, it finds the smallest distance to any point\nexport const closest = (target, points) => Math.min(...points.map(point => distance(target, point)));\n// used to apply any function to both values of a point\n// eg: const floor = apply(Math.floor)(point);\nexport const apply = fn => point => ({\n  x: fn(point.x),\n  y: fn(point.y)\n});\n//# sourceMappingURL=position.js.map","import { add, apply, isEqual, origin } from '../position';\nconst smallestSigned = apply(value => {\n  if (value === 0) {\n    return 0;\n  }\n  return value > 0 ? 1 : -1;\n});\n// We need to figure out how much of the movement\n// cannot be done with a scroll\nexport const getOverlap = (() => {\n  const getRemainder = (target, max) => {\n    if (target < 0) {\n      return target;\n    }\n    if (target > max) {\n      return target - max;\n    }\n    return 0;\n  };\n  return ({\n    current,\n    max,\n    change\n  }) => {\n    const targetScroll = add(current, change);\n    const overlap = {\n      x: getRemainder(targetScroll.x, max.x),\n      y: getRemainder(targetScroll.y, max.y)\n    };\n    if (isEqual(overlap, origin)) {\n      return null;\n    }\n    return overlap;\n  };\n})();\nexport const canPartiallyScroll = ({\n  max: rawMax,\n  current,\n  change\n}) => {\n  // It is possible for the max scroll to be greater than the current scroll\n  // when there are scrollbars on the cross axis. We adjust for this by\n  // increasing the max scroll point if needed\n  // This will allow movements backwards even if the current scroll is greater than the max scroll\n  const max = {\n    x: Math.max(current.x, rawMax.x),\n    y: Math.max(current.y, rawMax.y)\n  };\n  // Only need to be able to move the smallest amount in the desired direction\n  const smallestChange = smallestSigned(change);\n  const overlap = getOverlap({\n    max,\n    current,\n    change: smallestChange\n  });\n\n  // no overlap at all - we can move there!\n  if (!overlap) {\n    return true;\n  }\n\n  // if there was an x value, but there is no x overlap - then we can scroll on the x!\n  if (smallestChange.x !== 0 && overlap.x === 0) {\n    return true;\n  }\n\n  // if there was an y value, but there is no y overlap - then we can scroll on the y!\n  if (smallestChange.y !== 0 && overlap.y === 0) {\n    return true;\n  }\n  return false;\n};\nexport const canScrollWindow = (viewport, change) => canPartiallyScroll({\n  current: viewport.scroll.current,\n  max: viewport.scroll.max,\n  change\n});\nexport const getWindowOverlap = (viewport, change) => {\n  if (!canScrollWindow(viewport, change)) {\n    return null;\n  }\n  const max = viewport.scroll.max;\n  const current = viewport.scroll.current;\n  return getOverlap({\n    current,\n    max,\n    change\n  });\n};\nexport const canScrollDroppable = (droppable, change) => {\n  const frame = droppable.frame;\n\n  // Cannot scroll when there is no scrollable\n  if (!frame) {\n    return false;\n  }\n  return canPartiallyScroll({\n    current: frame.scroll.current,\n    max: frame.scroll.max,\n    change\n  });\n};\nexport const getDroppableOverlap = (droppable, change) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return null;\n  }\n  if (!canScrollDroppable(droppable, change)) {\n    return null;\n  }\n  return getOverlap({\n    current: frame.scroll.current,\n    max: frame.scroll.max,\n    change\n  });\n};\n//# sourceMappingURL=can-scroll.js.map","export const vertical = {\n  direction: 'vertical',\n  line: 'y',\n  crossAxisLine: 'x',\n  start: 'top',\n  end: 'bottom',\n  size: 'height',\n  crossAxisStart: 'left',\n  crossAxisEnd: 'right',\n  crossAxisSize: 'width'\n};\nexport const horizontal = {\n  direction: 'horizontal',\n  line: 'x',\n  crossAxisLine: 'y',\n  start: 'left',\n  end: 'right',\n  size: 'width',\n  crossAxisStart: 'top',\n  crossAxisEnd: 'bottom',\n  crossAxisSize: 'height'\n};\n//# sourceMappingURL=axis.js.map","// Values used to control how the fluid auto scroll feels\nconst config = {\n  // percentage distance from edge of container:\n  startFromPercentage: 0.25,\n  maxScrollAtPercentage: 0.05,\n  // pixels per frame\n  maxPixelScroll: 28,\n  // A function used to ease a percentage value\n  // A simple linear function would be: (percentage) => percentage;\n  // percentage is between 0 and 1\n  // result must be between 0 and 1\n  ease: percentage => Math.pow(percentage, 2),\n  durationDampening: {\n    // ms: how long to dampen the speed of an auto scroll from the start of a drag\n    stopDampeningAt: 1200,\n    // ms: when to start accelerating the reduction of duration dampening\n    accelerateAt: 360\n  }\n};\nexport default config;\n//# sourceMappingURL=config.js.map","import { warning } from '../../../dev-warning';\nexport default (({\n  startOfRange,\n  endOfRange,\n  current\n}) => {\n  const range = endOfRange - startOfRange;\n  if (range === 0) {\n    warning(`\n      Detected distance range of 0 in the fluid auto scroller\n      This is unexpected and would cause a divide by 0 issue.\n      Not allowing an auto scroll\n    `);\n    return 0;\n  }\n  const currentInRange = current - startOfRange;\n  const percentage = currentInRange / range;\n  return percentage;\n});\n//# sourceMappingURL=get-percentage.js.map","import config from '../../config';\nimport getPercentage from '../../get-percentage';\nimport minScroll from './min-scroll';\nconst accelerateAt = config.durationDampening.accelerateAt;\nconst stopAt = config.durationDampening.stopDampeningAt;\nexport default ((proposedScroll, dragStartTime) => {\n  const startOfRange = dragStartTime;\n  const endOfRange = stopAt;\n  const now = Date.now();\n  const runTime = now - startOfRange;\n\n  // we have finished the time dampening period\n  if (runTime >= stopAt) {\n    return proposedScroll;\n  }\n\n  // Up to this point we know there is a proposed scroll\n  // but we have not reached our accelerate point\n  // Return the minimum amount of scroll\n  if (runTime < accelerateAt) {\n    return minScroll;\n  }\n  const betweenAccelerateAtAndStopAtPercentage = getPercentage({\n    startOfRange: accelerateAt,\n    endOfRange,\n    current: runTime\n  });\n  const scroll = proposedScroll * config.ease(betweenAccelerateAtAndStopAtPercentage);\n  return Math.ceil(scroll);\n});\n//# sourceMappingURL=dampen-value-by-time.js.map","import dampenValueByTime from './dampen-value-by-time';\nimport getValueFromDistance from './get-value-from-distance';\nimport minScroll from './min-scroll';\nexport default (({\n  distanceToEdge,\n  thresholds,\n  dragStartTime,\n  shouldUseTimeDampening\n}) => {\n  const scroll = getValueFromDistance(distanceToEdge, thresholds);\n\n  // not enough distance to trigger a minimum scroll\n  // we can bail here\n  if (scroll === 0) {\n    return 0;\n  }\n\n  // Dampen an auto scroll speed based on duration of drag\n  if (!shouldUseTimeDampening) {\n    return scroll;\n  }\n\n  // Once we know an auto scroll should occur based on distance,\n  // we must let at least 1px through to trigger a scroll event an\n  // another auto scroll call\n  return Math.max(dampenValueByTime(scroll, dragStartTime), minScroll);\n});\n//# sourceMappingURL=get-value.js.map","import config from '../../config';\nimport getPercentage from '../../get-percentage';\nimport minScroll from './min-scroll';\nexport default ((distanceToEdge, thresholds) => {\n  /*\n  // This function only looks at the distance to one edge\n  // Example: looking at bottom edge\n  |----------------------------------|\n  |                                  |\n  |                                  |\n  |                                  |\n  |                                  |\n  |                                  | => no scroll in this range\n  |                                  |\n  |                                  |\n  |  startScrollingFrom (eg 100px)   |\n  |                                  |\n  |                                  | => increased scroll value the closer to maxScrollValueAt\n  |  maxScrollValueAt (eg 10px)      |\n  |                                  | => max scroll value in this range\n  |----------------------------------|\n  */\n  // too far away to auto scroll\n  if (distanceToEdge > thresholds.startScrollingFrom) {\n    return 0;\n  }\n\n  // use max speed when on or over boundary\n  if (distanceToEdge <= thresholds.maxScrollValueAt) {\n    return config.maxPixelScroll;\n  }\n\n  // when just going on the boundary return the minimum integer\n  if (distanceToEdge === thresholds.startScrollingFrom) {\n    return minScroll;\n  }\n\n  // to get the % past startScrollingFrom we will calculate\n  // the % the value is from maxScrollValueAt and then invert it\n  const percentageFromMaxScrollValueAt = getPercentage({\n    startOfRange: thresholds.maxScrollValueAt,\n    endOfRange: thresholds.startScrollingFrom,\n    current: distanceToEdge\n  });\n  const percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;\n  const scroll = config.maxPixelScroll * config.ease(percentageFromStartScrollingFrom);\n  // scroll will always be a positive integer\n  return Math.ceil(scroll);\n});\n//# sourceMappingURL=get-value-from-distance.js.map","// A scroll event will only be triggered when there is a value of at least 1px change\nexport default 1;\n//# sourceMappingURL=min-scroll.js.map","import getDistanceThresholds from './get-distance-thresholds';\nimport getValue from './get-value';\nexport default (({\n  container,\n  distanceToEdges,\n  dragStartTime,\n  axis,\n  shouldUseTimeDampening\n}) => {\n  const thresholds = getDistanceThresholds(container, axis);\n  const isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];\n  if (isCloserToEnd) {\n    return getValue({\n      distanceToEdge: distanceToEdges[axis.end],\n      thresholds,\n      dragStartTime,\n      shouldUseTimeDampening\n    });\n  }\n  return -1 * getValue({\n    distanceToEdge: distanceToEdges[axis.start],\n    thresholds,\n    dragStartTime,\n    shouldUseTimeDampening\n  });\n});\n//# sourceMappingURL=index.js.map","import config from '../../config';\n\n// all in pixels\n\n// converts the percentages in the config into actual pixel values\n\nexport default ((container, axis) => {\n  const startScrollingFrom = container[axis.size] * config.startFromPercentage;\n  const maxScrollValueAt = container[axis.size] * config.maxScrollAtPercentage;\n  const thresholds = {\n    startScrollingFrom,\n    maxScrollValueAt\n  };\n  return thresholds;\n});\n//# sourceMappingURL=get-distance-thresholds.js.map","import { horizontal, vertical } from '../../../axis';\nimport { apply, isEqual, origin } from '../../../position';\nimport adjustForSizeLimits from './adjust-for-size-limits';\nimport getScrollOnAxis from './get-scroll-on-axis';\n\n// will replace -0 and replace with +0\nconst clean = apply(value => value === 0 ? 0 : value);\nexport default (({\n  dragStartTime,\n  container,\n  subject,\n  center,\n  shouldUseTimeDampening\n}) => {\n  // get distance to each edge\n  const distanceToEdges = {\n    top: center.y - container.top,\n    right: container.right - center.x,\n    bottom: container.bottom - center.y,\n    left: center.x - container.left\n  };\n  // 1. Figure out which x,y values are the best target\n  // 2. Can the container scroll in that direction at all?\n  // If no for both directions, then return null\n  // 3. Is the center close enough to a edge to start a drag?\n  // 4. Based on the distance, calculate the speed at which a scroll should occur\n  // The lower distance value the faster the scroll should be.\n  // Maximum speed value should be hit before the distance is 0\n  // Negative values to not continue to increase the speed\n  const y = getScrollOnAxis({\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis: vertical,\n    shouldUseTimeDampening\n  });\n  const x = getScrollOnAxis({\n    container,\n    distanceToEdges,\n    dragStartTime,\n    axis: horizontal,\n    shouldUseTimeDampening\n  });\n  const required = clean({\n    x,\n    y\n  });\n\n  // nothing required\n  if (isEqual(required, origin)) {\n    return null;\n  }\n\n  // need to not scroll in a direction that we are too big to scroll in\n  const limited = adjustForSizeLimits({\n    container,\n    subject,\n    proposedScroll: required\n  });\n  if (!limited) {\n    return null;\n  }\n  return isEqual(limited, origin) ? null : limited;\n});\n//# sourceMappingURL=index.js.map","export default (({\n  container,\n  subject,\n  proposedScroll\n}) => {\n  const isTooBigVertically = subject.height > container.height;\n  const isTooBigHorizontally = subject.width > container.width;\n\n  // not too big on any axis\n  if (!isTooBigHorizontally && !isTooBigVertically) {\n    return proposedScroll;\n  }\n\n  // too big on both axis\n  if (isTooBigHorizontally && isTooBigVertically) {\n    return null;\n  }\n\n  // Only too big on one axis\n  // Exclude the axis that we cannot scroll on\n  return {\n    x: isTooBigHorizontally ? 0 : proposedScroll.x,\n    y: isTooBigVertically ? 0 : proposedScroll.y\n  };\n});\n//# sourceMappingURL=adjust-for-size-limits.js.map","import whatIsDraggedOver from '../../droppable/what-is-dragged-over';\nimport getBestScrollableDroppable from './get-best-scrollable-droppable';\nimport getDroppableScrollChange from './get-droppable-scroll-change';\nimport getWindowScrollChange from './get-window-scroll-change';\nexport default (({\n  state,\n  dragStartTime,\n  shouldUseTimeDampening,\n  scrollWindow,\n  scrollDroppable\n}) => {\n  const center = state.current.page.borderBoxCenter;\n  const draggable = state.dimensions.draggables[state.critical.draggable.id];\n  const subject = draggable.page.marginBox;\n\n  // 1. Can we scroll the viewport?\n  if (state.isWindowScrollAllowed) {\n    const viewport = state.viewport;\n    const change = getWindowScrollChange({\n      dragStartTime,\n      viewport,\n      subject,\n      center,\n      shouldUseTimeDampening\n    });\n    if (change) {\n      scrollWindow(change);\n      return;\n    }\n  }\n  const droppable = getBestScrollableDroppable({\n    center,\n    destination: whatIsDraggedOver(state.impact),\n    droppables: state.dimensions.droppables\n  });\n  if (!droppable) {\n    return;\n  }\n  const change = getDroppableScrollChange({\n    dragStartTime,\n    droppable,\n    subject,\n    center,\n    shouldUseTimeDampening\n  });\n  if (change) {\n    scrollDroppable(droppable.descriptor.id, change);\n  }\n});\n//# sourceMappingURL=scroll.js.map","import { canScrollWindow } from '../can-scroll';\nimport getScroll from './get-scroll';\nexport default (({\n  viewport,\n  subject,\n  center,\n  dragStartTime,\n  shouldUseTimeDampening\n}) => {\n  const scroll = getScroll({\n    dragStartTime,\n    container: viewport.frame,\n    subject,\n    center,\n    shouldUseTimeDampening\n  });\n  return scroll && canScrollWindow(viewport, scroll) ? scroll : null;\n});\n//# sourceMappingURL=get-window-scroll-change.js.map","import { canScrollDroppable } from '../can-scroll';\nimport getScroll from './get-scroll';\nexport default (({\n  droppable,\n  subject,\n  center,\n  dragStartTime,\n  shouldUseTimeDampening\n}) => {\n  // We know this has a closestScrollable\n  const frame = droppable.frame;\n\n  // this should never happen - just being safe\n  if (!frame) {\n    return null;\n  }\n  const scroll = getScroll({\n    dragStartTime,\n    container: frame.pageMarginBox,\n    subject,\n    center,\n    shouldUseTimeDampening\n  });\n  return scroll && canScrollDroppable(droppable, scroll) ? scroll : null;\n});\n//# sourceMappingURL=get-droppable-scroll-change.js.map","import { invariant } from '../../invariant';\nimport whatIsDraggedOver from '../droppable/what-is-dragged-over';\nimport { add, subtract } from '../position';\nimport { canScrollDroppable, canScrollWindow, getDroppableOverlap, getWindowOverlap } from './can-scroll';\nexport default (({\n  move,\n  scrollDroppable,\n  scrollWindow\n}) => {\n  const moveByOffset = (state, offset) => {\n    const client = add(state.current.client.selection, offset);\n    move({\n      client\n    });\n  };\n  const scrollDroppableAsMuchAsItCan = (droppable, change) => {\n    // Droppable cannot absorb any of the scroll\n    if (!canScrollDroppable(droppable, change)) {\n      return change;\n    }\n    const overlap = getDroppableOverlap(droppable, change);\n\n    // Droppable can absorb the entire change\n    if (!overlap) {\n      scrollDroppable(droppable.descriptor.id, change);\n      return null;\n    }\n\n    // Droppable can only absorb a part of the change\n    const whatTheDroppableCanScroll = subtract(change, overlap);\n    scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);\n    const remainder = subtract(change, whatTheDroppableCanScroll);\n    return remainder;\n  };\n  const scrollWindowAsMuchAsItCan = (isWindowScrollAllowed, viewport, change) => {\n    if (!isWindowScrollAllowed) {\n      return change;\n    }\n    if (!canScrollWindow(viewport, change)) {\n      // window cannot absorb any of the scroll\n      return change;\n    }\n    const overlap = getWindowOverlap(viewport, change);\n\n    // window can absorb entire scroll\n    if (!overlap) {\n      scrollWindow(change);\n      return null;\n    }\n\n    // window can only absorb a part of the scroll\n    const whatTheWindowCanScroll = subtract(change, overlap);\n    scrollWindow(whatTheWindowCanScroll);\n    const remainder = subtract(change, whatTheWindowCanScroll);\n    return remainder;\n  };\n  const jumpScroller = state => {\n    const request = state.scrollJumpRequest;\n    if (!request) {\n      return;\n    }\n    const destination = whatIsDraggedOver(state.impact);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(destination, 'Cannot perform a jump scroll when there is no destination');\n    // 1. We scroll the droppable first if we can to avoid the draggable\n    // leaving the list\n    const droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);\n\n    // droppable absorbed the entire scroll\n    if (!droppableRemainder) {\n      return;\n    }\n    const viewport = state.viewport;\n    const windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);\n\n    // window could absorb all the droppable remainder\n    if (!windowRemainder) {\n      return;\n    }\n\n    // The entire scroll could not be absorbed by the droppable and window\n    // so we manually move whatever is left\n    moveByOffset(state, windowRemainder);\n  };\n  return jumpScroller;\n});\n//# sourceMappingURL=jump-scroller.js.map","import createFluidScroller from './fluid-scroller';\nimport createJumpScroller from './jump-scroller';\nexport default (({\n  scrollDroppable,\n  scrollWindow,\n  move\n}) => {\n  const fluidScroller = createFluidScroller({\n    scrollWindow,\n    scrollDroppable\n  });\n  const jumpScroll = createJumpScroller({\n    move,\n    scrollWindow,\n    scrollDroppable\n  });\n  const scroll = state => {\n    // Only allowing auto scrolling in the DRAGGING phase\n    if (state.phase !== 'DRAGGING') {\n      return;\n    }\n    if (state.movementMode === 'FLUID') {\n      fluidScroller.scroll(state);\n      return;\n    }\n    if (!state.scrollJumpRequest) {\n      return;\n    }\n    jumpScroll(state);\n  };\n  const scroller = {\n    scroll,\n    start: fluidScroller.start,\n    stop: fluidScroller.stop\n  };\n  return scroller;\n});\n//# sourceMappingURL=index.js.map","import rafSchd from 'raf-schd';\nimport * as timings from '../../../debug/timings';\nimport { invariant } from '../../../invariant';\nimport scroll from './scroll';\nexport default (({\n  scrollWindow,\n  scrollDroppable\n}) => {\n  const scheduleWindowScroll = rafSchd(scrollWindow);\n  const scheduleDroppableScroll = rafSchd(scrollDroppable);\n  let dragging = null;\n  const tryScroll = state => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(dragging, 'Cannot fluid scroll if not dragging');\n    const {\n      shouldUseTimeDampening,\n      dragStartTime\n    } = dragging;\n    scroll({\n      state,\n      scrollWindow: scheduleWindowScroll,\n      scrollDroppable: scheduleDroppableScroll,\n      dragStartTime,\n      shouldUseTimeDampening\n    });\n  };\n  const start = state => {\n    timings.start('starting fluid scroller');\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(!dragging, 'Cannot start auto scrolling when already started');\n    const dragStartTime = Date.now();\n    let wasScrollNeeded = false;\n    const fakeScrollCallback = () => {\n      wasScrollNeeded = true;\n    };\n    scroll({\n      state,\n      dragStartTime: 0,\n      shouldUseTimeDampening: false,\n      scrollWindow: fakeScrollCallback,\n      scrollDroppable: fakeScrollCallback\n    });\n    dragging = {\n      dragStartTime,\n      shouldUseTimeDampening: wasScrollNeeded\n    };\n    timings.finish('starting fluid scroller');\n\n    // we know an auto scroll is needed - let's do it!\n    if (wasScrollNeeded) {\n      tryScroll(state);\n    }\n  };\n  const stop = () => {\n    // can be called defensively\n    if (!dragging) {\n      return;\n    }\n    scheduleWindowScroll.cancel();\n    scheduleDroppableScroll.cancel();\n    dragging = null;\n  };\n  return {\n    start,\n    stop,\n    scroll: tryScroll\n  };\n});\n//# sourceMappingURL=index.js.map","export default ((state, id) => {\n  // Ready to go!\n  if (state.phase === 'IDLE') {\n    return true;\n  }\n\n  // Can lift depending on the type of drop animation\n  if (state.phase !== 'DROP_ANIMATING') {\n    return false;\n  }\n\n  // - For a user drop we allow the user to drag other Draggables\n  //   immediately as items are most likely already in their home\n  // - For a cancel items will be moving back to their original position\n  //   as such it is a cleaner experience to block them from dragging until\n  //   the drop animation is complete. Otherwise they will be grabbing\n  //   items not in their original position which can lead to bad visuals\n  // Not allowing dragging of the dropping draggable\n  if (state.completed.result.draggableId === id) {\n    return false;\n  }\n\n  // if dropping - allow lifting\n  // if cancelling - disallow lifting\n  return state.completed.result.reason === 'DROP';\n});\n//# sourceMappingURL=can-start-drag.js.map","import { invariant } from '../../../invariant';\nimport { completeDrop } from '../../action-creators';\nexport default (store => next => action => {\n  if (action.type !== 'DROP_ANIMATION_FINISHED') {\n    next(action);\n    return;\n  }\n  const state = store.getState();\n  invariant(state.phase === 'DROP_ANIMATING',\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  'Cannot finish a drop animating when no drop is occurring');\n  store.dispatch(completeDrop({\n    completed: state.completed\n  }));\n});\n//# sourceMappingURL=drop-animation-finish-middleware.js.map","function getOptions(shared, fromBinding) {\n  return {\n    ...shared,\n    ...fromBinding\n  };\n}\nexport default function bindEvents(el, bindings, sharedOptions) {\n  const unbindings = bindings.map(binding => {\n    const options = getOptions(sharedOptions, binding.options);\n    el.addEventListener(binding.eventName, binding.fn, options);\n    return function unbind() {\n      el.removeEventListener(binding.eventName, binding.fn, options);\n    };\n  });\n  // Return a function to unbind events\n  return function unbindAll() {\n    unbindings.forEach(unbind => {\n      unbind();\n    });\n  };\n}\n//# sourceMappingURL=bind-events.js.map","import bindEvents from '../../../view/event-bindings/bind-events';\nimport { dropAnimationFinished } from '../../action-creators';\nexport default (store => {\n  let unbind = null;\n  let frameId = null;\n  function clear() {\n    if (frameId) {\n      cancelAnimationFrame(frameId);\n      frameId = null;\n    }\n    if (unbind) {\n      unbind();\n      unbind = null;\n    }\n  }\n  return next => action => {\n    if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATION_FINISHED') {\n      clear();\n    }\n    next(action);\n    if (action.type !== 'DROP_ANIMATE') {\n      return;\n    }\n    const binding = {\n      eventName: 'scroll',\n      // capture: true will catch all scroll events, event from scroll containers\n      // once: just in case, we only want to ever fire one\n      options: {\n        capture: true,\n        passive: false,\n        once: true\n      },\n      fn: function flushDropAnimation() {\n        const state = store.getState();\n        if (state.phase === 'DROP_ANIMATING') {\n          store.dispatch(dropAnimationFinished());\n        }\n      }\n    };\n    // The browser can batch a few scroll events in a single frame\n    // including the one that ended the drag.\n    // Binding after a requestAnimationFrame ensures that any scrolls caused\n    // by the auto scroller are finished\n    // TODO: why is a second window scroll being fired?\n    // It leads to funny drop positions :(\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      unbind = bindEvents(window, [binding]);\n    });\n  };\n});\n//# sourceMappingURL=drop-animation-flush-on-scroll-middleware.js.map","export function tryGetDestination(impact) {\n  if (impact.at && impact.at.type === 'REORDER') {\n    return impact.at.destination;\n  }\n  return null;\n}\nexport function tryGetCombine(impact) {\n  if (impact.at && impact.at.type === 'COMBINE') {\n    return impact.at.combine;\n  }\n  return null;\n}\n//# sourceMappingURL=get-impact-location.js.map","import { isEqual, origin } from './state/position';\nexport const curves = {\n  outOfTheWay: 'cubic-bezier(0.2, 0, 0, 1)',\n  drop: 'cubic-bezier(.2,1,.1,1)'\n};\nexport const combine = {\n  opacity: {\n    // while dropping: fade out totally\n    drop: 0,\n    // while dragging: fade out partially\n    combining: 0.7\n  },\n  scale: {\n    drop: 0.75\n  }\n};\nexport const timings = {\n  outOfTheWay: 0.2,\n  // greater than the out of the way time\n  // so that when the drop ends everything will\n  // have to be out of the way\n  minDropTime: 0.33,\n  maxDropTime: 0.55\n};\n// slow timings\n// uncomment to use\n// export const timings = {\n//   outOfTheWay: 2,\n//   // greater than the out of the way time\n//   // so that when the drop ends everything will\n//   // have to be out of the way\n//   minDropTime: 3,\n//   maxDropTime: 4,\n// };\nconst outOfTheWayTiming = `${timings.outOfTheWay}s ${curves.outOfTheWay}`;\nexport const placeholderTransitionDelayTime = 0.1;\nexport const transitions = {\n  fluid: `opacity ${outOfTheWayTiming}`,\n  snap: `transform ${outOfTheWayTiming}, opacity ${outOfTheWayTiming}`,\n  drop: duration => {\n    const timing = `${duration}s ${curves.drop}`;\n    return `transform ${timing}, opacity ${timing}`;\n  },\n  outOfTheWay: `transform ${outOfTheWayTiming}`,\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  placeholder: `height ${outOfTheWayTiming}, width ${outOfTheWayTiming}, margin ${outOfTheWayTiming}`\n};\nconst moveTo = offset => isEqual(offset, origin) ? undefined : `translate(${offset.x}px, ${offset.y}px)`;\nexport const transforms = {\n  moveTo,\n  drop: (offset, isCombining) => {\n    const translate = moveTo(offset);\n    if (!translate) {\n      return undefined;\n    }\n\n    // only transforming the translate\n    if (!isCombining) {\n      return translate;\n    }\n\n    // when dropping while combining we also update the scale\n    return `${translate} scale(${combine.scale.drop})`;\n  }\n};\n//# sourceMappingURL=animation.js.map","import { timings } from '../../../animation';\nimport { distance as getDistance } from '../../position';\nconst {\n  minDropTime,\n  maxDropTime\n} = timings;\nconst dropTimeRange = maxDropTime - minDropTime;\nconst maxDropTimeAtDistance = 1500;\n// will bring a time lower - which makes it faster\nconst cancelDropModifier = 0.6;\nexport default (({\n  current,\n  destination,\n  reason\n}) => {\n  const distance = getDistance(current, destination);\n\n  // even if there is no distance to travel, we might still need to animate opacity\n  if (distance <= 0) {\n    return minDropTime;\n  }\n  if (distance >= maxDropTimeAtDistance) {\n    return maxDropTime;\n  }\n\n  // * range from:\n  // 0px = 0.33s\n  // 1500px and over = 0.55s\n  // * If reason === 'CANCEL' then speeding up the animation\n  // * round to 2 decimal points\n  const percentage = distance / maxDropTimeAtDistance;\n  const duration = minDropTime + dropTimeRange * percentage;\n  const withDuration = reason === 'CANCEL' ? duration * cancelDropModifier : duration;\n  // To two decimal points by converting to string and back\n  return Number(withDuration.toFixed(2));\n});\n//# sourceMappingURL=get-drop-duration.js.map","import { origin } from './position';\nexport const noDisplacedBy = {\n  point: origin,\n  value: 0\n};\nexport const emptyGroups = {\n  invisible: {},\n  visible: {},\n  all: []\n};\nconst noImpact = {\n  displaced: emptyGroups,\n  displacedBy: noDisplacedBy,\n  at: null\n};\nexport default noImpact;\nexport const noAfterCritical = {\n  inVirtualList: false,\n  effected: {},\n  displacedBy: noDisplacedBy\n};\n//# sourceMappingURL=no-impact.js.map","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import invariant from 'tiny-invariant';\n\nvar getRect = function getRect(_ref) {\n  var top = _ref.top,\n      right = _ref.right,\n      bottom = _ref.bottom,\n      left = _ref.left;\n  var width = right - left;\n  var height = bottom - top;\n  var rect = {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left,\n    width: width,\n    height: height,\n    x: left,\n    y: top,\n    center: {\n      x: (right + left) / 2,\n      y: (bottom + top) / 2\n    }\n  };\n  return rect;\n};\nvar expand = function expand(target, expandBy) {\n  return {\n    top: target.top - expandBy.top,\n    left: target.left - expandBy.left,\n    bottom: target.bottom + expandBy.bottom,\n    right: target.right + expandBy.right\n  };\n};\nvar shrink = function shrink(target, shrinkBy) {\n  return {\n    top: target.top + shrinkBy.top,\n    left: target.left + shrinkBy.left,\n    bottom: target.bottom - shrinkBy.bottom,\n    right: target.right - shrinkBy.right\n  };\n};\n\nvar shift = function shift(target, shiftBy) {\n  return {\n    top: target.top + shiftBy.y,\n    left: target.left + shiftBy.x,\n    bottom: target.bottom + shiftBy.y,\n    right: target.right + shiftBy.x\n  };\n};\n\nvar noSpacing = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\nvar createBox = function createBox(_ref2) {\n  var borderBox = _ref2.borderBox,\n      _ref2$margin = _ref2.margin,\n      margin = _ref2$margin === void 0 ? noSpacing : _ref2$margin,\n      _ref2$border = _ref2.border,\n      border = _ref2$border === void 0 ? noSpacing : _ref2$border,\n      _ref2$padding = _ref2.padding,\n      padding = _ref2$padding === void 0 ? noSpacing : _ref2$padding;\n  var marginBox = getRect(expand(borderBox, margin));\n  var paddingBox = getRect(shrink(borderBox, border));\n  var contentBox = getRect(shrink(paddingBox, padding));\n  return {\n    marginBox: marginBox,\n    borderBox: getRect(borderBox),\n    paddingBox: paddingBox,\n    contentBox: contentBox,\n    margin: margin,\n    border: border,\n    padding: padding\n  };\n};\n\nvar parse = function parse(raw) {\n  var value = raw.slice(0, -2);\n  var suffix = raw.slice(-2);\n\n  if (suffix !== 'px') {\n    return 0;\n  }\n\n  var result = Number(value);\n  !!isNaN(result) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not parse value [raw: \" + raw + \", without suffix: \" + value + \"]\") : invariant(false) : void 0;\n  return result;\n};\n\nvar getWindowScroll = function getWindowScroll() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  };\n};\n\nvar offset = function offset(original, change) {\n  var borderBox = original.borderBox,\n      border = original.border,\n      margin = original.margin,\n      padding = original.padding;\n  var shifted = shift(borderBox, change);\n  return createBox({\n    borderBox: shifted,\n    border: border,\n    margin: margin,\n    padding: padding\n  });\n};\nvar withScroll = function withScroll(original, scroll) {\n  if (scroll === void 0) {\n    scroll = getWindowScroll();\n  }\n\n  return offset(original, scroll);\n};\nvar calculateBox = function calculateBox(borderBox, styles) {\n  var margin = {\n    top: parse(styles.marginTop),\n    right: parse(styles.marginRight),\n    bottom: parse(styles.marginBottom),\n    left: parse(styles.marginLeft)\n  };\n  var padding = {\n    top: parse(styles.paddingTop),\n    right: parse(styles.paddingRight),\n    bottom: parse(styles.paddingBottom),\n    left: parse(styles.paddingLeft)\n  };\n  var border = {\n    top: parse(styles.borderTopWidth),\n    right: parse(styles.borderRightWidth),\n    bottom: parse(styles.borderBottomWidth),\n    left: parse(styles.borderLeftWidth)\n  };\n  return createBox({\n    borderBox: borderBox,\n    margin: margin,\n    padding: padding,\n    border: border\n  });\n};\nvar getBox = function getBox(el) {\n  var borderBox = el.getBoundingClientRect();\n  var styles = window.getComputedStyle(el);\n  return calculateBox(borderBox, styles);\n};\n\nexport { calculateBox, createBox, expand, getBox, getRect, offset, shrink, withScroll };\n","// TODO add test\nexport const isEqual = (first, second) => first.top === second.top && first.right === second.right && first.bottom === second.bottom && first.left === second.left;\nexport const offsetByPosition = (spacing, point) => ({\n  top: spacing.top + point.y,\n  left: spacing.left + point.x,\n  bottom: spacing.bottom + point.y,\n  right: spacing.right + point.x\n});\nexport const expandByPosition = (spacing, position) => ({\n  // pulling back to increase size\n  top: spacing.top - position.y,\n  left: spacing.left - position.x,\n  // pushing forward to increase size\n  right: spacing.right + position.x,\n  bottom: spacing.bottom + position.y\n});\nexport const getCorners = spacing => [{\n  x: spacing.left,\n  y: spacing.top\n}, {\n  x: spacing.right,\n  y: spacing.top\n}, {\n  x: spacing.left,\n  y: spacing.bottom\n}, {\n  x: spacing.right,\n  y: spacing.bottom\n}];\nexport const noSpacing = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n//# sourceMappingURL=spacing.js.map","import isWithin from '../is-within';\nexport default (frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    // situations where target is visible:\n    // 1. is completely contained within frame\n    // 2. is partially visible on both axis within frame\n    // 3. is bigger than frame on both axis\n    // 4. is bigger than frame on one axis and is partially visible on the other\n    // completely contained\n    const isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n    if (isContained) {\n      return true;\n    }\n    const isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);\n    const isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);\n    // partially visible on both axis\n    const isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;\n    if (isPartiallyContained) {\n      return true;\n    }\n    const isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;\n    const isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;\n    // is bigger than frame on both axis\n    const isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;\n    if (isTargetBiggerThanFrame) {\n      return true;\n    }\n\n    // is bigger on one axis, and partially visible on another\n    const isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;\n    return isTargetBiggerOnOneAxis;\n  };\n});\n//# sourceMappingURL=is-partially-visible-through-frame.js.map","import isWithin from '../is-within';\nexport default (frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    const isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n    return isContained;\n  };\n});\n//# sourceMappingURL=is-totally-visible-through-frame.js.map","import { origin } from '../position';\nimport { offsetByPosition } from '../spacing';\nimport isPartiallyVisibleThroughFrame from './is-partially-visible-through-frame';\nimport isTotallyVisibleThroughFrame from './is-totally-visible-through-frame';\nimport isTotallyVisibleThroughFrameOnAxis from './is-totally-visible-through-frame-on-axis';\nconst getDroppableDisplaced = (target, destination) => {\n  const displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;\n  return offsetByPosition(target, displacement);\n};\nconst isVisibleInDroppable = (target, destination, isVisibleThroughFrameFn) => {\n  // destination subject is totally hidden by frame\n  // this should never happen - but just guarding against it\n  if (!destination.subject.active) {\n    return false;\n  }\n\n  // When considering if the target is visible in the droppable we need\n  // to consider the change in scroll of the droppable. We need to\n  // adjust for the scroll as the clipped viewport takes into account\n  // the scroll of the droppable.\n  return isVisibleThroughFrameFn(destination.subject.active)(target);\n};\nconst isVisibleInViewport = (target, viewport, isVisibleThroughFrameFn) => isVisibleThroughFrameFn(viewport)(target);\nconst isVisible = ({\n  target: toBeDisplaced,\n  destination,\n  viewport,\n  withDroppableDisplacement,\n  isVisibleThroughFrameFn\n}) => {\n  const displacedTarget = withDroppableDisplacement ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;\n  return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);\n};\nexport const isPartiallyVisible = args => isVisible({\n  ...args,\n  isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame\n});\nexport const isTotallyVisible = args => isVisible({\n  ...args,\n  isVisibleThroughFrameFn: isTotallyVisibleThroughFrame\n});\nexport const isTotallyVisibleOnAxis = args => isVisible({\n  ...args,\n  isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)\n});\n//# sourceMappingURL=is-visible.js.map","import { expand, getRect } from 'css-box-model';\nimport { isPartiallyVisible } from './visibility/is-visible';\nconst getShouldAnimate = (id, last, forceShouldAnimate) => {\n  // Use a forced value if provided\n  if (typeof forceShouldAnimate === 'boolean') {\n    return forceShouldAnimate;\n  }\n\n  // nothing to gauge animation from\n  if (!last) {\n    return true;\n  }\n  const {\n    invisible,\n    visible\n  } = last;\n\n  // it was previously invisible - no animation\n  if (invisible[id]) {\n    return false;\n  }\n  const previous = visible[id];\n  return previous ? previous.shouldAnimate : true;\n};\n\n// Note: it is also an optimisation to not render the displacement on\n// items when they are not longer visible.\n// This prevents a lot of .render() calls when leaving / entering a list\nfunction getTarget(draggable, displacedBy) {\n  const marginBox = draggable.page.marginBox;\n  // ## Visibility overscanning\n  // We are expanding rather than offsetting the marginBox.\n  // In some cases we want\n  // - the target based on the starting position (such as when dropping outside of any list)\n  // - the target based on the items position without starting displacement (such as when moving inside a list)\n  // To keep things simple we just expand the whole area for this check\n  // The worst case is some minor redundant offscreen movements\n  const expandBy = {\n    // pull backwards into viewport\n    top: displacedBy.point.y,\n    right: 0,\n    bottom: 0,\n    // pull backwards into viewport\n    left: displacedBy.point.x\n  };\n  return getRect(expand(marginBox, expandBy));\n}\nexport default function getDisplacementGroups({\n  afterDragging,\n  destination,\n  displacedBy,\n  viewport,\n  forceShouldAnimate,\n  last\n}) {\n  return afterDragging.reduce(function process(groups, draggable) {\n    const target = getTarget(draggable, displacedBy);\n    const id = draggable.descriptor.id;\n    groups.all.push(id);\n    const isVisible = isPartiallyVisible({\n      target,\n      destination,\n      viewport,\n      withDroppableDisplacement: true\n    });\n    if (!isVisible) {\n      groups.invisible[draggable.descriptor.id] = true;\n      return groups;\n    }\n\n    // item is visible\n    const shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);\n    const displacement = {\n      draggableId: id,\n      shouldAnimate\n    };\n    groups.visible[id] = displacement;\n    return groups;\n  }, {\n    all: [],\n    visible: {},\n    invisible: {}\n  });\n}\n//# sourceMappingURL=get-displacement-groups.js.map","import getDisplacementGroups from '../get-displacement-groups';\nfunction getDraggables(ids, draggables) {\n  return ids.map(id => draggables[id]);\n}\nexport default (({\n  impact,\n  viewport,\n  draggables,\n  destination,\n  forceShouldAnimate\n}) => {\n  const last = impact.displaced;\n  const afterDragging = getDraggables(last.all, draggables);\n  const displaced = getDisplacementGroups({\n    afterDragging,\n    destination,\n    displacedBy: impact.displacedBy,\n    viewport: viewport.frame,\n    forceShouldAnimate,\n    last\n  });\n  return {\n    ...impact,\n    displaced\n  };\n});\n//# sourceMappingURL=recompute.js.map","import { add } from '../position';\nexport default ((droppable, point) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return point;\n  }\n  return add(point, frame.scroll.diff.displacement);\n});\n//# sourceMappingURL=with-droppable-displacement.js.map","export default function didStartAfterCritical(draggableId, afterCritical) {\n  return Boolean(afterCritical.effected[draggableId]);\n}\n//# sourceMappingURL=did-start-after-critical.js.map","import didStartAfterCritical from './did-start-after-critical';\nimport { negate, origin } from './position';\nexport default (({\n  displaced,\n  afterCritical,\n  combineWith,\n  displacedBy\n}) => {\n  const isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);\n  if (didStartAfterCritical(combineWith, afterCritical)) {\n    return isDisplaced ? origin : negate(displacedBy.point);\n  }\n  return isDisplaced ? displacedBy.point : origin;\n});\n//# sourceMappingURL=get-combined-item-displacement.js.map","import { invariant } from '../../../invariant';\nimport getCombinedItemDisplacement from '../../get-combined-item-displacement';\nimport { tryGetCombine } from '../../get-impact-location';\nimport { add } from '../../position';\n// Returns the client offset required to move an item from its\n// original client position to its final resting position\nexport default (({\n  afterCritical,\n  impact,\n  draggables\n}) => {\n  const combine = tryGetCombine(impact);\n  invariant(combine);\n  const combineWith = combine.draggableId;\n  const center = draggables[combineWith].page.borderBox.center;\n  const displaceBy = getCombinedItemDisplacement({\n    displaced: impact.displaced,\n    afterCritical,\n    combineWith,\n    displacedBy: impact.displacedBy\n  });\n  return add(center, displaceBy);\n});\n//# sourceMappingURL=when-combining.js.map","import memoizeOne from 'memoize-one';\nimport { toDraggableList } from './dimension-structures';\nexport default memoizeOne((droppableId, draggables) => {\n  const result = toDraggableList(draggables).filter(draggable => droppableId === draggable.descriptor.droppableId) // Dimensions are not guarenteed to be ordered in the same order as keys\n  // So we need to sort them so they are in the correct order\n  .sort((a, b) => a.descriptor.index - b.descriptor.index);\n  return result;\n});\n//# sourceMappingURL=get-draggables-inside-droppable.js.map","import { patch } from '../position';\nconst distanceFromStartToBorderBoxCenter = (axis, box) => box.margin[axis.start] + box.borderBox[axis.size] / 2;\nconst distanceFromEndToBorderBoxCenter = (axis, box) => box.margin[axis.end] + box.borderBox[axis.size] / 2;\n\n// We align the moving item against the cross axis start of the target\n// We used to align the moving item cross axis center with the cross axis center of the target.\n// However, this leads to a bad experience when reordering columns\nconst getCrossAxisBorderBoxCenter = (axis, target, isMoving) => target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;\nexport const goAfter = ({\n  axis,\n  moveRelativeTo,\n  isMoving\n}) => patch(axis.line,\n// start measuring from the end of the target\nmoveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\nexport const goBefore = ({\n  axis,\n  moveRelativeTo,\n  isMoving\n}) => patch(axis.line,\n// start measuring from the start of the target\nmoveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\n// moves into the content box\nexport const goIntoStart = ({\n  axis,\n  moveInto,\n  isMoving\n}) => patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));\n//# sourceMappingURL=move-relative-to.js.map","import { offset } from 'css-box-model';\nimport didStartAfterCritical from '../../did-start-after-critical';\nimport getDraggablesInsideDroppable from '../../get-draggables-inside-droppable';\nimport { negate } from '../../position';\nimport { goAfter, goBefore, goIntoStart } from '../move-relative-to';\n// Returns the client offset required to move an item from its\n// original client position to its final resting position\nexport default (({\n  impact,\n  draggable,\n  draggables,\n  droppable,\n  afterCritical\n}) => {\n  const insideDestination = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n  const draggablePage = draggable.page;\n  const axis = droppable.axis;\n\n  // this will only happen in a foreign list\n  if (!insideDestination.length) {\n    return goIntoStart({\n      axis,\n      moveInto: droppable.page,\n      isMoving: draggablePage\n    });\n  }\n  const {\n    displaced,\n    displacedBy\n  } = impact;\n  const closestAfter = displaced.all[0];\n\n  // go before the first displaced item\n  // items can only be displaced forwards\n  if (closestAfter) {\n    const closest = draggables[closestAfter];\n\n    // want to go before where it would be with the displacement\n    // target is displaced and is already in it's starting position\n    if (didStartAfterCritical(closestAfter, afterCritical)) {\n      return goBefore({\n        axis,\n        moveRelativeTo: closest.page,\n        isMoving: draggablePage\n      });\n    }\n\n    // target has been displaced during the drag and it is not in its starting position\n    // we need to account for the displacement\n    const withDisplacement = offset(closest.page, displacedBy.point);\n    return goBefore({\n      axis,\n      moveRelativeTo: withDisplacement,\n      isMoving: draggablePage\n    });\n  }\n\n  // Nothing in list is displaced, we should go after the last item\n  const last = insideDestination[insideDestination.length - 1];\n\n  // we can just go into our original position if the last item\n  // is the dragging item\n  if (last.descriptor.id === draggable.descriptor.id) {\n    return draggablePage.borderBox.center;\n  }\n  if (didStartAfterCritical(last.descriptor.id, afterCritical)) {\n    // if the item started displaced and it is no longer displaced then\n    // we need to go after it it's non-displaced position\n    const page = offset(last.page, negate(afterCritical.displacedBy.point));\n    return goAfter({\n      axis,\n      moveRelativeTo: page,\n      isMoving: draggablePage\n    });\n  }\n\n  // item is in its resting spot. we can go straight after it\n  return goAfter({\n    axis,\n    moveRelativeTo: last.page,\n    isMoving: draggablePage\n  });\n});\n//# sourceMappingURL=when-reordering.js.map","import withDroppableDisplacement from '../../with-scroll-change/with-droppable-displacement';\nimport whenCombining from './when-combining';\nimport whenReordering from './when-reordering';\nconst getResultWithoutDroppableDisplacement = ({\n  impact,\n  draggable,\n  droppable,\n  draggables,\n  afterCritical\n}) => {\n  const original = draggable.page.borderBox.center;\n  const at = impact.at;\n  if (!droppable) {\n    return original;\n  }\n  if (!at) {\n    return original;\n  }\n  if (at.type === 'REORDER') {\n    return whenReordering({\n      impact,\n      draggable,\n      draggables,\n      droppable,\n      afterCritical\n    });\n  }\n  return whenCombining({\n    impact,\n    draggables,\n    afterCritical\n  });\n};\nexport default (args => {\n  const withoutDisplacement = getResultWithoutDroppableDisplacement(args);\n  const droppable = args.droppable;\n  const withDisplacement = droppable ? withDroppableDisplacement(droppable, withoutDisplacement) : withoutDisplacement;\n  return withDisplacement;\n});\n//# sourceMappingURL=index.js.map","import { add, subtract } from '../../position';\nimport withViewportDisplacement from '../../with-scroll-change/with-viewport-displacement';\nexport default (({\n  pageBorderBoxCenter,\n  draggable,\n  viewport\n}) => {\n  const withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);\n  const offset = subtract(withoutPageScrollChange, draggable.page.borderBox.center);\n  return add(draggable.client.borderBox.center, offset);\n});\n//# sourceMappingURL=get-client-from-page-border-box-center.js.map","import { add } from '../position';\nexport default ((viewport, point) => add(viewport.scroll.diff.displacement, point));\n//# sourceMappingURL=with-viewport-displacement.js.map","import getPageBorderBoxCenterFromImpact from '../get-page-border-box-center';\nimport getClientFromPageBorderBoxCenter from './get-client-from-page-border-box-center';\nexport default (({\n  impact,\n  draggable,\n  droppable,\n  draggables,\n  viewport,\n  afterCritical\n}) => {\n  const pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n    impact,\n    draggable,\n    draggables,\n    droppable,\n    afterCritical\n  });\n  return getClientFromPageBorderBoxCenter({\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  });\n});\n//# sourceMappingURL=index.js.map","import { invariant } from '../../../invariant';\nimport { animateDrop, completeDrop, dropPending } from '../../action-creators';\nimport { tryGetCombine, tryGetDestination } from '../../get-impact-location';\nimport { isEqual } from '../../position';\nimport getDropDuration from './get-drop-duration';\nimport getDropImpact from './get-drop-impact';\nimport getNewHomeClientOffset from './get-new-home-client-offset';\nexport default (({\n  getState,\n  dispatch\n}) => next => action => {\n  if (action.type !== 'DROP') {\n    next(action);\n    return;\n  }\n  const state = getState();\n  const reason = action.payload.reason;\n\n  // Still waiting for a bulk collection to publish\n  // We are now shifting the application into the 'DROP_PENDING' phase\n  if (state.phase === 'COLLECTING') {\n    dispatch(dropPending({\n      reason\n    }));\n    return;\n  }\n\n  // Could have occurred in response to an error\n  if (state.phase === 'IDLE') {\n    return;\n  }\n\n  // Still waiting for our drop pending to end\n  // TODO: should this throw?\n  const isWaitingForDrop = state.phase === 'DROP_PENDING' && state.isWaiting;\n  invariant(!isWaitingForDrop, 'A DROP action occurred while DROP_PENDING and still waiting');\n  invariant(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING',\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  `Cannot drop in phase: ${state.phase}`);\n  const draggingOrDropPendingState = state;\n  // We are now in the DRAGGING or DROP_PENDING phase\n  const critical = draggingOrDropPendingState.critical;\n  const dimensions = state.dimensions;\n  const draggable = dimensions.draggables[draggingOrDropPendingState.critical.draggable.id];\n  // Only keeping impact when doing a user drop - otherwise we are cancelling\n  const {\n    impact,\n    didDropInsideDroppable\n  } = getDropImpact({\n    reason,\n    lastImpact: draggingOrDropPendingState.impact,\n    afterCritical: draggingOrDropPendingState.afterCritical,\n    onLiftImpact: draggingOrDropPendingState.onLiftImpact,\n    home: draggingOrDropPendingState.dimensions.droppables[draggingOrDropPendingState.critical.droppable.id],\n    viewport: draggingOrDropPendingState.viewport,\n    draggables: draggingOrDropPendingState.dimensions.draggables\n  });\n  // only populating destination / combine if 'didDropInsideDroppable' is true\n  const destination = didDropInsideDroppable ? tryGetDestination(impact) : null;\n  const combine = didDropInsideDroppable ? tryGetCombine(impact) : null;\n  const source = {\n    index: critical.draggable.index,\n    droppableId: critical.droppable.id\n  };\n  const result = {\n    draggableId: draggable.descriptor.id,\n    type: draggable.descriptor.type,\n    source,\n    reason,\n    mode: draggingOrDropPendingState.movementMode,\n    // destination / combine will be null if didDropInsideDroppable is true\n    destination,\n    combine\n  };\n  const newHomeClientOffset = getNewHomeClientOffset({\n    impact,\n    draggable,\n    dimensions,\n    viewport: draggingOrDropPendingState.viewport,\n    afterCritical: draggingOrDropPendingState.afterCritical\n  });\n  const completed = {\n    critical: draggingOrDropPendingState.critical,\n    afterCritical: draggingOrDropPendingState.afterCritical,\n    result,\n    impact\n  };\n  const isAnimationRequired =\n  // 1. not already in the right spot\n  !isEqual(draggingOrDropPendingState.current.client.offset, newHomeClientOffset) ||\n  // 2. doing a combine (we still want to animate the scale and opacity fade)\n  // looking at the result and not the impact as the combine impact is cleared\n  Boolean(result.combine);\n  if (!isAnimationRequired) {\n    dispatch(completeDrop({\n      completed\n    }));\n    return;\n  }\n  const dropDuration = getDropDuration({\n    current: draggingOrDropPendingState.current.client.offset,\n    destination: newHomeClientOffset,\n    reason\n  });\n  const args = {\n    newHomeClientOffset,\n    dropDuration,\n    completed\n  };\n  dispatch(animateDrop(args));\n});\n//# sourceMappingURL=drop-middleware.js.map","import { emptyGroups } from '../../no-impact';\nimport recompute from '../../update-displacement-visibility/recompute';\nexport default (({\n  draggables,\n  reason,\n  lastImpact,\n  home,\n  viewport,\n  onLiftImpact\n}) => {\n  if (!lastImpact.at || reason !== 'DROP') {\n    // Dropping outside of a list or the drag was cancelled\n    // Going to use the on lift impact\n    // Need to recompute the visibility of the original impact\n    // What is visible can be different to when  the drag started\n    const recomputedHomeImpact = recompute({\n      draggables,\n      impact: onLiftImpact,\n      destination: home,\n      viewport,\n      // We need the draggables to animate back to their positions\n      forceShouldAnimate: true\n    });\n    return {\n      impact: recomputedHomeImpact,\n      didDropInsideDroppable: false\n    };\n  }\n\n  // use the existing impact\n  if (lastImpact.at.type === 'REORDER') {\n    return {\n      impact: lastImpact,\n      didDropInsideDroppable: true\n    };\n  }\n\n  // When merging we remove the movement so that everything\n  // will animate closed\n  const withoutMovement = {\n    ...lastImpact,\n    displaced: emptyGroups\n  };\n  return {\n    impact: withoutMovement,\n    didDropInsideDroppable: true\n  };\n});\n//# sourceMappingURL=get-drop-impact.js.map","import whatIsDraggedOver from '../../droppable/what-is-dragged-over';\nimport getClientBorderBoxCenter from '../../get-center-from-impact/get-client-border-box-center';\nimport { subtract } from '../../position';\nexport default (({\n  impact,\n  draggable,\n  dimensions,\n  viewport,\n  afterCritical\n}) => {\n  const {\n    draggables,\n    droppables\n  } = dimensions;\n  const droppableId = whatIsDraggedOver(impact);\n  const destination = droppableId ? droppables[droppableId] : null;\n  const home = droppables[draggable.descriptor.droppableId];\n  const newClientCenter = getClientBorderBoxCenter({\n    impact,\n    draggable,\n    draggables,\n    // if there is no destination, then we will be dropping back into the home\n    afterCritical,\n    droppable: destination || home,\n    viewport\n  });\n  const offset = subtract(newClientCenter, draggable.client.borderBox.center);\n  return offset;\n});\n//# sourceMappingURL=get-new-home-client-offset.js.map","import { invariant } from '../../invariant';\nimport { beforeInitialCapture, completeDrop, flush, initialPublish } from '../action-creators';\nimport validateDimensions from './util/validate-dimensions';\nexport default (marshal => ({\n  getState,\n  dispatch\n}) => next => action => {\n  if (action.type !== 'LIFT') {\n    next(action);\n    return;\n  }\n  const {\n    id,\n    clientSelection,\n    movementMode\n  } = action.payload;\n  const initial = getState();\n\n  // flush dropping animation if needed\n  // this can change the descriptor of the dragging item\n  // Will call the onDragEnd responders\n  if (initial.phase === 'DROP_ANIMATING') {\n    dispatch(completeDrop({\n      completed: initial.completed\n    }));\n  }\n\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(getState().phase === 'IDLE', 'Unexpected phase to start a drag');\n  // Removing any placeholders before we capture any starting dimensions\n  dispatch(flush());\n  // Let consumers know we are just about to publish\n  // We are only publishing a small amount of information as\n  // things might change as a result of the onBeforeCapture callback\n  dispatch(beforeInitialCapture({\n    draggableId: id,\n    movementMode\n  }));\n  // will communicate with the marshal to start requesting dimensions\n  const scrollOptions = {\n    shouldPublishImmediately: movementMode === 'SNAP'\n  };\n  const request = {\n    draggableId: id,\n    scrollOptions\n  };\n  // Let's get the marshal started!\n  const {\n    critical,\n    dimensions,\n    viewport\n  } = marshal.startPublishing(request);\n  validateDimensions(critical, dimensions);\n  // Okay, we are good to start dragging now\n  dispatch(initialPublish({\n    critical,\n    dimensions,\n    clientSelection,\n    movementMode,\n    viewport\n  }));\n});\n//# sourceMappingURL=lift.js.map","import { drop } from '../action-creators';\nexport default (store => next => action => {\n  // Always let the action go through first\n  next(action);\n  if (action.type !== 'PUBLISH_WHILE_DRAGGING') {\n    return;\n  }\n\n  // A bulk replace occurred - check if\n  // 1. there is a pending drop\n  // 2. that the pending drop is no longer waiting\n  const postActionState = store.getState();\n\n  // no pending drop after the publish\n  if (postActionState.phase !== 'DROP_PENDING') {\n    return;\n  }\n\n  // the pending drop is still waiting for completion\n  if (postActionState.isWaiting) {\n    return;\n  }\n  store.dispatch(drop({\n    reason: postActionState.reason\n  }));\n});\n//# sourceMappingURL=pending-drop.js.map","import { invariant } from '../../../invariant';\nimport { findIndex } from '../../../native-with-fallback';\nexport default (() => {\n  const entries = [];\n  const execute = timerId => {\n    const index = findIndex(entries, item => item.timerId === timerId);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(index !== -1, 'Could not find timer');\n    // delete in place\n    const [entry] = entries.splice(index, 1);\n    entry.callback();\n  };\n  const add = fn => {\n    const timerId = setTimeout(() => execute(timerId));\n    const entry = {\n      timerId,\n      callback: fn\n    };\n    entries.push(entry);\n  };\n  const flush = () => {\n    // nothing to flush\n    if (!entries.length) {\n      return;\n    }\n    const shallow = [...entries];\n    // clearing entries in case a callback adds some more callbacks\n    entries.length = 0;\n    shallow.forEach(entry => {\n      clearTimeout(entry.timerId);\n      entry.callback();\n    });\n  };\n  return {\n    add,\n    flush\n  };\n});\n//# sourceMappingURL=async-marshal.js.map","import * as timings from '../../../debug/timings';\nimport { invariant } from '../../../invariant';\nimport messagePreset from '../../../screen-reader-message-preset';\nimport { tryGetCombine, tryGetDestination } from '../../get-impact-location';\nimport getAsyncMarshal from './async-marshal';\nimport getExpiringAnnounce from './expiring-announce';\nimport { areLocationsEqual, isCombineEqual, isCriticalEqual } from './is-equal';\nconst withTimings = (key, fn) => {\n  timings.start(key);\n  fn();\n  timings.finish(key);\n};\nconst getDragStart = (critical, mode) => ({\n  draggableId: critical.draggable.id,\n  type: critical.droppable.type,\n  source: {\n    droppableId: critical.droppable.id,\n    index: critical.draggable.index\n  },\n  mode\n});\nconst execute = (responder, data, announce, getDefaultMessage) => {\n  if (!responder) {\n    announce(getDefaultMessage(data));\n    return;\n  }\n  const willExpire = getExpiringAnnounce(announce);\n  const provided = {\n    announce: willExpire\n  };\n  // Casting because we are not validating which data type is going into which responder\n  responder(data, provided);\n  if (!willExpire.wasCalled()) {\n    announce(getDefaultMessage(data));\n  }\n};\nexport default ((getResponders, announce) => {\n  const asyncMarshal = getAsyncMarshal();\n  let dragging = null;\n  const beforeCapture = (draggableId, mode) => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(!dragging, 'Cannot fire onBeforeCapture as a drag start has already been published');\n    withTimings('onBeforeCapture', () => {\n      // No use of screen reader for this responder\n      const fn = getResponders().onBeforeCapture;\n      if (fn) {\n        const before = {\n          draggableId,\n          mode\n        };\n        fn(before);\n      }\n    });\n  };\n  const beforeStart = (critical, mode) => {\n    invariant(!dragging,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    'Cannot fire onBeforeDragStart as a drag start has already been published');\n    withTimings('onBeforeDragStart', () => {\n      // No use of screen reader for this responder\n      const fn = getResponders().onBeforeDragStart;\n      if (fn) {\n        fn(getDragStart(critical, mode));\n      }\n    });\n  };\n  const start = (critical, mode) => {\n    invariant(!dragging,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    'Cannot fire onBeforeDragStart as a drag start has already been published');\n    const data = getDragStart(critical, mode);\n    dragging = {\n      mode,\n      lastCritical: critical,\n      lastLocation: data.source,\n      lastCombine: null\n    };\n    // we will flush this frame if we receive any responder updates\n    asyncMarshal.add(() => {\n      withTimings('onDragStart', () => execute(getResponders().onDragStart, data, announce, messagePreset.onDragStart));\n    });\n  };\n\n  // Passing in the critical location again as it can change during a drag\n  const update = (critical, impact) => {\n    const location = tryGetDestination(impact);\n    const combine = tryGetCombine(impact);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(dragging, 'Cannot fire onDragMove when onDragStart has not been called');\n    // Has the critical changed? Will result in a source change\n    const hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);\n    if (hasCriticalChanged) {\n      dragging.lastCritical = critical;\n    }\n\n    // Has the location changed? Will result in a destination change\n    const hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);\n    if (hasLocationChanged) {\n      dragging.lastLocation = location;\n    }\n    const hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine);\n    if (hasGroupingChanged) {\n      dragging.lastCombine = combine;\n    }\n\n    // Nothing has changed - no update needed\n    if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {\n      return;\n    }\n    const data = {\n      ...getDragStart(critical, dragging.mode),\n      combine,\n      destination: location\n    };\n    asyncMarshal.add(() => {\n      withTimings('onDragUpdate', () => execute(getResponders().onDragUpdate, data, announce, messagePreset.onDragUpdate));\n    });\n  };\n  const flush = () => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(dragging, 'Can only flush responders while dragging');\n    asyncMarshal.flush();\n  };\n  const drop = result => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(dragging, 'Cannot fire onDragEnd when there is no matching onDragStart');\n    dragging = null;\n    // not adding to frame marshal - we want this to be done in the same render pass\n    // we also want the consumers reorder logic to be in the same render pass\n    withTimings('onDragEnd', () => execute(getResponders().onDragEnd, result, announce, messagePreset.onDragEnd));\n  };\n\n  // A non user initiated cancel\n  const abort = () => {\n    // aborting can happen defensively\n    if (!dragging) {\n      return;\n    }\n    const result = {\n      ...getDragStart(dragging.lastCritical, dragging.mode),\n      combine: null,\n      destination: null,\n      reason: 'CANCEL'\n    };\n    drop(result);\n  };\n  return {\n    beforeCapture,\n    beforeStart,\n    start,\n    update,\n    flush,\n    drop,\n    abort\n  };\n});\n//# sourceMappingURL=publisher.js.map","import { warning } from '../../../dev-warning';\nexport default (announce => {\n  let wasCalled = false;\n  let isExpired = false;\n  // not allowing async announcements\n  const timeoutId = setTimeout(() => {\n    isExpired = true;\n  });\n  const result = message => {\n    if (wasCalled) {\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      warning('Announcement already made. Not making a second announcement');\n      return;\n    }\n    if (isExpired) {\n      warning(`\n        Announcements cannot be made asynchronously.\n        Default message has already been announced.\n      `);\n      return;\n    }\n    wasCalled = true;\n    announce(message);\n    clearTimeout(timeoutId);\n  };\n\n  // getter for isExpired\n  // using this technique so that a consumer cannot\n  // set the isExpired or wasCalled flags\n  result.wasCalled = () => wasCalled;\n  return result;\n});\n//# sourceMappingURL=expiring-announce.js.map","import getPublisher from './publisher';\nexport default ((getResponders, announce) => {\n  const publisher = getPublisher(getResponders, announce);\n  return store => next => action => {\n    if (action.type === 'BEFORE_INITIAL_CAPTURE') {\n      publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);\n      return;\n    }\n    if (action.type === 'INITIAL_PUBLISH') {\n      const critical = action.payload.critical;\n      publisher.beforeStart(critical, action.payload.movementMode);\n      next(action);\n      publisher.start(critical, action.payload.movementMode);\n      return;\n    }\n\n    // Drag end\n    if (action.type === 'DROP_COMPLETE') {\n      // it is important that we use the result and not the last impact\n      // the last impact might be different to the result for visual reasons\n      const result = action.payload.completed.result;\n      // flushing all pending responders before snapshots are updated\n      publisher.flush();\n      next(action);\n      publisher.drop(result);\n      return;\n    }\n\n    // All other responders can fire after we have updated our connected components\n    next(action);\n\n    // Drag state resetting - need to check if\n    // we should fire a onDragEnd responder\n    if (action.type === 'FLUSH') {\n      publisher.abort();\n      return;\n    }\n\n    // ## Perform drag updates\n    // impact of action has already been reduced\n    const state = store.getState();\n    if (state.phase === 'DRAGGING') {\n      publisher.update(state.critical, state.impact);\n    }\n  };\n});\n//# sourceMappingURL=responders-middleware.js.map","export const areLocationsEqual = (first, second) => {\n  // if both are null - we are equal\n  if (!first && !second) {\n    return true;\n  }\n\n  // if one is null - then they are not equal\n  if (!first || !second) {\n    return false;\n  }\n\n  // compare their actual values\n  return first.droppableId === second.droppableId && first.index === second.index;\n};\nexport const isCombineEqual = (first, second) => {\n  // if both are null - we are equal\n  if (!first && !second) {\n    return true;\n  }\n\n  // only one is null\n  if (!first || !second) {\n    return false;\n  }\n  return first.draggableId === second.draggableId && first.droppableId === second.droppableId;\n};\nexport const isCriticalEqual = (first, second) => {\n  if (first === second) {\n    return true;\n  }\n  const isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;\n  const isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;\n  return isDraggableEqual && isDroppableEqual;\n};\n//# sourceMappingURL=is-equal.js.map","export function noop() {}\nexport function identity(value) {\n  return value;\n}\n//# sourceMappingURL=empty.js.map","// The browsers update document.documentElement.scrollTop and window.pageYOffset\n\n// differently as the window scrolls.\n// Webkit\n// documentElement.scrollTop: no update. Stays at 0\n// window.pageYOffset: updates to whole number\n// Chrome\n// documentElement.scrollTop: update with fractional value\n// window.pageYOffset: update with fractional value\n// FireFox\n// documentElement.scrollTop: updates to whole number\n// window.pageYOffset: updates to whole number\n// IE11 (same as firefox)\n// documentElement.scrollTop: updates to whole number\n// window.pageYOffset: updates to whole number\n// Edge (same as webkit)\n// documentElement.scrollTop: no update. Stays at 0\n// window.pageYOffset: updates to whole number\nexport default (() => ({\n  x: window.pageXOffset,\n  y: window.pageYOffset\n}));\n//# sourceMappingURL=get-window-scroll.js.map","import rafSchd from 'raf-schd';\nimport { noop } from '../empty';\nimport { invariant } from '../invariant';\nimport bindEvents from './event-bindings/bind-events';\nimport getWindowScroll from './window/get-window-scroll';\nfunction getWindowScrollBinding(update) {\n  return {\n    eventName: 'scroll',\n    // ## Passive: true\n    // Eventual consistency is fine because we use position: fixed on the item\n    // ## Capture: false\n    // Scroll events on elements do not bubble, but they go through the capture phase\n    // https://twitter.com/alexandereardon/status/985994224867819520\n    // Using capture: false here as we want to avoid intercepting droppable scroll requests\n    options: {\n      passive: true,\n      capture: false\n    },\n    fn: event => {\n      // IE11 fix\n      // All scrollable events still bubble up and are caught by this handler in ie11.\n      // On a window scroll the event.target should be the window or the document.\n      // If this is not the case then it is not a 'window' scroll event and can be ignored\n      if (event.target !== window && event.target !== window.document) {\n        return;\n      }\n      update();\n    }\n  };\n}\nexport default function getScrollListener({\n  onWindowScroll\n}) {\n  function updateScroll() {\n    // letting the update function read the latest scroll when called\n    onWindowScroll(getWindowScroll());\n  }\n  const scheduled = rafSchd(updateScroll);\n  const binding = getWindowScrollBinding(scheduled);\n  let unbind = noop;\n  function isActive() {\n    return unbind !== noop;\n  }\n  function start() {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(!isActive(), 'Cannot start scroll listener when already active');\n    unbind = bindEvents(window, [binding]);\n  }\n  function stop() {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(isActive(), 'Cannot stop scroll listener when not active');\n    scheduled.cancel();\n    unbind();\n    unbind = noop;\n  }\n  return {\n    start,\n    stop,\n    isActive\n  };\n}\n//# sourceMappingURL=scroll-listener.js.map","import getScrollListener from '../../view/scroll-listener';\nimport { moveByWindowScroll } from '../action-creators';\n// TODO: this is taken from auto-scroll. Let's make it a util\nconst shouldEnd = action => action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';\nexport default (store => {\n  const listener = getScrollListener({\n    onWindowScroll: newScroll => {\n      store.dispatch(moveByWindowScroll({\n        newScroll\n      }));\n    }\n  });\n  return next => action => {\n    if (!listener.isActive() && action.type === 'INITIAL_PUBLISH') {\n      listener.start();\n    }\n    if (listener.isActive() && shouldEnd(action)) {\n      listener.stop();\n    }\n    next(action);\n  };\n});\n//# sourceMappingURL=scroll-listener.js.map","import { getRect } from 'css-box-model';\nimport { offsetByPosition } from '../../spacing';\nimport executeClip from './clip';\nconst scroll = (target, frame) => {\n  if (!frame) {\n    return target;\n  }\n  return offsetByPosition(target, frame.scroll.diff.displacement);\n};\nconst increase = (target, axis, withPlaceholder) => {\n  if (withPlaceholder && withPlaceholder.increasedBy) {\n    return {\n      ...target,\n      [axis.end]: target[axis.end] + withPlaceholder.increasedBy[axis.line]\n    };\n  }\n  return target;\n};\nconst clip = (target, frame) => {\n  if (frame && frame.shouldClipSubject) {\n    return executeClip(frame.pageMarginBox, target);\n  }\n  return getRect(target);\n};\nexport default (({\n  page,\n  withPlaceholder,\n  axis,\n  frame\n}) => {\n  const scrolled = scroll(page.marginBox, frame);\n  const increased = increase(scrolled, axis, withPlaceholder);\n  const clipped = clip(increased, frame);\n  return {\n    page,\n    withPlaceholder,\n    active: clipped\n  };\n});\n//# sourceMappingURL=get-subject.js.map","import { getRect } from 'css-box-model';\nexport default ((frame, subject) => {\n  const result = getRect({\n    top: Math.max(subject.top, frame.top),\n    right: Math.min(subject.right, frame.right),\n    bottom: Math.min(subject.bottom, frame.bottom),\n    left: Math.max(subject.left, frame.left)\n  });\n  if (result.width <= 0 || result.height <= 0) {\n    return null;\n  }\n  return result;\n});\n//# sourceMappingURL=clip.js.map","import { invariant } from '../../invariant';\nimport { negate, subtract } from '../position';\nimport getSubject from './util/get-subject';\nexport default ((droppable, newScroll) => {\n  invariant(droppable.frame);\n  const scrollable = droppable.frame;\n  const scrollDiff = subtract(newScroll, scrollable.scroll.initial);\n  // a positive scroll difference leads to a negative displacement\n  // (scrolling down pulls an item upwards)\n  const scrollDisplacement = negate(scrollDiff);\n  // Sometimes it is possible to scroll beyond the max point.\n  // This can occur when scrolling a foreign list that now has a placeholder.\n  const frame = {\n    ...scrollable,\n    scroll: {\n      initial: scrollable.scroll.initial,\n      current: newScroll,\n      diff: {\n        value: scrollDiff,\n        displacement: scrollDisplacement\n      },\n      // TODO: rename 'softMax?'\n      max: scrollable.scroll.max\n    }\n  };\n  const subject = getSubject({\n    page: droppable.subject.page,\n    withPlaceholder: droppable.subject.withPlaceholder,\n    axis: droppable.axis,\n    frame\n  });\n  const result = {\n    ...droppable,\n    frame,\n    subject\n  };\n  return result;\n});\n//# sourceMappingURL=scroll-droppable.js.map","import memoizeOne from 'memoize-one';\nimport { patch } from './position'; // TODO: memoization needed?\n\nexport default memoizeOne(function getDisplacedBy(axis, displaceBy) {\n  const displacement = displaceBy[axis.line];\n  return {\n    value: displacement,\n    point: patch(axis.line, displacement)\n  };\n});\n//# sourceMappingURL=get-displaced-by.js.map","import { invariant } from '../invariant';\nimport getDisplacedBy from './get-displaced-by';\nimport getDisplacementGroups from './get-displacement-groups';\nimport getDraggablesInsideDroppable from './get-draggables-inside-droppable';\nimport getHomeLocation from './get-home-location';\nexport default (({\n  draggable,\n  home,\n  draggables,\n  viewport\n}) => {\n  const displacedBy = getDisplacedBy(home.axis, draggable.displaceBy);\n  const insideHome = getDraggablesInsideDroppable(home.descriptor.id, draggables);\n  // in a list that does not start at 0 the descriptor.index might be different from the index in the list\n  // eg a list could be: [2,3,4]. A descriptor.index of '2' would actually be in index '0' of the list\n  const rawIndex = insideHome.indexOf(draggable);\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(rawIndex !== -1, 'Expected draggable to be inside home list');\n  const afterDragging = insideHome.slice(rawIndex + 1);\n  const effected = afterDragging.reduce((previous, item) => {\n    previous[item.descriptor.id] = true;\n    return previous;\n  }, {});\n  const afterCritical = {\n    inVirtualList: home.descriptor.mode === 'virtual',\n    displacedBy,\n    effected\n  };\n  const displaced = getDisplacementGroups({\n    afterDragging,\n    destination: home,\n    displacedBy,\n    last: null,\n    viewport: viewport.frame,\n    // originally we do not want any animation as we want\n    // everything to be fixed in the same position that\n    // it started in\n    forceShouldAnimate: false\n  });\n  const impact = {\n    displaced,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: getHomeLocation(draggable.descriptor)\n    }\n  };\n  return {\n    impact,\n    afterCritical\n  };\n});\n//# sourceMappingURL=get-lift-effect.js.map","export default (descriptor => ({\n  index: descriptor.index,\n  droppableId: descriptor.droppableId\n}));\n//# sourceMappingURL=get-home-location.js.map","// Using function declaration as arrow function does not play well with the %checks syntax\n\nexport default function isMovementAllowed(state) {\n  return state.phase === 'DRAGGING' || state.phase === 'COLLECTING';\n}\n//# sourceMappingURL=is-movement-allowed.js.map","import { invariant } from '../../../invariant';\nimport { toDroppableList } from '../../dimension-structures';\nimport isWithin from '../../is-within';\nimport { closest } from '../../position';\nimport { getCorners } from '../../spacing';\nimport isPartiallyVisibleThroughFrame from '../../visibility/is-partially-visible-through-frame';\nconst getKnownActive = droppable => {\n  const rect = droppable.subject.active;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(rect, 'Cannot get clipped area from droppable');\n  return rect;\n};\nexport default (({\n  isMovingForward,\n  pageBorderBoxCenter,\n  source,\n  droppables,\n  viewport\n}) => {\n  const active = source.subject.active;\n  if (!active) {\n    return null;\n  }\n  const axis = source.axis;\n  const isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);\n  const candidates = toDroppableList(droppables) // Remove the source droppable from the list\n  .filter(droppable => droppable !== source) // Remove any options that are not enabled\n  .filter(droppable => droppable.isEnabled) // Remove any droppables that do not have a visible subject\n  .filter(droppable => Boolean(droppable.subject.active)) // Remove any that are not visible in the window\n  .filter(droppable => isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable))).filter(droppable => {\n    const activeOfTarget = getKnownActive(droppable);\n\n    // is the target in front of the source on the cross axis?\n    if (isMovingForward) {\n      return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];\n    }\n\n    // is the target behind the source on the cross axis?\n    return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];\n  }) // Must have some overlap on the main axis\n  .filter(droppable => {\n    const activeOfTarget = getKnownActive(droppable);\n    const isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);\n    return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);\n  }) // Sort on the cross axis\n  .sort((a, b) => {\n    const first = getKnownActive(a)[axis.crossAxisStart];\n    const second = getKnownActive(b)[axis.crossAxisStart];\n    if (isMovingForward) {\n      return first - second;\n    }\n    return second - first;\n  }) // Find the droppables that have the same cross axis value as the first item\n  .filter((droppable, _index, array) => getKnownActive(droppable)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart]);\n\n  // no possible candidates\n  if (!candidates.length) {\n    return null;\n  }\n\n  // only one result - all done!\n  if (candidates.length === 1) {\n    return candidates[0];\n  }\n\n  // At this point we have a number of candidates that\n  // all have the same axis.crossAxisStart value.\n  // Check to see if the center position is within the size of a Droppable on the main axis\n  const contains = candidates.filter(droppable => {\n    const isWithinDroppable = isWithin(getKnownActive(droppable)[axis.start], getKnownActive(droppable)[axis.end]);\n    return isWithinDroppable(pageBorderBoxCenter[axis.line]);\n  });\n  if (contains.length === 1) {\n    return contains[0];\n  }\n\n  // The center point of the draggable falls on the boundary between two droppables\n  if (contains.length > 1) {\n    // sort on the main axis and choose the first\n    return contains.sort((a, b) => getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start])[0];\n  }\n\n  // The center is not contained within any droppable\n  // 1. Find the candidate that has the closest corner\n  // 2. If there is a tie - choose the one that is first on the main axis\n  return candidates.sort((a, b) => {\n    const first = closest(pageBorderBoxCenter, getCorners(getKnownActive(a)));\n    const second = closest(pageBorderBoxCenter, getCorners(getKnownActive(b)));\n\n    // if the distances are not equal - choose the shortest\n    if (first !== second) {\n      return first - second;\n    }\n\n    // They both have the same distance -\n    // choose the one that is first on the main axis\n    return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];\n  })[0];\n});\n//# sourceMappingURL=get-best-cross-axis-droppable.js.map","import didStartAfterCritical from '../../did-start-after-critical';\nimport { negate, subtract } from '../../position';\nimport { offsetByPosition } from '../../spacing';\nexport const getCurrentPageBorderBoxCenter = (draggable, afterCritical) => {\n  // If an item started displaced it is now resting\n  // in a non-displaced location\n  const original = draggable.page.borderBox.center;\n  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;\n};\nexport const getCurrentPageBorderBox = (draggable, afterCritical) => {\n  // If an item started displaced it is now resting\n  // in a non-displaced location\n  const original = draggable.page.borderBox;\n  return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;\n};\n//# sourceMappingURL=without-starting-displacement.js.map","export default ((draggable, destination) => draggable.descriptor.droppableId === destination.descriptor.id);\n//# sourceMappingURL=is-home-of.js.map","import memoizeOne from 'memoize-one';\nexport default memoizeOne((remove, list) => list.filter(item => item.descriptor.id !== remove.descriptor.id));\n//# sourceMappingURL=remove-draggable-from-list.js.map","import { find } from '../../native-with-fallback';\nimport isHomeOf from '../droppable/is-home-of';\nimport getDisplacementGroups from '../get-displacement-groups';\nimport { emptyGroups } from '../no-impact';\nimport removeDraggableFromList from '../remove-draggable-from-list';\nfunction getIndexOfLastItem(draggables, options) {\n  if (!draggables.length) {\n    return 0;\n  }\n  const indexOfLastItem = draggables[draggables.length - 1].descriptor.index;\n  // When in a foreign list there will be an additional one item in the list\n  return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;\n}\nfunction goAtEnd({\n  insideDestination,\n  inHomeList,\n  displacedBy,\n  destination\n}) {\n  const newIndex = getIndexOfLastItem(insideDestination, {\n    inHomeList\n  });\n  return {\n    displaced: emptyGroups,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: {\n        droppableId: destination.descriptor.id,\n        index: newIndex\n      }\n    }\n  };\n}\nexport default function calculateReorderImpact({\n  draggable,\n  insideDestination,\n  destination,\n  viewport,\n  displacedBy,\n  last,\n  index,\n  forceShouldAnimate\n}) {\n  const inHomeList = isHomeOf(draggable, destination);\n\n  // Go into last spot of list\n  if (index === null) {\n    return goAtEnd({\n      insideDestination,\n      inHomeList,\n      displacedBy,\n      destination\n    });\n  }\n\n  // this might be the dragging item\n  const match = find(insideDestination, item => item.descriptor.index === index);\n  if (!match) {\n    return goAtEnd({\n      insideDestination,\n      inHomeList,\n      displacedBy,\n      destination\n    });\n  }\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const sliceFrom = insideDestination.indexOf(match);\n  const impacted = withoutDragging.slice(sliceFrom);\n  const displaced = getDisplacementGroups({\n    afterDragging: impacted,\n    destination,\n    displacedBy,\n    last,\n    viewport: viewport.frame,\n    forceShouldAnimate\n  });\n  return {\n    displaced,\n    displacedBy,\n    at: {\n      type: 'REORDER',\n      destination: {\n        droppableId: destination.descriptor.id,\n        index: index\n      }\n    }\n  };\n}\n//# sourceMappingURL=calculate-reorder-impact.js.map","import { invariant } from '../../invariant';\nimport getDisplacedBy from '../get-displaced-by';\nimport getDraggablesInsideDroppable from '../get-draggables-inside-droppable';\nimport { add, patch } from '../position';\nimport isHomeOf from './is-home-of';\nimport getSubject from './util/get-subject';\nconst getRequiredGrowthForPlaceholder = (droppable, placeholderSize, draggables) => {\n  const axis = droppable.axis;\n\n  // A virtual list will most likely not contain all of the Draggables\n  // so counting them does not help.\n  if (droppable.descriptor.mode === 'virtual') {\n    return patch(axis.line, placeholderSize[axis.line]);\n  }\n\n  // TODO: consider margin collapsing?\n  // Using contentBox as that is where the Draggables will sit\n  const availableSpace = droppable.subject.page.contentBox[axis.size];\n  const insideDroppable = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n  const spaceUsed = insideDroppable.reduce((sum, dimension) => sum + dimension.client.marginBox[axis.size], 0);\n  const requiredSpace = spaceUsed + placeholderSize[axis.line];\n  const needsToGrowBy = requiredSpace - availableSpace;\n\n  // nothing to do here\n  if (needsToGrowBy <= 0) {\n    return null;\n  }\n  return patch(axis.line, needsToGrowBy);\n};\nconst withMaxScroll = (frame, max) => ({\n  ...frame,\n  scroll: {\n    ...frame.scroll,\n    max\n  }\n});\nexport const addPlaceholder = (droppable, draggable, draggables) => {\n  const frame = droppable.frame;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(!isHomeOf(draggable, droppable), 'Should not add placeholder space to home list');\n  invariant(!droppable.subject.withPlaceholder,\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  'Cannot add placeholder size to a subject when it already has one');\n  const placeholderSize = getDisplacedBy(droppable.axis, draggable.displaceBy).point;\n  const requiredGrowth = getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables);\n  const added = {\n    placeholderSize,\n    increasedBy: requiredGrowth,\n    oldFrameMaxScroll: droppable.frame ? droppable.frame.scroll.max : null\n  };\n  if (!frame) {\n    const subject = getSubject({\n      page: droppable.subject.page,\n      withPlaceholder: added,\n      axis: droppable.axis,\n      frame: droppable.frame\n    });\n    return {\n      ...droppable,\n      subject\n    };\n  }\n  const maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;\n  const newFrame = withMaxScroll(frame, maxScroll);\n  const subject = getSubject({\n    page: droppable.subject.page,\n    withPlaceholder: added,\n    axis: droppable.axis,\n    frame: newFrame\n  });\n  return {\n    ...droppable,\n    subject,\n    frame: newFrame\n  };\n};\nexport const removePlaceholder = droppable => {\n  const added = droppable.subject.withPlaceholder;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(added, 'Cannot remove placeholder form subject when there was none');\n  const frame = droppable.frame;\n  if (!frame) {\n    const subject = getSubject({\n      page: droppable.subject.page,\n      axis: droppable.axis,\n      frame: null,\n      // cleared\n      withPlaceholder: null\n    });\n    return {\n      ...droppable,\n      subject\n    };\n  }\n  const oldMaxScroll = added.oldFrameMaxScroll;\n  invariant(oldMaxScroll,\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  'Expected droppable with frame to have old max frame scroll when removing placeholder');\n  const newFrame = withMaxScroll(frame, oldMaxScroll);\n  const subject = getSubject({\n    page: droppable.subject.page,\n    axis: droppable.axis,\n    frame: newFrame,\n    // cleared\n    withPlaceholder: null\n  });\n  return {\n    ...droppable,\n    subject,\n    frame: newFrame\n  };\n};\n//# sourceMappingURL=with-placeholder.js.map","import { subtract } from '../../position';\nimport { offsetByPosition } from '../../spacing';\nimport { isTotallyVisible, isTotallyVisibleOnAxis } from '../../visibility/is-visible';\nexport default (({\n  draggable,\n  destination,\n  newPageBorderBoxCenter,\n  viewport,\n  withDroppableDisplacement,\n  onlyOnMainAxis = false\n}) => {\n  // What would the location of the Draggable be once the move is completed?\n  // We are not considering margins for this calculation.\n  // This is because a move might move a Draggable slightly outside of the bounds\n  // of a Droppable (which is okay)\n  const changeNeeded = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);\n  const shifted = offsetByPosition(draggable.page.borderBox, changeNeeded);\n  // Must be totally visible, not just partially visible.\n  const args = {\n    target: shifted,\n    destination,\n    withDroppableDisplacement,\n    viewport\n  };\n  return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);\n});\n//# sourceMappingURL=is-totally-visible-in-new-location.js.map","import { vertical } from '../axis';\nimport isWithin from '../is-within';\nexport default (axis => frame => {\n  const isWithinVertical = isWithin(frame.top, frame.bottom);\n  const isWithinHorizontal = isWithin(frame.left, frame.right);\n  return subject => {\n    if (axis === vertical) {\n      return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);\n    }\n    return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n  };\n});\n//# sourceMappingURL=is-totally-visible-through-frame-on-axis.js.map","import getClientFromPageBorderBoxCenter from '../../get-center-from-impact/get-client-border-box-center/get-client-from-page-border-box-center';\nimport getPageBorderBoxCenter from '../../get-center-from-impact/get-page-border-box-center';\n// import moveToNewDroppable from './move-to-new-droppable';\nimport getDraggablesInsideDroppable from '../../get-draggables-inside-droppable';\nimport getBestCrossAxisDroppable from './get-best-cross-axis-droppable';\nimport getClosestDraggable from './get-closest-draggable';\nimport moveToNewDroppable from './move-to-new-droppable';\nexport default (({\n  isMovingForward,\n  previousPageBorderBoxCenter,\n  draggable,\n  isOver,\n  draggables,\n  droppables,\n  viewport,\n  afterCritical\n}) => {\n  // not considering the container scroll changes as container scrolling cancels a keyboard drag\n  const destination = getBestCrossAxisDroppable({\n    isMovingForward,\n    pageBorderBoxCenter: previousPageBorderBoxCenter,\n    source: isOver,\n    droppables,\n    viewport\n  });\n\n  // nothing available to move to\n  if (!destination) {\n    return null;\n  }\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const moveRelativeTo = getClosestDraggable({\n    pageBorderBoxCenter: previousPageBorderBoxCenter,\n    viewport,\n    destination,\n    insideDestination,\n    afterCritical\n  });\n  const impact = moveToNewDroppable({\n    previousPageBorderBoxCenter,\n    destination,\n    draggable,\n    draggables,\n    moveRelativeTo,\n    insideDestination,\n    viewport,\n    afterCritical\n  });\n  if (!impact) {\n    return null;\n  }\n  const pageBorderBoxCenter = getPageBorderBoxCenter({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    afterCritical\n  });\n  const clientSelection = getClientFromPageBorderBoxCenter({\n    pageBorderBoxCenter,\n    draggable,\n    viewport\n  });\n  return {\n    clientSelection,\n    impact,\n    scrollJumpRequest: null\n  };\n});\n//# sourceMappingURL=index.js.map","import { distance } from '../../position';\nimport { isTotallyVisible } from '../../visibility/is-visible';\nimport withDroppableDisplacement from '../../with-scroll-change/with-droppable-displacement';\nimport { getCurrentPageBorderBox, getCurrentPageBorderBoxCenter } from './without-starting-displacement';\nexport default (({\n  pageBorderBoxCenter,\n  viewport,\n  destination,\n  insideDestination,\n  afterCritical\n}) => {\n  const sorted = insideDestination.filter(draggable =>\n  // Allowing movement to draggables that are not visible in the viewport\n  // but must be visible in the droppable\n  // We can improve this, but this limitation is easier for now\n  isTotallyVisible({\n    target: getCurrentPageBorderBox(draggable, afterCritical),\n    destination,\n    viewport: viewport.frame,\n    withDroppableDisplacement: true\n  })).sort((a, b) => {\n    // Need to consider the change in scroll in the destination\n    const distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a, afterCritical)));\n    const distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b, afterCritical)));\n\n    // if a is closer - return a\n    if (distanceToA < distanceToB) {\n      return -1;\n    }\n\n    // if b is closer - return b\n    if (distanceToB < distanceToA) {\n      return 1;\n    }\n\n    // if the distance to a and b are the same:\n    // return the one with the lower index (it will be higher on the main axis)\n    return a.descriptor.index - b.descriptor.index;\n  });\n  return sorted[0] || null;\n});\n//# sourceMappingURL=get-closest-draggable.js.map","import calculateReorderImpact from '../../calculate-drag-impact/calculate-reorder-impact';\nimport isHomeOf from '../../droppable/is-home-of';\nimport { addPlaceholder } from '../../droppable/with-placeholder';\nimport getPageBorderBoxCenter from '../../get-center-from-impact/get-page-border-box-center';\nimport getDisplacedBy from '../../get-displaced-by';\nimport { emptyGroups, noDisplacedBy } from '../../no-impact';\nimport isTotallyVisibleInNewLocation from '../move-to-next-place/is-totally-visible-in-new-location';\nexport default (({\n  previousPageBorderBoxCenter,\n  moveRelativeTo,\n  insideDestination,\n  draggable,\n  draggables,\n  destination,\n  viewport,\n  afterCritical\n}) => {\n  if (!moveRelativeTo) {\n    // Draggables available, but none are candidates for movement\n    if (insideDestination.length) {\n      return null;\n    }\n\n    // Try move to top of empty list if it is visible\n    const proposed = {\n      displaced: emptyGroups,\n      displacedBy: noDisplacedBy,\n      at: {\n        type: 'REORDER',\n        destination: {\n          droppableId: destination.descriptor.id,\n          index: 0\n        }\n      }\n    };\n    const proposedPageBorderBoxCenter = getPageBorderBoxCenter({\n      impact: proposed,\n      draggable,\n      droppable: destination,\n      draggables,\n      afterCritical\n    });\n    // need to add room for a placeholder in a foreign list\n    const withPlaceholder = isHomeOf(draggable, destination) ? destination : addPlaceholder(destination, draggable, draggables);\n    const isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n      draggable,\n      destination: withPlaceholder,\n      newPageBorderBoxCenter: proposedPageBorderBoxCenter,\n      viewport: viewport.frame,\n      // already taken into account by getPageBorderBoxCenter\n      withDroppableDisplacement: false,\n      onlyOnMainAxis: true\n    });\n    return isVisibleInNewLocation ? proposed : null;\n  }\n  const isGoingBeforeTarget = Boolean(\n  // Using <= as we optimise slightly for moving before items in a new list\n  // This is nicer in lists with fixed height items\n  previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);\n  const proposedIndex = (() => {\n    const relativeTo = moveRelativeTo.descriptor.index;\n    if (moveRelativeTo.descriptor.id === draggable.descriptor.id) {\n      return relativeTo;\n    }\n    if (isGoingBeforeTarget) {\n      return relativeTo;\n    }\n    return relativeTo + 1;\n  })();\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    displacedBy,\n    // last groups won't be relevant\n    last: emptyGroups,\n    index: proposedIndex\n  });\n});\n//# sourceMappingURL=move-to-new-droppable.js.map","import { getRect } from 'css-box-model';\nimport { negate, subtract } from './position';\nexport default ((viewport, newScroll) => {\n  const diff = subtract(newScroll, viewport.scroll.initial);\n  const displacement = negate(diff);\n  // We need to update the frame so that it is always a live value\n  // The top / left of the frame should always match the newScroll position\n  const frame = getRect({\n    top: newScroll.y,\n    bottom: newScroll.y + viewport.frame.height,\n    left: newScroll.x,\n    right: newScroll.x + viewport.frame.width\n  });\n  const updated = {\n    frame,\n    scroll: {\n      initial: viewport.scroll.initial,\n      max: viewport.scroll.max,\n      current: newScroll,\n      diff: {\n        value: diff,\n        displacement\n      }\n    }\n  };\n  return updated;\n});\n//# sourceMappingURL=scroll-viewport.js.map","import scrollDroppable from '../droppable/scroll-droppable';\nimport getDisplacementGroups from '../get-displacement-groups';\nimport { add } from '../position';\nimport scrollViewport from '../scroll-viewport';\nfunction getDraggables(ids, draggables) {\n  return ids.map(id => draggables[id]);\n}\nfunction tryGetVisible(id, groups) {\n  for (let i = 0; i < groups.length; i++) {\n    const displacement = groups[i].visible[id];\n    if (displacement) {\n      return displacement;\n    }\n  }\n  return null;\n}\nexport default (({\n  impact,\n  viewport,\n  destination,\n  draggables,\n  maxScrollChange\n}) => {\n  const scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));\n  const scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;\n  const last = impact.displaced;\n  const withViewportScroll = getDisplacementGroups({\n    afterDragging: getDraggables(last.all, draggables),\n    destination,\n    displacedBy: impact.displacedBy,\n    viewport: scrolledViewport.frame,\n    last,\n    // we want the addition to be animated\n    forceShouldAnimate: false\n  });\n  const withDroppableScroll = getDisplacementGroups({\n    afterDragging: getDraggables(last.all, draggables),\n    destination: scrolledDroppable,\n    displacedBy: impact.displacedBy,\n    viewport: viewport.frame,\n    last,\n    // we want the addition to be animated\n    forceShouldAnimate: false\n  });\n  const invisible = {};\n  const visible = {};\n  const groups = [\n  // this will populate the previous entries with the correct animation values\n  last, withViewportScroll, withDroppableScroll];\n  last.all.forEach(id => {\n    const displacement = tryGetVisible(id, groups);\n    if (displacement) {\n      visible[id] = displacement;\n      return;\n    }\n    invisible[id] = true;\n  });\n  const newImpact = {\n    ...impact,\n    displaced: {\n      all: last.all,\n      invisible,\n      visible\n    }\n  };\n  return newImpact;\n});\n//# sourceMappingURL=speculatively-increase.js.map","import { invariant } from '../../../../invariant';\nimport calculateReorderImpact from '../../../calculate-drag-impact/calculate-reorder-impact';\nimport fromCombine from './from-combine';\nimport fromReorder from './from-reorder';\nconst isReorder = wasAt => {\n  return wasAt.type === 'REORDER';\n};\nexport default (({\n  isMovingForward,\n  isInHomeList,\n  draggable,\n  draggables,\n  destination,\n  insideDestination,\n  previousImpact,\n  viewport,\n  afterCritical\n}) => {\n  const wasAt = previousImpact.at;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(wasAt, 'Cannot move in direction without previous impact location');\n\n  // if (wasAt!.type === 'REORDER') {\n  if (isReorder(wasAt)) {\n    const newIndex = fromReorder({\n      isMovingForward,\n      isInHomeList,\n      location: wasAt.destination,\n      insideDestination\n    });\n\n    // TODO: can we just pass new index on?\n    if (newIndex === null) {\n      return null;\n    }\n    return calculateReorderImpact({\n      draggable,\n      insideDestination,\n      destination,\n      viewport,\n      last: previousImpact.displaced,\n      displacedBy: previousImpact.displacedBy,\n      index: newIndex\n    });\n  }\n\n  // COMBINE\n  const newIndex = fromCombine({\n    isMovingForward,\n    destination,\n    displaced: previousImpact.displaced,\n    draggables,\n    combine: wasAt.combine,\n    afterCritical\n  });\n  if (newIndex === null) {\n    return null;\n  }\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    last: previousImpact.displaced,\n    displacedBy: previousImpact.displacedBy,\n    index: newIndex\n  });\n});\n//# sourceMappingURL=index.js.map","export default (({\n  isMovingForward,\n  isInHomeList,\n  insideDestination,\n  location\n}) => {\n  // cannot move in the list\n  if (!insideDestination.length) {\n    return null;\n  }\n  const currentIndex = location.index;\n  const proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;\n  // Accounting for lists that might not start with an index of 0\n  const firstIndex = insideDestination[0].descriptor.index;\n  const lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;\n  // When in foreign list we allow movement after the last item\n  const upperBound = isInHomeList ? lastIndex : lastIndex + 1;\n  if (proposedIndex < firstIndex) {\n    return null;\n  }\n  if (proposedIndex > upperBound) {\n    return null;\n  }\n  return proposedIndex;\n});\n//# sourceMappingURL=from-reorder.js.map","import didStartAfterCritical from '../../../did-start-after-critical';\nexport default (({\n  isMovingForward,\n  destination,\n  draggables,\n  combine,\n  afterCritical\n}) => {\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const combineId = combine.draggableId;\n  const combineWith = draggables[combineId];\n  const combineWithIndex = combineWith.descriptor.index;\n  const didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);\n  if (didCombineWithStartAfterCritical) {\n    if (isMovingForward) {\n      return combineWithIndex;\n    }\n    return combineWithIndex - 1;\n  }\n  if (isMovingForward) {\n    return combineWithIndex + 1;\n  }\n  return combineWithIndex;\n});\n//# sourceMappingURL=from-combine.js.map","import isHomeOf from '../../droppable/is-home-of';\nimport getClientFromPageBorderBoxCenter from '../../get-center-from-impact/get-client-border-box-center/get-client-from-page-border-box-center';\nimport getPageBorderBoxCenter from '../../get-center-from-impact/get-page-border-box-center';\nimport getDraggablesInsideDroppable from '../../get-draggables-inside-droppable';\nimport { subtract } from '../../position';\nimport speculativelyIncrease from '../../update-displacement-visibility/speculatively-increase';\nimport isTotallyVisibleInNewLocation from './is-totally-visible-in-new-location';\nimport moveToNextCombine from './move-to-next-combine';\nimport moveToNextIndex from './move-to-next-index';\nexport default (({\n  isMovingForward,\n  draggable,\n  destination,\n  draggables,\n  previousImpact,\n  viewport,\n  previousPageBorderBoxCenter,\n  previousClientSelection,\n  afterCritical\n}) => {\n  if (!destination.isEnabled) {\n    return null;\n  }\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  const isInHomeList = isHomeOf(draggable, destination);\n  const impact = moveToNextCombine({\n    isMovingForward,\n    draggable,\n    destination,\n    insideDestination,\n    previousImpact\n  }) || moveToNextIndex({\n    isMovingForward,\n    isInHomeList,\n    draggable,\n    draggables,\n    destination,\n    insideDestination,\n    previousImpact,\n    viewport,\n    afterCritical\n  });\n  if (!impact) {\n    return null;\n  }\n  const pageBorderBoxCenter = getPageBorderBoxCenter({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    afterCritical\n  });\n  const isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n    draggable,\n    destination,\n    newPageBorderBoxCenter: pageBorderBoxCenter,\n    viewport: viewport.frame,\n    // already taken into account by getPageBorderBoxCenter\n    withDroppableDisplacement: false,\n    // we only care about it being visible relative to the main axis\n    // this is important with dynamic changes as scroll bar and toggle\n    // on the cross axis during a drag\n    onlyOnMainAxis: true\n  });\n  if (isVisibleInNewLocation) {\n    // using the client center as the selection point\n    const clientSelection = getClientFromPageBorderBoxCenter({\n      pageBorderBoxCenter,\n      draggable,\n      viewport\n    });\n    return {\n      clientSelection,\n      impact,\n      scrollJumpRequest: null\n    };\n  }\n  const distance = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);\n  const cautious = speculativelyIncrease({\n    impact,\n    viewport,\n    destination,\n    draggables,\n    maxScrollChange: distance\n  });\n  return {\n    clientSelection: previousClientSelection,\n    impact: cautious,\n    scrollJumpRequest: distance\n  };\n});\n//# sourceMappingURL=index.js.map","import { invariant } from '../../../../invariant';\nimport { findIndex } from '../../../../native-with-fallback';\nimport { tryGetDestination } from '../../../get-impact-location';\nimport removeDraggableFromList from '../../../remove-draggable-from-list';\nexport default (({\n  isMovingForward,\n  draggable,\n  destination,\n  insideDestination,\n  previousImpact\n}) => {\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const location = tryGetDestination(previousImpact);\n  if (!location) {\n    return null;\n  }\n  function getImpact(target) {\n    const at = {\n      type: 'COMBINE',\n      combine: {\n        draggableId: target,\n        droppableId: destination.descriptor.id\n      }\n    };\n    return {\n      ...previousImpact,\n      at\n    };\n  }\n  const all = previousImpact.displaced.all;\n  const closestId = all.length ? all[0] : null;\n  if (isMovingForward) {\n    return closestId ? getImpact(closestId) : null;\n  }\n  const withoutDraggable = removeDraggableFromList(draggable, insideDestination);\n\n  // Moving backwards\n  // if nothing is displaced - move backwards onto the last item\n  if (!closestId) {\n    if (!withoutDraggable.length) {\n      return null;\n    }\n    const last = withoutDraggable[withoutDraggable.length - 1];\n    return getImpact(last.descriptor.id);\n  }\n\n  // We are moving from being between two displaced items\n  // backwards onto the first one\n  // need to find the first item before the closest\n  const indexOfClosest = findIndex(withoutDraggable, d => d.descriptor.id === closestId);\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(indexOfClosest !== -1, 'Could not find displaced item in set');\n  const proposedIndex = indexOfClosest - 1;\n\n  // There is no displaced item before\n  if (proposedIndex < 0) {\n    return null;\n  }\n  const before = withoutDraggable[proposedIndex];\n  return getImpact(before.descriptor.id);\n});\n//# sourceMappingURL=index.js.map","import whatIsDraggedOver from '../droppable/what-is-dragged-over';\nimport moveCrossAxis from './move-cross-axis';\nimport moveToNextPlace from './move-to-next-place';\nconst getDroppableOver = (impact, droppables) => {\n  const id = whatIsDraggedOver(impact);\n  return id ? droppables[id] : null;\n};\nexport default (({\n  state,\n  type\n}) => {\n  const isActuallyOver = getDroppableOver(state.impact, state.dimensions.droppables);\n  const isMainAxisMovementAllowed = Boolean(isActuallyOver);\n  const home = state.dimensions.droppables[state.critical.droppable.id];\n  // use home when not actually over a droppable (can happen when move is disabled)\n  const isOver = isActuallyOver || home;\n  const direction = isOver.axis.direction;\n  const isMovingOnMainAxis = direction === 'vertical' && (type === 'MOVE_UP' || type === 'MOVE_DOWN') || direction === 'horizontal' && (type === 'MOVE_LEFT' || type === 'MOVE_RIGHT');\n\n  // This movement is not permitted right now\n  if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {\n    return null;\n  }\n  const isMovingForward = type === 'MOVE_DOWN' || type === 'MOVE_RIGHT';\n  const draggable = state.dimensions.draggables[state.critical.draggable.id];\n  const previousPageBorderBoxCenter = state.current.page.borderBoxCenter;\n  const {\n    draggables,\n    droppables\n  } = state.dimensions;\n  return isMovingOnMainAxis ? moveToNextPlace({\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    destination: isOver,\n    draggables,\n    viewport: state.viewport,\n    previousClientSelection: state.current.client.selection,\n    previousImpact: state.impact,\n    afterCritical: state.afterCritical\n  }) : moveCrossAxis({\n    isMovingForward,\n    previousPageBorderBoxCenter,\n    draggable,\n    isOver,\n    draggables,\n    droppables,\n    viewport: state.viewport,\n    afterCritical: state.afterCritical\n  });\n});\n//# sourceMappingURL=index.js.map","export default ((droppables, updated) => ({\n  ...droppables,\n  [updated.descriptor.id]: updated\n}));\n//# sourceMappingURL=patch-droppable-map.js.map","import { toDroppableList } from './dimension-structures';\nimport isWithin from './is-within';\nimport { distance, patch } from './position';\nimport isPositionInFrame from './visibility/is-position-in-frame';\n\n// https://stackoverflow.com/questions/306316/determine-if-two-rectangles-overlap-each-other\n// https://silentmatt.com/rectangle-intersection/\nfunction getHasOverlap(first, second) {\n  return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;\n}\nfunction getFurthestAway({\n  pageBorderBox,\n  draggable,\n  candidates\n}) {\n  // We are not comparing the center of the home list with the target list as it would\n  // give preference to giant lists\n  // We are measuring the distance from where the draggable started\n  // to where it is *hitting* the candidate\n  // Note: The hit point might technically not be in the bounds of the candidate\n  const startCenter = draggable.page.borderBox.center;\n  const sorted = candidates.map(candidate => {\n    const axis = candidate.axis;\n    const target = patch(candidate.axis.line,\n    // use the current center of the dragging item on the main axis\n    pageBorderBox.center[axis.line],\n    // use the center of the list on the cross axis\n    candidate.page.borderBox.center[axis.crossAxisLine]);\n    return {\n      id: candidate.descriptor.id,\n      distance: distance(startCenter, target)\n    };\n  }) // largest value will be first\n  .sort((a, b) => b.distance - a.distance);\n  // just being safe\n  return sorted[0] ? sorted[0].id : null;\n}\nexport default function getDroppableOver({\n  pageBorderBox,\n  draggable,\n  droppables\n}) {\n  // We know at this point that some overlap has to exist\n  const candidates = toDroppableList(droppables).filter(item => {\n    // Cannot be a candidate when disabled\n    if (!item.isEnabled) {\n      return false;\n    }\n\n    // Cannot be a candidate when there is no visible area\n    const active = item.subject.active;\n    if (!active) {\n      return false;\n    }\n\n    // Cannot be a candidate when dragging item is not over the droppable at all\n    if (!getHasOverlap(pageBorderBox, active)) {\n      return false;\n    }\n\n    // 1. Candidate if the center position is over a droppable\n    if (isPositionInFrame(active)(pageBorderBox.center)) {\n      return true;\n    }\n\n    // 2. Candidate if an edge is over the cross axis half way point\n    // 3. Candidate if dragging item is totally over droppable on cross axis\n    const axis = item.axis;\n    const childCenter = active.center[axis.crossAxisLine];\n    const crossAxisStart = pageBorderBox[axis.crossAxisStart];\n    const crossAxisEnd = pageBorderBox[axis.crossAxisEnd];\n    const isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);\n    const isStartContained = isContained(crossAxisStart);\n    const isEndContained = isContained(crossAxisEnd);\n\n    // Dragging item is totally covering the active area\n    if (!isStartContained && !isEndContained) {\n      return true;\n    }\n\n    /**\n     * edges must go beyond the center line in order to avoid\n     * cases were both conditions are satisfied.\n     */\n    if (isStartContained) {\n      return crossAxisStart < childCenter;\n    }\n    return crossAxisEnd > childCenter;\n  });\n  if (!candidates.length) {\n    return null;\n  }\n\n  // Only one candidate - use that!\n  if (candidates.length === 1) {\n    return candidates[0].descriptor.id;\n  }\n\n  // Multiple options returned\n  // Should only occur with really large items\n  // Going to use fallback: distance from home\n  return getFurthestAway({\n    pageBorderBox,\n    draggable,\n    candidates\n  });\n}\n//# sourceMappingURL=get-droppable-over.js.map","import { getRect } from 'css-box-model';\nimport { offsetByPosition } from './spacing';\nexport const offsetRectByPosition = (rect, point) => getRect(offsetByPosition(rect, point));\n//# sourceMappingURL=rect.js.map","export default function getIsDisplaced({\n  displaced,\n  id\n}) {\n  return Boolean(displaced.visible[id] || displaced.invisible[id]);\n}\n//# sourceMappingURL=get-is-displaced.js.map","import { find } from '../../native-with-fallback';\nimport calculateReorderImpact from '../calculate-drag-impact/calculate-reorder-impact';\nimport getDidStartAfterCritical from '../did-start-after-critical';\nimport isHomeOf from '../droppable/is-home-of';\nimport getDisplacedBy from '../get-displaced-by';\nimport getIsDisplaced from '../get-is-displaced';\nimport removeDraggableFromList from '../remove-draggable-from-list';\nfunction atIndex({\n  draggable,\n  closest,\n  inHomeList\n}) {\n  if (!closest) {\n    return null;\n  }\n  if (!inHomeList) {\n    return closest.descriptor.index;\n  }\n  if (closest.descriptor.index > draggable.descriptor.index) {\n    return closest.descriptor.index - 1;\n  }\n  return closest.descriptor.index;\n}\nexport default (({\n  pageBorderBoxWithDroppableScroll: targetRect,\n  draggable,\n  destination,\n  insideDestination,\n  last,\n  viewport,\n  afterCritical\n}) => {\n  const axis = destination.axis;\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  const displacement = displacedBy.value;\n  const targetStart = targetRect[axis.start];\n  const targetEnd = targetRect[axis.end];\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const closest = find(withoutDragging, child => {\n    const id = child.descriptor.id;\n    const childCenter = child.page.borderBox.center[axis.line];\n    const childStart = child.page.borderBox[axis.line === 'y' ? 'top' : 'left'];\n    const childBottom = child.page.borderBox[axis.line === 'y' ? 'bottom' : 'right'];\n    const didStartAfterCritical = getDidStartAfterCritical(id, afterCritical);\n    const isDisplaced = getIsDisplaced({\n      displaced: last,\n      id\n    });\n\n    /*\n    Note: we change things when moving *past* the child center - not when it hits the center\n    If we make it when we *hit* the child center then there can be\n    a hit on the next update causing a flicker.\n    - Update 1: targetBottom hits center => displace backwards\n    - Update 2: targetStart is now hitting the displaced center => displace forwards\n    - Update 3: goto 1 (boom)\n    */\n    if (didStartAfterCritical) {\n      // Continue to displace while targetEnd before the childCenter\n      // Move once we *move forward past* the childCenter\n      if (isDisplaced) {\n        // return targetEnd <= childCenter;\n        return axis.line === 'y' ? targetStart <= childStart : targetEnd <= childCenter;\n      }\n\n      // Has been moved backwards from where it started\n      // Displace forwards when targetStart *moves backwards past* the displaced childCenter\n      // return targetStart < childCenter - displacement;\n      return axis.line === 'y' ? targetStart < childStart : targetStart < childCenter - displacement;\n    }\n\n    // Item has been shifted forward.\n    // Remove displacement when targetEnd moves forward past the displaced center\n    if (isDisplaced) {\n      // return targetEnd <= childCenter + displacement;\n      return axis.line === 'y' ? targetStart <= childBottom : targetEnd <= childCenter + displacement;\n    }\n\n    // Item is behind the dragging item\n    // We want to displace it if the targetStart goes *backwards past* the childCenter\n    // return targetStart < childCenter;\n    return axis.line === 'y' ? targetStart < childBottom : targetStart < childCenter;\n  });\n  const newIndex = atIndex({\n    draggable,\n    closest,\n    inHomeList: isHomeOf(draggable, destination)\n  });\n  // TODO: index cannot be null?\n  // otherwise return null from there and return empty impact\n  // that was calculate reorder impact does not need to account for a null index\n  return calculateReorderImpact({\n    draggable,\n    insideDestination,\n    destination,\n    viewport,\n    last,\n    displacedBy,\n    index: newIndex\n  });\n});\n//# sourceMappingURL=get-reorder-impact.js.map","import getDraggablesInsideDroppable from '../get-draggables-inside-droppable';\nimport getDroppableOver from '../get-droppable-over';\nimport noImpact from '../no-impact';\nimport { offsetRectByPosition } from '../rect';\nimport withDroppableScroll from '../with-scroll-change/with-droppable-scroll';\nimport getCombineImpact from './get-combine-impact';\nimport getReorderImpact from './get-reorder-impact';\nexport default (({\n  pageOffset,\n  draggable,\n  draggables,\n  droppables,\n  previousImpact,\n  viewport,\n  afterCritical\n}) => {\n  const pageBorderBox = offsetRectByPosition(draggable.page.borderBox, pageOffset);\n  const destinationId = getDroppableOver({\n    pageBorderBox,\n    draggable,\n    droppables\n  });\n\n  // not dragging over anything\n  if (!destinationId) {\n    // A big design decision was made here to collapse the home list\n    // when not over any list. This yielded the most consistently beautiful experience.\n    return noImpact;\n  }\n  const destination = droppables[destinationId];\n  const insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n  // Where the element actually is now.\n  // Need to take into account the change of scroll in the droppable\n  const pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);\n  // checking combine first so we combine before any reordering\n  return getCombineImpact({\n    pageBorderBoxWithDroppableScroll,\n    draggable,\n    previousImpact,\n    destination,\n    insideDestination,\n    afterCritical\n  }) || getReorderImpact({\n    pageBorderBoxWithDroppableScroll,\n    draggable,\n    destination,\n    insideDestination,\n    last: previousImpact.displaced,\n    viewport,\n    afterCritical\n  });\n});\n//# sourceMappingURL=index.js.map","import { offsetRectByPosition } from '../rect';\nexport default ((droppable, area) => {\n  const frame = droppable.frame;\n  if (!frame) {\n    return area;\n  }\n  return offsetRectByPosition(area, frame.scroll.diff.value);\n});\n//# sourceMappingURL=with-droppable-scroll.js.map","import { find } from '../../native-with-fallback';\nimport getDidStartAfterCritical from '../did-start-after-critical';\nimport getDisplacedBy from '../get-displaced-by';\nimport getIsDisplaced from '../get-is-displaced';\nimport removeDraggableFromList from '../remove-draggable-from-list';\n// exported for testing\nexport const combineThresholdDivisor = 4;\nexport default (({\n  draggable,\n  pageBorderBoxWithDroppableScroll: targetRect,\n  previousImpact,\n  destination,\n  insideDestination,\n  afterCritical\n}) => {\n  if (!destination.isCombineEnabled) {\n    return null;\n  }\n  const axis = destination.axis;\n  const displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n  const displacement = displacedBy.value;\n  const targetStart = targetRect[axis.start];\n  const targetEnd = targetRect[axis.end];\n  const withoutDragging = removeDraggableFromList(draggable, insideDestination);\n  const combineWith = find(withoutDragging, child => {\n    const id = child.descriptor.id;\n    const childRect = child.page.borderBox;\n    const childSize = childRect[axis.size];\n    const threshold = childSize / combineThresholdDivisor;\n    const didStartAfterCritical = getDidStartAfterCritical(id, afterCritical);\n    const isDisplaced = getIsDisplaced({\n      displaced: previousImpact.displaced,\n      id\n    });\n\n    /*\n    Only combining when in the combine region\n    As soon as a boundary is hit then no longer combining\n    */\n    if (didStartAfterCritical) {\n      // In original position\n      // Will combine with item when inside a band\n      if (isDisplaced) {\n        return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;\n      }\n\n      // child is now 'displaced' backwards from where it started\n      // want to combine when we move backwards onto it\n      return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;\n    }\n\n    // item has moved forwards\n    if (isDisplaced) {\n      return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;\n    }\n\n    // is in resting position - being moved backwards on to\n    return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;\n  });\n  if (!combineWith) {\n    return null;\n  }\n  const impact = {\n    // no change to displacement when combining\n    displacedBy,\n    displaced: previousImpact.displaced,\n    at: {\n      type: 'COMBINE',\n      combine: {\n        draggableId: combineWith.descriptor.id,\n        droppableId: destination.descriptor.id\n      }\n    }\n  };\n  return impact;\n});\n//# sourceMappingURL=get-combine-impact.js.map","import isHomeOf from './droppable/is-home-of';\nimport whatIsDraggedOver from './droppable/what-is-dragged-over';\nimport { addPlaceholder, removePlaceholder } from './droppable/with-placeholder';\nimport patchDroppableMap from './patch-droppable-map';\nconst clearUnusedPlaceholder = ({\n  previousImpact,\n  impact,\n  droppables\n}) => {\n  const last = whatIsDraggedOver(previousImpact);\n  const now = whatIsDraggedOver(impact);\n  if (!last) {\n    return droppables;\n  }\n\n  // no change - can keep the last state\n  if (last === now) {\n    return droppables;\n  }\n  const lastDroppable = droppables[last];\n\n  // nothing to clear\n  if (!lastDroppable.subject.withPlaceholder) {\n    return droppables;\n  }\n  const updated = removePlaceholder(lastDroppable);\n  return patchDroppableMap(droppables, updated);\n};\nexport default (({\n  draggable,\n  draggables,\n  droppables,\n  previousImpact,\n  impact\n}) => {\n  const cleaned = clearUnusedPlaceholder({\n    previousImpact,\n    impact,\n    droppables\n  });\n  const isOver = whatIsDraggedOver(impact);\n  if (!isOver) {\n    return cleaned;\n  }\n  const droppable = droppables[isOver];\n\n  // no need to add additional space to home droppable\n  if (isHomeOf(draggable, droppable)) {\n    return cleaned;\n  }\n\n  // already have a placeholder - nothing to do here!\n  if (droppable.subject.withPlaceholder) {\n    return cleaned;\n  }\n\n  // Need to patch the existing droppable\n  const patched = addPlaceholder(droppable, draggable, draggables);\n  return patchDroppableMap(cleaned, patched);\n});\n//# sourceMappingURL=recompute-placeholders.js.map","import getDragImpact from '../../get-drag-impact';\nimport { add, subtract } from '../../position';\nimport recomputePlaceholders from '../../recompute-placeholders';\nexport default (({\n  state,\n  clientSelection: forcedClientSelection,\n  dimensions: forcedDimensions,\n  viewport: forcedViewport,\n  impact: forcedImpact,\n  scrollJumpRequest\n}) => {\n  // DRAGGING: can update position and impact\n  // COLLECTING: can update position but cannot update impact\n  const viewport = forcedViewport || state.viewport;\n  const dimensions = forcedDimensions || state.dimensions;\n  const clientSelection = forcedClientSelection || state.current.client.selection;\n  const offset = subtract(clientSelection, state.initial.client.selection);\n  const client = {\n    offset,\n    selection: clientSelection,\n    borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)\n  };\n  const page = {\n    selection: add(client.selection, viewport.scroll.current),\n    borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),\n    offset: add(client.offset, viewport.scroll.diff.value)\n  };\n  const current = {\n    client,\n    page\n  };\n\n  // Not updating impact while bulk collecting\n  if (state.phase === 'COLLECTING') {\n    return {\n      ...state,\n      dimensions,\n      viewport,\n      current\n    };\n  }\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const newImpact = forcedImpact || getDragImpact({\n    pageOffset: page.offset,\n    draggable,\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables,\n    previousImpact: state.impact,\n    viewport,\n    afterCritical: state.afterCritical\n  });\n  const withUpdatedPlaceholders = recomputePlaceholders({\n    draggable,\n    impact: newImpact,\n    previousImpact: state.impact,\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables\n  });\n  // dragging!\n  const result = {\n    ...state,\n    current,\n    dimensions: {\n      draggables: dimensions.draggables,\n      droppables: withUpdatedPlaceholders\n    },\n    impact: newImpact,\n    viewport,\n    scrollJumpRequest: scrollJumpRequest || null,\n    // client updates can be applied as a part of a jump scroll\n    // this can be to immediately reverse movement to allow for a nice animation\n    // into the final position\n    forceShouldAnimate: scrollJumpRequest ? false : null\n  };\n  return result;\n});\n//# sourceMappingURL=update.js.map","import { invariant } from '../../../invariant';\nimport whatIsDraggedOver from '../../droppable/what-is-dragged-over';\nimport getClientBorderBoxCenter from '../../get-center-from-impact/get-client-border-box-center';\nimport recomputeDisplacementVisibility from '../../update-displacement-visibility/recompute';\nimport update from './update';\nexport default (({\n  state,\n  dimensions: forcedDimensions,\n  viewport: forcedViewport\n}) => {\n  invariant(state.movementMode === 'SNAP');\n  const needsVisibilityCheck = state.impact;\n  const viewport = forcedViewport || state.viewport;\n  const dimensions = forcedDimensions || state.dimensions;\n  const {\n    draggables,\n    droppables\n  } = dimensions;\n  const draggable = draggables[state.critical.draggable.id];\n  const isOver = whatIsDraggedOver(needsVisibilityCheck);\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(isOver, 'Must be over a destination in SNAP movement mode');\n  const destination = droppables[isOver];\n  const impact = recomputeDisplacementVisibility({\n    impact: needsVisibilityCheck,\n    viewport,\n    destination,\n    draggables\n  });\n  const clientSelection = getClientBorderBoxCenter({\n    impact,\n    draggable,\n    droppable: destination,\n    draggables,\n    viewport,\n    afterCritical: state.afterCritical\n  });\n  return update({\n    // new\n    impact,\n    clientSelection,\n    // pass through\n    state,\n    dimensions,\n    viewport\n  });\n});\n//# sourceMappingURL=refresh-snap.js.map","import getFrame from '../get-frame';\nimport { add } from '../position';\nimport offsetDraggable from './offset-draggable';\nexport default (({\n  additions,\n  updatedDroppables,\n  viewport\n}) => {\n  // We need to adjust collected draggables so that they\n  // match the model we had when the drag started.\n  // When a draggable is dynamically collected it does not have\n  // the same relative client position. We need to unwind\n  // any changes in window scroll and droppable scroll so that\n  // the newly collected draggables fit in with our other draggables\n  // and give the same dimensions that would have had if they were\n  // collected at the start of the drag.\n  // Need to undo the displacement caused by window scroll changes\n  const windowScrollChange = viewport.scroll.diff.value;\n  // These modified droppables have already had their scroll changes correctly updated\n  return additions.map(draggable => {\n    const droppableId = draggable.descriptor.droppableId;\n    const modified = updatedDroppables[droppableId];\n    const frame = getFrame(modified);\n    const droppableScrollChange = frame.scroll.diff.value;\n    const totalChange = add(windowScrollChange, droppableScrollChange);\n    const moved = offsetDraggable({\n      draggable,\n      offset: totalChange,\n      initialWindowScroll: viewport.scroll.initial\n    });\n    return moved;\n  });\n});\n//# sourceMappingURL=adjust-additions-for-scroll-changes.js.map","import { invariant } from '../invariant';\nexport default (droppable => {\n  const frame = droppable.frame;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(frame, 'Expected Droppable to have a frame');\n  return frame;\n});\n//# sourceMappingURL=get-frame.js.map","import { offset as offsetBox, withScroll } from 'css-box-model';\nexport default (({\n  draggable,\n  offset,\n  initialWindowScroll\n}) => {\n  const client = offsetBox(draggable.client, offset);\n  const page = withScroll(client, initialWindowScroll);\n  const moved = {\n    ...draggable,\n    placeholder: {\n      ...draggable.placeholder,\n      client\n    },\n    client,\n    page\n  };\n  return moved;\n});\n//# sourceMappingURL=offset-draggable.js.map","import { invariant } from '../invariant';\nimport { isSomeDraggingState } from '../type-utils';\nimport { toDroppableList } from './dimension-structures';\nimport scrollDroppable from './droppable/scroll-droppable';\nimport getLiftEffect from './get-lift-effect';\nimport isMovementAllowed from './is-movement-allowed';\nimport moveInDirection from './move-in-direction';\nimport patchDimensionMap from './patch-dimension-map';\nimport { add, isEqual, origin } from './position';\nimport refreshSnap from './post-reducer/when-moving/refresh-snap';\nimport update from './post-reducer/when-moving/update';\nimport publishWhileDraggingInVirtual from './publish-while-dragging-in-virtual';\nimport scrollViewport from './scroll-viewport';\nconst isSnapping = state => state.movementMode === 'SNAP';\nconst postDroppableChange = (state, updated, isEnabledChanging) => {\n  const dimensions = patchDimensionMap(state.dimensions, updated);\n\n  // if the enabled state is changing, we need to force a update\n  if (!isSnapping(state) || isEnabledChanging) {\n    return update({\n      state,\n      dimensions\n    });\n  }\n  return refreshSnap({\n    state,\n    dimensions\n  });\n};\nfunction removeScrollJumpRequest(state) {\n  if (isSomeDraggingState(state) && state.movementMode === 'SNAP') {\n    return {\n      ...state,\n      scrollJumpRequest: null\n    };\n  }\n  return state;\n}\nconst idle = {\n  phase: 'IDLE',\n  completed: null,\n  shouldFlush: false\n};\nexport default ((state = idle, action) => {\n  if (action.type === 'FLUSH') {\n    return {\n      ...idle,\n      shouldFlush: true\n    };\n  }\n  if (action.type === 'INITIAL_PUBLISH') {\n    invariant(state.phase === 'IDLE', 'INITIAL_PUBLISH must come after a IDLE phase');\n    const {\n      critical,\n      clientSelection,\n      viewport,\n      dimensions,\n      movementMode\n    } = action.payload;\n    const draggable = dimensions.draggables[critical.draggable.id];\n    const home = dimensions.droppables[critical.droppable.id];\n    const client = {\n      selection: clientSelection,\n      borderBoxCenter: draggable.client.borderBox.center,\n      offset: origin\n    };\n    const initial = {\n      client,\n      page: {\n        selection: add(client.selection, viewport.scroll.initial),\n        borderBoxCenter: add(client.selection, viewport.scroll.initial),\n        offset: add(client.selection, viewport.scroll.diff.value)\n      }\n    };\n    // Can only auto scroll the window if every list is not fixed on the page\n    const isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(item => !item.isFixedOnPage);\n    const {\n      impact,\n      afterCritical\n    } = getLiftEffect({\n      draggable,\n      home,\n      draggables: dimensions.draggables,\n      viewport\n    });\n    const result = {\n      phase: 'DRAGGING',\n      isDragging: true,\n      critical,\n      movementMode,\n      dimensions,\n      initial,\n      current: initial,\n      isWindowScrollAllowed,\n      impact,\n      afterCritical,\n      onLiftImpact: impact,\n      viewport,\n      scrollJumpRequest: null,\n      forceShouldAnimate: null\n    };\n    return result;\n  }\n  if (action.type === 'COLLECTION_STARTING') {\n    // A collection might have restarted. We do not care as we are already in the right phase\n    // TODO: remove?\n    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {\n      return state;\n    }\n\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(state.phase === 'DRAGGING', `Collection cannot start from phase ${state.phase}`);\n    const result = {\n      ...state,\n      phase: 'COLLECTING'\n    };\n    return result;\n  }\n  if (action.type === 'PUBLISH_WHILE_DRAGGING') {\n    // Unexpected bulk publish\n    invariant(state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING',\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Unexpected ${action.type} received in phase ${state.phase}`);\n    return publishWhileDraggingInVirtual({\n      state: state,\n      published: action.payload\n    });\n  }\n  if (action.type === 'MOVE') {\n    // Not allowing any more movements\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    invariant(isMovementAllowed(state), `${action.type} not permitted in phase ${state.phase}`);\n    const {\n      client: clientSelection\n    } = action.payload;\n    const movementAllowedState = state;\n\n    // nothing needs to be done\n    if (isEqual(clientSelection, movementAllowedState.current.client.selection)) {\n      return state;\n    }\n    return update({\n      state: movementAllowedState,\n      clientSelection,\n      // If we are snap moving - manual movements should not update the impact\n      impact: isSnapping(movementAllowedState) ? movementAllowedState.impact : null\n    });\n  }\n  if (action.type === 'UPDATE_DROPPABLE_SCROLL') {\n    // Not allowing changes while a drop is pending\n    // Cannot get this during a DROP_ANIMATING as the dimension\n    // marshal will cancel any pending scroll updates\n    if (state.phase === 'DROP_PENDING') {\n      return removeScrollJumpRequest(state);\n    }\n\n    // We will be updating the scroll in response to dynamic changes\n    // manually on the droppable so we can ignore this change\n    if (state.phase === 'COLLECTING') {\n      return removeScrollJumpRequest(state);\n    }\n    invariant(isMovementAllowed(state), `${action.type} not permitted in phase ${state.phase}`);\n    const movementAllowedState = state;\n    const {\n      id,\n      newScroll\n    } = action.payload;\n    const target = movementAllowedState.dimensions.droppables[id];\n\n    // This is possible if a droppable has been asked to watch scroll but\n    // the dimension has not been published yet\n    if (!target) {\n      return state;\n    }\n    const scrolled = scrollDroppable(target, newScroll);\n    return postDroppableChange(movementAllowedState, scrolled, false);\n  }\n  if (action.type === 'UPDATE_DROPPABLE_IS_ENABLED') {\n    // Things are locked at this point\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    invariant(isMovementAllowed(state),\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Attempting to move in an unsupported phase ${state.phase}`);\n    const movementAllowedState = state;\n    const {\n      id,\n      isEnabled\n    } = action.payload;\n    const target = movementAllowedState.dimensions.droppables[id];\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(target, `Cannot find Droppable[id: ${id}] to toggle its enabled state`);\n    invariant(target.isEnabled !== isEnabled,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Trying to set droppable isEnabled to ${String(isEnabled)}\n      but it is already ${String(target.isEnabled)}`);\n    const updated = {\n      ...target,\n      isEnabled\n    };\n    return postDroppableChange(movementAllowedState, updated, true);\n  }\n  if (action.type === 'UPDATE_DROPPABLE_IS_COMBINE_ENABLED') {\n    // Things are locked at this point\n    if (state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    invariant(isMovementAllowed(state),\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Attempting to move in an unsupported phase ${state.phase}`);\n    const movementAllowedState = state;\n    const {\n      id,\n      isCombineEnabled\n    } = action.payload;\n    const maybeTarget = movementAllowedState.dimensions.droppables[id];\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(maybeTarget, `Cannot find Droppable[id: ${id}] to toggle its isCombineEnabled state`);\n    const target = maybeTarget;\n    invariant(target.isCombineEnabled !== isCombineEnabled,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Trying to set droppable isCombineEnabled to ${String(isCombineEnabled)}\n      but it is already ${String(target.isCombineEnabled)}`);\n    const updated = {\n      ...target,\n      isCombineEnabled\n    };\n    return postDroppableChange(movementAllowedState, updated, true);\n  }\n  if (action.type === 'MOVE_BY_WINDOW_SCROLL') {\n    // No longer accepting changes\n    if (state.phase === 'DROP_PENDING' || state.phase === 'DROP_ANIMATING') {\n      return state;\n    }\n\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(isMovementAllowed(state), `Cannot move by window in phase ${state.phase}`);\n    const movementAllowedState = state;\n    invariant(movementAllowedState.isWindowScrollAllowed,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    'Window scrolling is currently not supported for fixed lists');\n    const newScroll = action.payload.newScroll;\n\n    // nothing needs to be done\n    if (isEqual(movementAllowedState.viewport.scroll.current, newScroll)) {\n      return removeScrollJumpRequest(state);\n    }\n    const viewport = scrollViewport(movementAllowedState.viewport, newScroll);\n    if (isSnapping(movementAllowedState)) {\n      return refreshSnap({\n        state: movementAllowedState,\n        viewport\n      });\n    }\n    return update({\n      state: movementAllowedState,\n      viewport\n    });\n  }\n  if (action.type === 'UPDATE_VIEWPORT_MAX_SCROLL') {\n    // Could occur if a transitionEnd occurs after a drag ends\n    if (!isMovementAllowed(state)) {\n      return state;\n    }\n    const movementAllowedState = state;\n    const maxScroll = action.payload.maxScroll;\n    if (isEqual(maxScroll, movementAllowedState.viewport.scroll.max)) {\n      return state;\n    }\n    const withMaxScroll = {\n      ...movementAllowedState.viewport,\n      scroll: {\n        ...movementAllowedState.viewport.scroll,\n        max: maxScroll\n      }\n    };\n    // don't need to recalc any updates\n    return {\n      ...movementAllowedState,\n      viewport: withMaxScroll\n    };\n  }\n  if (action.type === 'MOVE_UP' || action.type === 'MOVE_DOWN' || action.type === 'MOVE_LEFT' || action.type === 'MOVE_RIGHT') {\n    // Not doing keyboard movements during these phases\n    if (state.phase === 'COLLECTING' || state.phase === 'DROP_PENDING') {\n      return state;\n    }\n    invariant(state.phase === 'DRAGGING', `${action.type} received while not in DRAGGING phase`);\n    const result = moveInDirection({\n      state: state,\n      type: action.type\n    });\n\n    // cannot move in that direction\n    if (!result) {\n      return state;\n    }\n    return update({\n      state: state,\n      impact: result.impact,\n      clientSelection: result.clientSelection,\n      scrollJumpRequest: result.scrollJumpRequest\n    });\n  }\n  if (action.type === 'DROP_PENDING') {\n    const reason = action.payload.reason;\n    invariant(state.phase === 'COLLECTING',\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    'Can only move into the DROP_PENDING phase from the COLLECTING phase');\n    const newState = {\n      ...state,\n      phase: 'DROP_PENDING',\n      isWaiting: true,\n      reason\n    };\n    return newState;\n  }\n  if (action.type === 'DROP_ANIMATE') {\n    const {\n      completed,\n      dropDuration,\n      newHomeClientOffset\n    } = action.payload;\n    invariant(state.phase === 'DRAGGING' || state.phase === 'DROP_PENDING',\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Cannot animate drop from phase ${state.phase}`);\n    // Moving into a new phase\n    const result = {\n      phase: 'DROP_ANIMATING',\n      completed,\n      dropDuration,\n      newHomeClientOffset,\n      dimensions: state.dimensions\n    };\n    return result;\n  }\n\n  // Action will be used by responders to call consumers\n  // We can simply return to the idle state\n  if (action.type === 'DROP_COMPLETE') {\n    const {\n      completed\n    } = action.payload;\n    return {\n      phase: 'IDLE',\n      completed,\n      shouldFlush: false\n    };\n  }\n  return state;\n});\n//# sourceMappingURL=reducer.js.map","import patchDroppableMap from './patch-droppable-map';\nexport default ((dimensions, updated) => ({\n  draggables: dimensions.draggables,\n  droppables: patchDroppableMap(dimensions.droppables, updated)\n}));\n//# sourceMappingURL=patch-dimension-map.js.map","export const isSomeDraggingState = s => {\n  return s.isDragging;\n};\n//# sourceMappingURL=type-utils.js.map","import * as timings from '../../debug/timings';\nimport { toDraggableMap, toDroppableMap } from '../dimension-structures';\nimport scrollDroppable from '../droppable/scroll-droppable';\nimport whatIsDraggedOver from '../droppable/what-is-dragged-over';\nimport getDragImpact from '../get-drag-impact';\nimport getLiftEffect from '../get-lift-effect';\nimport adjustAdditionsForScrollChanges from './adjust-additions-for-scroll-changes';\n// eslint-disable-next-line @sas/i18n/jsx-to-localize\nconst timingsKey = 'Processing dynamic changes';\nexport default (({\n  state,\n  published\n}) => {\n  timings.start(timingsKey);\n  // TODO: update window scroll (needs to be a part of the published object)\n  // TODO: validate.\n  // - Check that all additions / removals have a droppable\n  // - Check that all droppables are virtual\n  // The scroll might be different to what is currently in the state\n  // We want to ensure the new draggables are in step with the state\n  const withScrollChange = published.modified.map(update => {\n    const existing = state.dimensions.droppables[update.droppableId];\n    const scrolled = scrollDroppable(existing, update.scroll);\n    return scrolled;\n  });\n  const droppables = {\n    ...state.dimensions.droppables,\n    ...toDroppableMap(withScrollChange)\n  };\n  const updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({\n    additions: published.additions,\n    updatedDroppables: droppables,\n    viewport: state.viewport\n  }));\n  const draggables = {\n    ...state.dimensions.draggables,\n    ...updatedAdditions\n  };\n  // remove all the old ones (except for the critical)\n  // we do this so that list operations remain fast\n  // TODO: need to test the impact of this like crazy\n  published.removals.forEach(id => {\n    delete draggables[id];\n  });\n  const dimensions = {\n    droppables,\n    draggables\n  };\n  const wasOverId = whatIsDraggedOver(state.impact);\n  const wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;\n  const draggable = dimensions.draggables[state.critical.draggable.id];\n  const home = dimensions.droppables[state.critical.droppable.id];\n  const {\n    impact: onLiftImpact,\n    afterCritical\n  } = getLiftEffect({\n    draggable,\n    home,\n    draggables,\n    viewport: state.viewport\n  });\n  const previousImpact = wasOver && wasOver.isCombineEnabled // Cheating here\n  ?\n  // TODO: pursue a more robust approach\n  state.impact : onLiftImpact;\n  const impact = getDragImpact({\n    pageOffset: state.current.page.offset,\n    draggable: dimensions.draggables[state.critical.draggable.id],\n    draggables: dimensions.draggables,\n    droppables: dimensions.droppables,\n    previousImpact,\n    viewport: state.viewport,\n    afterCritical\n  });\n  timings.finish(timingsKey);\n  const draggingState = {\n    ...state,\n    phase: 'DRAGGING',\n    impact,\n    onLiftImpact,\n    dimensions,\n    afterCritical,\n    // not animating this movement\n    forceShouldAnimate: false\n  };\n  if (state.phase === 'COLLECTING') {\n    return draggingState;\n  }\n\n  // There was a DROP_PENDING\n  // Staying in the DROP_PENDING phase\n  // setting isWaiting for false\n  const dropPending = {\n    ...draggingState,\n    phase: 'DROP_PENDING',\n    // No longer waiting\n    reason: state.reason,\n    isWaiting: false\n  };\n  return dropPending;\n});\n//# sourceMappingURL=index.js.map","/* eslint-disable no-underscore-dangle */\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport autoScroll from './middleware/auto-scroll';\nimport dimensionMarshalStopper from './middleware/dimension-marshal-stopper';\nimport dropAnimationFinish from './middleware/drop/drop-animation-finish-middleware';\nimport dropAnimationFlushOnScroll from './middleware/drop/drop-animation-flush-on-scroll-middleware';\nimport drop from './middleware/drop/drop-middleware';\nimport focus from './middleware/focus';\nimport lift from './middleware/lift';\nimport pendingDrop from './middleware/pending-drop';\nimport responders from './middleware/responders/responders-middleware';\nimport scrollListener from './middleware/scroll-listener';\nimport style from './middleware/style';\nimport reducer from './reducer';\n\n// We are checking if window is available before using it.\n// This is needed for universal apps that render the component server side.\n// Details: https://github.com/zalmoxisus/redux-devtools-extension#12-advanced-store-setup\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  name: 'react-beautiful-dnd'\n}) : compose;\nexport default (({\n  dimensionMarshal,\n  focusMarshal,\n  styleMarshal,\n  getResponders,\n  announce,\n  autoScroller\n}) => createStore(reducer, composeEnhancers(applyMiddleware(\n// ## Debug middleware\n// > uncomment to use\n// debugging logger\n// require('../debug/middleware/log').default('light'),\n// // user timing api\n// require('../debug/middleware/user-timing').default,\n// debugging timer\n// require('../debug/middleware/action-timing').default,\n// average action timer\n// require('../debug/middleware/action-timing-average').default(200),\n// ## Application middleware\n// Style updates do not cause more actions. It is important to update styles\n// before responders are called: specifically the onDragEnd responder. We need to clear\n// the transition styles off the elements before a reorder to prevent strange\n// post drag animations in firefox. Even though we clear the transition off\n// a Draggable - if it is done after a reorder firefox will still apply the\n// transition.\n// Must be called before dimension marshal for lifting to apply collecting styles\nstyle(styleMarshal),\n// Stop the dimension marshal collecting anything\n// when moving into a phase where collection is no longer needed.\n// We need to stop the marshal before responders fire as responders can cause\n// dimension registration changes in response to reordering\ndimensionMarshalStopper(dimensionMarshal),\n// Fire application responders in response to drag changes\nlift(dimensionMarshal), drop,\n// When a drop animation finishes - fire a drop complete\ndropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop, autoScroll(autoScroller), scrollListener, focus(focusMarshal),\n// Fire responders for consumers (after update to store)\nresponders(getResponders, announce)))));\n//# sourceMappingURL=create-store.js.map","export default (marshal => () => next => action => {\n  if (action.type === 'INITIAL_PUBLISH') {\n    marshal.dragging();\n  }\n  if (action.type === 'DROP_ANIMATE') {\n    marshal.dropping(action.payload.completed.result.reason);\n  }\n\n  // this will clear any styles immediately before a reorder\n  if (action.type === 'FLUSH' || action.type === 'DROP_COMPLETE') {\n    marshal.resting();\n  }\n  next(action);\n});\n//# sourceMappingURL=style.js.map","export default (marshal => () => next => action => {\n  // Not stopping a collection on a 'DROP' as we want a collection to continue\n  if (\n  // drag is finished\n  action.type === 'DROP_COMPLETE' || action.type === 'FLUSH' ||\n  // no longer accepting changes once the drop has started\n  action.type === 'DROP_ANIMATE') {\n    marshal.stopPublishing();\n  }\n  next(action);\n});\n//# sourceMappingURL=dimension-marshal-stopper.js.map","import { invariant } from '../../invariant';\nconst shouldStop = action => action.type === 'DROP_COMPLETE' || action.type === 'DROP_ANIMATE' || action.type === 'FLUSH';\nexport default (autoScroller => store => next => action => {\n  if (shouldStop(action)) {\n    autoScroller.stop();\n    next(action);\n    return;\n  }\n  if (action.type === 'INITIAL_PUBLISH') {\n    // letting the action go first to hydrate the state\n    next(action);\n    const state = store.getState();\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(state.phase === 'DRAGGING', 'Expected phase to be DRAGGING after INITIAL_PUBLISH');\n    autoScroller.start(state);\n    return;\n  }\n\n  // auto scroll happens in response to state changes\n  // releasing all actions to the reducer first\n  next(action);\n  autoScroller.scroll(store.getState());\n});\n//# sourceMappingURL=auto-scroll.js.map","export default (marshal => {\n  let isWatching = false;\n  return () => next => action => {\n    if (action.type === 'INITIAL_PUBLISH') {\n      isWatching = true;\n      marshal.tryRecordFocus(action.payload.critical.draggable.id);\n      next(action);\n      marshal.tryRestoreFocusRecorded();\n      return;\n    }\n    next(action);\n    if (!isWatching) {\n      return;\n    }\n    if (action.type === 'FLUSH') {\n      isWatching = false;\n      marshal.tryRestoreFocusRecorded();\n      return;\n    }\n    if (action.type === 'DROP_COMPLETE') {\n      isWatching = false;\n      const result = action.payload.completed.result;\n\n      // give focus to the combine target when combining\n      if (result.combine) {\n        marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);\n      }\n      marshal.tryRestoreFocusRecorded();\n    }\n  };\n});\n//# sourceMappingURL=focus.js.map","import { invariant } from '../invariant';\nexport default (() => {\n  const doc = document.documentElement;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(doc, 'Cannot find document.documentElement');\n  return doc;\n});\n//# sourceMappingURL=get-document-element.js.map","import { subtract } from './position';\nexport default (({\n  scrollHeight,\n  scrollWidth,\n  height,\n  width\n}) => {\n  const maxScroll = subtract(\n  // full size\n  {\n    x: scrollWidth,\n    y: scrollHeight\n  },\n  // viewport size\n  {\n    x: width,\n    y: height\n  });\n  const adjustedMaxScroll = {\n    x: Math.max(0, maxScroll.x),\n    y: Math.max(0, maxScroll.y)\n  };\n  return adjustedMaxScroll;\n});\n//# sourceMappingURL=get-max-scroll.js.map","import getMaxScroll from '../../state/get-max-scroll';\nimport getDocumentElement from '../get-document-element';\nexport default (() => {\n  const doc = getDocumentElement();\n  const maxScroll = getMaxScroll({\n    // unclipped padding box, with scrollbar\n    scrollHeight: doc.scrollHeight,\n    scrollWidth: doc.scrollWidth,\n    // clipped padding box, without scrollbar\n    width: doc.clientWidth,\n    height: doc.clientHeight\n  });\n  return maxScroll;\n});\n//# sourceMappingURL=get-max-window-scroll.js.map","import * as timings from '../../debug/timings';\nimport getViewport from '../../view/window/get-viewport';\nimport { toDraggableMap, toDroppableMap } from '../dimension-structures';\nexport default (({\n  critical,\n  scrollOptions,\n  registry\n}) => {\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  const timingKey = 'Initial collection from DOM';\n  timings.start(timingKey);\n  const viewport = getViewport();\n  const windowScroll = viewport.scroll.current;\n  const home = critical.droppable;\n  const droppables = registry.droppable.getAllByType(home.type).map(entry => entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions));\n  const draggables = registry.draggable.getAllByType(critical.draggable.type).map(entry => entry.getDimension(windowScroll));\n  const dimensions = {\n    draggables: toDraggableMap(draggables),\n    droppables: toDroppableMap(droppables)\n  };\n  timings.finish(timingKey);\n  const result = {\n    dimensions,\n    critical,\n    viewport\n  };\n  return result;\n});\n//# sourceMappingURL=get-initial-publish.js.map","import { getRect } from 'css-box-model';\nimport { origin } from '../../state/position';\nimport getDocumentElement from '../get-document-element';\nimport getMaxWindowScroll from './get-max-window-scroll';\nimport getWindowScroll from './get-window-scroll';\nexport default (() => {\n  const scroll = getWindowScroll();\n  const maxScroll = getMaxWindowScroll();\n  const top = scroll.y;\n  const left = scroll.x;\n  // window.innerHeight: includes scrollbars (not what we want)\n  // document.clientHeight gives us the correct value when using the html5 doctype\n  const doc = getDocumentElement();\n  // Using these values as they do not consider scrollbars\n  // padding box, without scrollbar\n  const width = doc.clientWidth;\n  const height = doc.clientHeight;\n  // Computed\n  const right = left + width;\n  const bottom = top + height;\n  const frame = getRect({\n    top,\n    left,\n    right,\n    bottom\n  });\n  const viewport = {\n    frame,\n    scroll: {\n      initial: scroll,\n      current: scroll,\n      max: maxScroll,\n      diff: {\n        value: origin,\n        displacement: origin\n      }\n    }\n  };\n  return viewport;\n});\n//# sourceMappingURL=get-viewport.js.map","import { warning } from '../../dev-warning';\nimport { invariant } from '../../invariant';\nimport getInitialPublish from './get-initial-publish';\nimport createPublisher from './while-dragging-publisher';\nfunction shouldPublishUpdate(registry, dragging, entry) {\n  // do not publish updates for the critical draggable\n  if (entry.descriptor.id === dragging.id) {\n    return false;\n  }\n\n  // do not publish updates for draggables that are not of a type that we care about\n  if (entry.descriptor.type !== dragging.type) {\n    return false;\n  }\n  const home = registry.droppable.getById(entry.descriptor.droppableId);\n  if (home.descriptor.mode !== 'virtual') {\n    warning(`\n      You are attempting to add or remove a Draggable [id: ${entry.descriptor.id}]\n      while a drag is occurring. This is only supported for virtual lists.\n\n      See https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/patterns/virtual-lists.md\n    `);\n    return false;\n  }\n  return true;\n}\nexport default ((registry, callbacks) => {\n  let collection = null;\n  const publisher = createPublisher({\n    callbacks: {\n      publish: callbacks.publishWhileDragging,\n      collectionStarting: callbacks.collectionStarting\n    },\n    registry\n  });\n  const updateDroppableIsEnabled = (id, isEnabled) => {\n    invariant(registry.droppable.exists(id),\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Cannot update is enabled flag of Droppable ${id} as it is not registered`);\n\n    // no need to update the application state if a collection is not occurring\n    if (!collection) {\n      return;\n    }\n\n    // At this point a non primary droppable dimension might not yet be published\n    // but may have its enabled state changed. For now we still publish this change\n    // and let the reducer exit early if it cannot find the dimension in the state.\n    callbacks.updateDroppableIsEnabled({\n      id,\n      isEnabled\n    });\n  };\n  const updateDroppableIsCombineEnabled = (id, isCombineEnabled) => {\n    // no need to update\n    if (!collection) {\n      return;\n    }\n    invariant(registry.droppable.exists(id),\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Cannot update isCombineEnabled flag of Droppable ${id} as it is not registered`);\n    callbacks.updateDroppableIsCombineEnabled({\n      id,\n      isCombineEnabled\n    });\n  };\n  const updateDroppableScroll = (id, newScroll) => {\n    // no need to update the application state if a collection is not occurring\n    if (!collection) {\n      return;\n    }\n    invariant(registry.droppable.exists(id),\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Cannot update the scroll on Droppable ${id} as it is not registered`);\n    callbacks.updateDroppableScroll({\n      id,\n      newScroll\n    });\n  };\n  const scrollDroppable = (id, change) => {\n    if (!collection) {\n      return;\n    }\n    registry.droppable.getById(id).callbacks.scroll(change);\n  };\n  const stopPublishing = () => {\n    // This function can be called defensively\n    if (!collection) {\n      return;\n    }\n\n    // Stop any pending dom collections or publish\n    publisher.stop();\n    // Tell all droppables to stop watching scroll\n    // all good if they where not already listening\n    const home = collection.critical.droppable;\n    registry.droppable.getAllByType(home.type).forEach(entry => entry.callbacks.dragStopped());\n    // Unsubscribe from registry updates\n    collection.unsubscribe();\n    // Finally - clear our collection\n    collection = null;\n  };\n  const subscriber = event => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(collection, 'Should only be subscribed when a collection is occurring');\n    // The dragging item can be add and removed when using a clone\n    // We do not publish updates for the critical item\n    const dragging = collection.critical.draggable;\n    if (event.type === 'ADDITION') {\n      if (shouldPublishUpdate(registry, dragging, event.value)) {\n        publisher.add(event.value);\n      }\n    }\n    if (event.type === 'REMOVAL') {\n      if (shouldPublishUpdate(registry, dragging, event.value)) {\n        publisher.remove(event.value);\n      }\n    }\n  };\n  const startPublishing = request => {\n    invariant(!collection,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    'Cannot start capturing critical dimensions as there is already a collection');\n    const entry = registry.draggable.getById(request.draggableId);\n    const home = registry.droppable.getById(entry.descriptor.droppableId);\n    const critical = {\n      draggable: entry.descriptor,\n      droppable: home.descriptor\n    };\n    const unsubscribe = registry.subscribe(subscriber);\n    collection = {\n      critical,\n      unsubscribe\n    };\n    return getInitialPublish({\n      critical,\n      registry,\n      scrollOptions: request.scrollOptions\n    });\n  };\n  const marshal = {\n    // Droppable changes\n    updateDroppableIsEnabled,\n    updateDroppableIsCombineEnabled,\n    scrollDroppable,\n    updateDroppableScroll,\n    // Entry\n    startPublishing,\n    stopPublishing\n  };\n  return marshal;\n});\n//# sourceMappingURL=dimension-marshal.js.map","import * as timings from '../../debug/timings';\nimport { origin } from '../position';\nconst clean = () => ({\n  additions: {},\n  removals: {},\n  modified: {}\n});\n\n// eslint-disable-next-line @sas/i18n/jsx-to-localize\nconst timingKey = 'Publish collection from DOM';\nexport default function createPublisher({\n  registry,\n  callbacks\n}) {\n  let staging = clean();\n  let frameId = null;\n  const collect = () => {\n    if (frameId) {\n      return;\n    }\n    callbacks.collectionStarting();\n    frameId = requestAnimationFrame(() => {\n      frameId = null;\n      timings.start(timingKey);\n      const {\n        additions,\n        removals,\n        modified\n      } = staging;\n      const added = Object.keys(additions).map(\n      // Using the origin as the window scroll. This will be adjusted when processing the published values\n      id => registry.draggable.getById(id).getDimension(origin)) // Dimensions are not guarenteed to be ordered in the same order as keys\n      // So we need to sort them so they are in the correct order\n      .sort((a, b) => a.descriptor.index - b.descriptor.index);\n      const updated = Object.keys(modified).map(id => {\n        const entry = registry.droppable.getById(id);\n        const scroll = entry.callbacks.getScrollWhileDragging();\n        return {\n          droppableId: id,\n          scroll\n        };\n      });\n      const result = {\n        additions: added,\n        removals: Object.keys(removals),\n        modified: updated\n      };\n      staging = clean();\n      timings.finish(timingKey);\n      callbacks.publish(result);\n    });\n  };\n  const add = entry => {\n    const id = entry.descriptor.id;\n    staging.additions[id] = entry;\n    staging.modified[entry.descriptor.droppableId] = true;\n    if (staging.removals[id]) {\n      delete staging.removals[id];\n    }\n    collect();\n  };\n  const remove = entry => {\n    const descriptor = entry.descriptor;\n    staging.removals[descriptor.id] = true;\n    staging.modified[descriptor.droppableId] = true;\n    if (staging.additions[descriptor.id]) {\n      delete staging.additions[descriptor.id];\n    }\n    collect();\n  };\n  const stop = () => {\n    if (!frameId) {\n      return;\n    }\n    cancelAnimationFrame(frameId);\n    frameId = null;\n    staging = clean();\n  };\n  return {\n    add,\n    remove,\n    stop\n  };\n}\n//# sourceMappingURL=while-dragging-publisher.js.map","import { invariant } from '../../invariant';\nimport { values } from '../../native-with-fallback';\nexport default function createRegistry() {\n  const entries = {\n    draggables: {},\n    droppables: {}\n  };\n  const subscribers = [];\n  function subscribe(cb) {\n    subscribers.push(cb);\n    return function unsubscribe() {\n      const index = subscribers.indexOf(cb);\n\n      // might have been removed by a clean\n      if (index === -1) {\n        return;\n      }\n      subscribers.splice(index, 1);\n    };\n  }\n  function notify(event) {\n    if (subscribers.length) {\n      subscribers.forEach(cb => cb(event));\n    }\n  }\n  function findDraggableById(id) {\n    return entries.draggables[id] || null;\n  }\n  function getDraggableById(id) {\n    const entry = findDraggableById(id);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(entry, `Cannot find draggable entry with id [${id}]`);\n    return entry;\n  }\n  const draggableAPI = {\n    register: entry => {\n      entries.draggables[entry.descriptor.id] = entry;\n      notify({\n        type: 'ADDITION',\n        value: entry\n      });\n    },\n    update: (entry, last) => {\n      const current = entries.draggables[last.descriptor.id];\n\n      // item already removed\n      if (!current) {\n        return;\n      }\n\n      // id already used for another mount\n      if (current.uniqueId !== entry.uniqueId) {\n        return;\n      }\n\n      // We are safe to delete the old entry and add a new one\n      delete entries.draggables[last.descriptor.id];\n      entries.draggables[entry.descriptor.id] = entry;\n    },\n    unregister: entry => {\n      const draggableId = entry.descriptor.id;\n      const current = findDraggableById(draggableId);\n\n      // can occur if cleaned before unregistration\n      if (!current) {\n        return;\n      }\n\n      // outdated uniqueId\n      if (entry.uniqueId !== current.uniqueId) {\n        return;\n      }\n      delete entries.draggables[draggableId];\n      notify({\n        type: 'REMOVAL',\n        value: entry\n      });\n    },\n    getById: getDraggableById,\n    findById: findDraggableById,\n    exists: id => Boolean(findDraggableById(id)),\n    getAllByType: type => values(entries.draggables).filter(entry => entry.descriptor.type === type)\n  };\n  function findDroppableById(id) {\n    return entries.droppables[id] || null;\n  }\n  function getDroppableById(id) {\n    const entry = findDroppableById(id);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(entry, `Cannot find droppable entry with id [${id}]`);\n    return entry;\n  }\n  const droppableAPI = {\n    register: entry => {\n      entries.droppables[entry.descriptor.id] = entry;\n    },\n    unregister: entry => {\n      const current = findDroppableById(entry.descriptor.id);\n\n      // can occur if cleaned before an unregistry\n      if (!current) {\n        return;\n      }\n\n      // already changed\n      if (entry.uniqueId !== current.uniqueId) {\n        return;\n      }\n      delete entries.droppables[entry.descriptor.id];\n    },\n    getById: getDroppableById,\n    findById: findDroppableById,\n    exists: id => Boolean(findDroppableById(id)),\n    getAllByType: type => values(entries.droppables).filter(entry => entry.descriptor.type === type)\n  };\n  function clean() {\n    // kill entries\n    entries.draggables = {};\n    entries.droppables = {};\n    // remove all subscribers\n    subscribers.length = 0;\n  }\n  return {\n    draggable: draggableAPI,\n    droppable: droppableAPI,\n    subscribe,\n    clean\n  };\n}\n//# sourceMappingURL=create-registry.js.map","import React from 'react';\nexport default /*#__PURE__*/React.createContext(null);\n//# sourceMappingURL=app-context.js.map","import React from 'react';\nexport default /*#__PURE__*/React.createContext(null);\n//# sourceMappingURL=store-context.js.map","import { invariant } from '../invariant';\nexport default (() => {\n  const body = document.body;\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(body, 'Cannot find document.body');\n  return body;\n});\n//# sourceMappingURL=get-body-element.js.map","// https://allyjs.io/tutorials/hiding-elements.html\n// Element is visually hidden but is readable by screen readers\nconst visuallyHidden = {\n  position: 'absolute',\n  width: '1px',\n  height: '1px',\n  margin: '-1px',\n  border: '0',\n  padding: '0',\n  overflow: 'hidden',\n  clip: 'rect(0 0 0 0)',\n  'clip-path': 'inset(100%)'\n};\nexport default visuallyHidden;\n//# sourceMappingURL=visually-hidden-style.js.map","import { useEffect, useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { warning } from '../../dev-warning';\nimport getBodyElement from '../get-body-element';\nimport visuallyHidden from '../visually-hidden-style';\nexport const getId = contextId => `rbd-announcement-${contextId}`;\nexport default function useAnnouncer(contextId) {\n  const id = useMemo(() => getId(contextId), [contextId]);\n  const ref = useRef(null);\n  useEffect(function setup() {\n    const el = document.createElement('div');\n    // storing reference for usage in announce\n    ref.current = el;\n    // identifier\n    el.id = id;\n    // Aria live region\n    // will force itself to be read\n    el.setAttribute('aria-live', 'assertive');\n    // must read the whole thing every time\n    el.setAttribute('aria-atomic', 'true');\n    // hide the element visually\n    Object.assign(el.style, visuallyHidden);\n    // Add to body\n    getBodyElement().appendChild(el);\n    return function cleanup() {\n      // Not clearing the ref as it might be used by announce before the timeout expires\n      // unmounting after a timeout to let any announcements\n      // during a mount be published\n      setTimeout(function remove() {\n        // checking if element exists as the body might have been changed by things like 'turbolinks'\n        const body = getBodyElement();\n        if (body.contains(el)) {\n          body.removeChild(el);\n        }\n\n        // if el was the current ref - clear it so that\n        // we can get a warning if announce is called\n        if (el === ref.current) {\n          ref.current = null;\n        }\n      });\n    };\n  }, [id]);\n  const announce = useCallback(message => {\n    const el = ref.current;\n    if (el) {\n      el.textContent = message;\n      return;\n    }\n    warning(`\n      A screen reader message was trying to be announced but it was unable to do so.\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\n      Consider calling provided.announce() before the unmount so that the instruction will\n      not be lost for users relying on a screen reader.\n\n      Message not passed to screen reader:\n\n      \"${message}\"\n    `);\n  }, []);\n  return announce;\n}\n//# sourceMappingURL=use-announcer.js.map","export const prefix = 'data-rbd';\nexport const dragHandle = (() => {\n  const base = `${prefix}-drag-handle`;\n  return {\n    base,\n    draggableId: `${base}-draggable-id`,\n    contextId: `${base}-context-id`\n  };\n})();\nexport const draggable = (() => {\n  const base = `${prefix}-draggable`;\n  return {\n    base,\n    contextId: `${base}-context-id`,\n    id: `${base}-id`\n  };\n})();\nexport const droppable = (() => {\n  const base = `${prefix}-droppable`;\n  return {\n    base,\n    contextId: `${base}-context-id`,\n    id: `${base}-id`\n  };\n})();\nexport const placeholder = {\n  contextId: `${prefix}-placeholder-context-id`\n};\nexport const scrollContainer = {\n  contextId: `${prefix}-scroll-container-context-id`\n};\n//# sourceMappingURL=data-attributes.js.map","export default (el => el && el.ownerDocument ? el.ownerDocument.defaultView : window);\n//# sourceMappingURL=get-window-from-el.js.map","import getWindowFromEl from '../window/get-window-from-el';\nexport default function isHtmlElement(el) {\n  return el instanceof getWindowFromEl(el).HTMLElement;\n}\n//# sourceMappingURL=is-html-element.js.map","import { warning } from '../../dev-warning';\nimport { find, toArray } from '../../native-with-fallback';\nimport { dragHandle as dragHandleAttr } from '../data-attributes';\nimport isHtmlElement from '../is-type-of-element/is-html-element';\nexport default function findDragHandle(contextId, draggableId) {\n  // cannot create a selector with the draggable id as it might not be a valid attribute selector\n  const selector = `[${dragHandleAttr.contextId}=\"${contextId}\"]`;\n  const possible = toArray(document.querySelectorAll(selector));\n  if (!possible.length) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    warning(`Unable to find any drag handles in the context \"${contextId}\"`);\n    return null;\n  }\n  const handle = find(possible, el => {\n    return el.getAttribute(dragHandleAttr.draggableId) === draggableId;\n  });\n  if (!handle) {\n    warning(\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Unable to find drag handle with id \"${draggableId}\" as no handle with a matching id was found`);\n    return null;\n  }\n  if (!isHtmlElement(handle)) {\n    warning('drag handle needs to be a HTMLElement');\n    return null;\n  }\n  return handle;\n}\n//# sourceMappingURL=find-drag-handle.js.map","// eslint-disable-next-line no-restricted-imports\nimport { useEffect, useLayoutEffect } from 'react';\n\n// https://github.com/reduxjs/react-redux/blob/v7-beta/src/components/connectAdvanced.js#L35\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect because we want\n// `connect` to perform sync updates to a ref to save the latest props after\n// a render is actually committed to the DOM.\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n//# sourceMappingURL=use-isomorphic-layout-effect.js.map","import { useEffect, useRef } from 'react';\nexport default function usePrevious(current) {\n  const ref = useRef(current);\n  // will be updated on the next render\n  useEffect(() => {\n    ref.current = current;\n  });\n  // return the existing current (pre render)\n  return ref;\n}\n//# sourceMappingURL=use-previous-ref.js.map","import { getRect } from 'css-box-model';\nexport default (el => getRect(el.getBoundingClientRect()).center);\n//# sourceMappingURL=get-border-box-center-position.js.map","import { find } from '../../native-with-fallback';\nconst supportedMatchesName = (() => {\n  const base = 'matches';\n\n  // Server side rendering\n  if (typeof document === 'undefined') {\n    return base;\n  }\n\n  // See https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\n  const candidates = [base, 'msMatchesSelector', 'webkitMatchesSelector'];\n  const value = find(candidates, name => name in Element.prototype);\n  return value ?? base;\n})();\nfunction closestPonyfill(el, selector) {\n  if (!el) {\n    return null;\n  }\n\n  // Element.prototype.matches is supported in ie11 with a different name\n  // https://caniuse.com/#feat=matchesselector\n  const matcher = el[supportedMatchesName];\n  if (matcher(selector)) {\n    return el;\n  }\n\n  // recursively look up the tree\n  return closestPonyfill(el.parentElement, selector);\n}\nexport default function closest(el, selector) {\n  // Using native closest for maximum speed where we can\n  if (el.closest) {\n    return el.closest(selector);\n  }\n\n  // ie11: damn you!\n  return closestPonyfill(el, selector);\n}\n//# sourceMappingURL=closest.js.map","import { warning } from '../../dev-warning';\nimport * as attributes from '../data-attributes';\nimport isElement from '../is-type-of-element/is-element';\nimport isHtmlElement from '../is-type-of-element/is-html-element';\nimport closest from './closest';\nfunction getSelector(contextId) {\n  return `[${attributes.dragHandle.contextId}=\"${contextId}\"]`;\n}\nfunction findClosestDragHandleFromEvent(contextId, event) {\n  const maybeTarget = event.target;\n  if (!isElement(maybeTarget)) {\n    warning('event.target must be a Element');\n    return null;\n  }\n  const target = maybeTarget;\n  const selector = getSelector(contextId);\n  const handle = closest(target, selector);\n  if (!handle) {\n    return null;\n  }\n  if (!isHtmlElement(handle)) {\n    warning('drag handle must be a HTMLElement');\n    return null;\n  }\n  return handle;\n}\nexport default function tryGetClosestDraggableIdFromEvent(contextId, event) {\n  const handle = findClosestDragHandleFromEvent(contextId, event);\n  if (!handle) {\n    return null;\n  }\n  return handle.getAttribute(attributes.dragHandle.draggableId);\n}\n//# sourceMappingURL=find-closest-draggable-id-from-event.js.map","import getWindowFromEl from '../window/get-window-from-el';\nexport default function isElement(el) {\n  return el instanceof getWindowFromEl(el).Element;\n}\n//# sourceMappingURL=is-element.js.map","import isHtmlElement from '../is-type-of-element/is-html-element';\nexport const interactiveTagNames = {\n  input: true,\n  button: true,\n  textarea: true,\n  select: true,\n  option: true,\n  optgroup: true,\n  video: true,\n  audio: true\n};\nfunction isAnInteractiveElement(parent, current) {\n  if (!current) {\n    return false;\n  }\n\n  // Most interactive elements cannot have children. However, some can such as 'button'.\n  // See 'Permitted content' on https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\n  // Rather than having two different functions we can consolidate our checks into this single\n  // function to keep things simple.\n  // There is no harm checking if the parent has an interactive tag name even if it cannot have\n  // any children. We need to perform this loop anyway to check for the contenteditable attribute\n  const hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);\n  if (hasAnInteractiveTag) {\n    return true;\n  }\n\n  // contenteditable=\"true\" or contenteditable=\"\" are valid ways\n  // of creating a contenteditable container\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable\n  const attribute = current.getAttribute('contenteditable');\n  if (attribute === 'true' || attribute === '') {\n    return true;\n  }\n\n  // nothing more can be done and no results found\n  if (current === parent) {\n    return false;\n  }\n\n  // recursion to check parent\n  return isAnInteractiveElement(parent, current.parentElement);\n}\nexport default function isEventInInteractiveElement(draggable, event) {\n  const target = event.target;\n  if (!isHtmlElement(target)) {\n    return false;\n  }\n  return isAnInteractiveElement(draggable, target);\n}\n//# sourceMappingURL=is-event-in-interactive-element.js.map","export const tab = 9;\nexport const enter = 13;\nexport const escape = 27;\nexport const space = 32;\nexport const pageUp = 33;\nexport const pageDown = 34;\nexport const end = 35;\nexport const home = 36;\nexport const arrowLeft = 37;\nexport const arrowUp = 38;\nexport const arrowRight = 39;\nexport const arrowDown = 40;\n//# sourceMappingURL=key-codes.js.map","import * as keyCodes from '../../../key-codes';\nconst preventedKeys = {\n  // submission\n  [keyCodes.enter]: true,\n  // tabbing\n  [keyCodes.tab]: true\n};\nexport default (event => {\n  if (preventedKeys[event.keyCode]) {\n    event.preventDefault();\n  }\n});\n//# sourceMappingURL=prevent-standard-key-events.js.map","import { find } from '../../../../native-with-fallback';\nconst supportedEventName = (() => {\n  const base = 'visibilitychange';\n\n  // Server side rendering\n  if (typeof document === 'undefined') {\n    return base;\n  }\n\n  // See https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\n  const candidates = [base, `ms${base}`, `webkit${base}`, `moz${base}`, `o${base}`];\n  const supported = find(candidates, eventName => `on${eventName}` in document);\n  return supported || base;\n})();\nexport default supportedEventName;\n//# sourceMappingURL=supported-page-visibility-event-name.js.map","import { useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { noop } from '../../../empty';\nimport { invariant } from '../../../invariant';\nimport bindEvents from '../../event-bindings/bind-events';\nimport * as keyCodes from '../../key-codes';\nimport useLayoutEffect from '../../use-isomorphic-layout-effect';\nimport preventStandardKeyEvents from './util/prevent-standard-key-events';\nimport supportedPageVisibilityEventName from './util/supported-page-visibility-event-name';\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\nexport const primaryButton = 0;\nexport const sloppyClickThreshold = 5;\nfunction isSloppyClickThresholdExceeded(original, current) {\n  return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;\n}\nconst idle = {\n  type: 'IDLE'\n};\nfunction getCaptureBindings({\n  cancel,\n  completed,\n  getPhase,\n  setPhase\n}) {\n  return [{\n    eventName: 'mousemove',\n    fn: event => {\n      const {\n        button,\n        clientX,\n        clientY\n      } = event;\n      if (button !== primaryButton) {\n        return;\n      }\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      const phase = getPhase();\n\n      // Already dragging\n      if (phase.type === 'DRAGGING') {\n        // preventing default as we are using this event\n        event.preventDefault();\n        phase.actions.move(point);\n        return;\n      }\n\n      // There should be a pending drag at this point\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      invariant(phase.type === 'PENDING', 'Cannot be IDLE');\n      const pending = phase.point;\n\n      // threshold not yet exceeded\n      if (!isSloppyClickThresholdExceeded(pending, point)) {\n        return;\n      }\n\n      // preventing default as we are using this event\n      event.preventDefault();\n      // Lifting at the current point to prevent the draggable item from\n      // jumping by the sloppyClickThreshold\n      const actions = phase.actions.fluidLift(point);\n      setPhase({\n        type: 'DRAGGING',\n        actions\n      });\n    }\n  }, {\n    eventName: 'mouseup',\n    fn: event => {\n      const phase = getPhase();\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n\n      // preventing default as we are using this event\n      event.preventDefault();\n      phase.actions.drop({\n        shouldBlockNextClick: true\n      });\n      completed();\n    }\n  }, {\n    eventName: 'mousedown',\n    fn: event => {\n      // this can happen during a drag when the user clicks a button\n      // other than the primary mouse button\n      if (getPhase().type === 'DRAGGING') {\n        event.preventDefault();\n      }\n      cancel();\n    }\n  }, {\n    eventName: 'keydown',\n    fn: event => {\n      const phase = getPhase();\n\n      // Abort if any keystrokes while a drag is pending\n      if (phase.type === 'PENDING') {\n        cancel();\n        return;\n      }\n\n      // cancelling a drag\n      if (event.keyCode === keyCodes.escape) {\n        event.preventDefault();\n        cancel();\n        return;\n      }\n      preventStandardKeyEvents(event);\n    }\n  }, {\n    eventName: 'resize',\n    fn: cancel\n  }, {\n    eventName: 'scroll',\n    // kill a pending drag if there is a window scroll\n    options: {\n      passive: true,\n      capture: false\n    },\n    fn: () => {\n      if (getPhase().type === 'PENDING') {\n        cancel();\n      }\n    }\n  },\n  // Need to opt out of dragging if the user is a force press\n  // Only for safari which has decided to introduce its own custom way of doing things\n  // https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/SafariJSProgTopics/RespondingtoForceTouchEventsfromJavaScript.html\n  {\n    eventName: 'webkitmouseforcedown',\n    // it is considered a indirect cancel so we do not\n    // prevent default in any situation.\n    fn: event => {\n      const phase = getPhase();\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      invariant(phase.type !== 'IDLE', 'Unexpected phase');\n      if (phase.actions.shouldRespectForcePress()) {\n        cancel();\n        return;\n      }\n\n      // This technically doesn't do anything.\n      // It won't do anything if `webkitmouseforcewillbegin` is prevented.\n      // But it is a good signal that we want to opt out of this\n      event.preventDefault();\n    }\n  },\n  // Cancel on page visibility change\n  {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nexport default function useMouseSensor(api) {\n  const phaseRef = useRef(idle);\n  const unbindEventsRef = useRef(noop);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'mousedown',\n    fn: function onMouseDown(event) {\n      // Event already used\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      // only starting a drag if dragging with the primary mouse button\n      if (event.button !== primaryButton) {\n        return;\n      }\n\n      // Do not start a drag if any modifier key is pressed\n      if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const actions = api.tryGetLock(draggableId,\n      // stop is defined later\n      // eslint-disable-next-line no-use-before-define\n      stop, {\n        sourceEvent: event\n      });\n      if (!actions) {\n        return;\n      }\n\n      // consuming the event\n      /* SAS Commenting this line of code as it impacts keyboard focus */\n      // event.preventDefault();\n\n      const point = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      // unbind this listener\n      unbindEventsRef.current();\n      // using this function before it is defined as their is a circular usage pattern\n      // eslint-disable-next-line no-use-before-define\n      startPendingDrag(actions, point);\n    }\n  }),\n  // not including startPendingDrag as it is not defined initially\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [api]);\n  const preventForcePressBinding = useMemo(() => ({\n    eventName: 'webkitmouseforcewillbegin',\n    fn: event => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      const id = api.findClosestDraggableId(event);\n      if (!id) {\n        return;\n      }\n      const options = api.findOptionsForDraggable(id);\n      if (!options) {\n        return;\n      }\n      if (options.shouldRespectForcePress) {\n        return;\n      }\n      if (!api.canGetLock(id)) {\n        return;\n      }\n      event.preventDefault();\n    }\n  }), [api]);\n  const listenForCapture = useCallback(function listenForCapture() {\n    const options = {\n      passive: false,\n      capture: true\n    };\n    unbindEventsRef.current = bindEvents(window, [preventForcePressBinding, startCaptureBinding], options);\n  }, [preventForcePressBinding, startCaptureBinding]);\n  const stop = useCallback(() => {\n    const current = phaseRef.current;\n    if (current.type === 'IDLE') {\n      return;\n    }\n    phaseRef.current = idle;\n    unbindEventsRef.current();\n    listenForCapture();\n  }, [listenForCapture]);\n  const cancel = useCallback(() => {\n    const phase = phaseRef.current;\n    stop();\n    if (phase.type === 'DRAGGING') {\n      phase.actions.cancel({\n        shouldBlockNextClick: true\n      });\n    }\n    if (phase.type === 'PENDING') {\n      phase.actions.abort();\n    }\n  }, [stop]);\n  const bindCapturingEvents = useCallback(function bindCapturingEvents() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    const bindings = getCaptureBindings({\n      cancel,\n      completed: stop,\n      getPhase: () => phaseRef.current,\n      setPhase: phase => {\n        phaseRef.current = phase;\n      }\n    });\n    unbindEventsRef.current = bindEvents(window, bindings, options);\n  }, [cancel, stop]);\n  const startPendingDrag = useCallback(function startPendingDrag(actions, point) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(phaseRef.current.type === 'IDLE', 'Expected to move from IDLE to PENDING drag');\n    phaseRef.current = {\n      type: 'PENDING',\n      point,\n      actions\n    };\n    bindCapturingEvents();\n  }, [bindCapturingEvents]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    // kill any pending window events when unmounting\n    return function unmount() {\n      unbindEventsRef.current();\n    };\n  }, [listenForCapture]);\n}\n//# sourceMappingURL=use-mouse-sensor.js.map","import { useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { noop } from '../../../empty';\nimport { invariant } from '../../../invariant';\nimport bindEvents from '../../event-bindings/bind-events';\nimport * as keyCodes from '../../key-codes';\nimport useLayoutEffect from '../../use-isomorphic-layout-effect';\nimport supportedPageVisibilityEventName from './util/supported-page-visibility-event-name';\nconst idle = {\n  type: 'IDLE'\n};\n// Decreased from 150 as a work around for an issue for forcepress on iOS\n// https://github.com/atlassian/react-beautiful-dnd/issues/1401\nexport const timeForLongPress = 120;\nexport const forcePressThreshold = 0.15;\nfunction getWindowBindings({\n  cancel,\n  getPhase\n}) {\n  return [\n  // If the orientation of the device changes - kill the drag\n  // https://davidwalsh.name/orientation-change\n  {\n    eventName: 'orientationchange',\n    fn: cancel\n  },\n  // some devices fire resize if the orientation changes\n  {\n    eventName: 'resize',\n    fn: cancel\n  },\n  // Long press can bring up a context menu\n  // need to opt out of this behavior\n  {\n    eventName: 'contextmenu',\n    fn: event => {\n      // always opting out of context menu events\n      event.preventDefault();\n    }\n  },\n  // On some devices it is possible to have a touch interface with a keyboard.\n  // On any keyboard event we cancel a touch drag\n  {\n    eventName: 'keydown',\n    fn: event => {\n      if (getPhase().type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n\n      // direct cancel: we are preventing the default action\n      // indirect cancel: we are not preventing the default action\n      // escape is a direct cancel\n      if (event.keyCode === keyCodes.escape) {\n        event.preventDefault();\n      }\n      cancel();\n    }\n  },\n  // Cancel on page visibility change\n  {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\n\n// All of the touch events get applied to the drag handle of the touch interaction\n// This plays well with the event.target being unmounted during a drag\nfunction getHandleBindings({\n  cancel,\n  completed,\n  getPhase\n}) {\n  return [{\n    eventName: 'touchmove',\n    // Opting out of passive touchmove (default) so as to prevent scrolling while moving\n    // Not worried about performance as effect of move is throttled in requestAnimationFrame\n    // Using `capture: false` due to a recent horrible firefox bug: https://twitter.com/alexandereardon/status/1125904207184187393\n    options: {\n      capture: false\n    },\n    fn: event => {\n      const phase = getPhase();\n\n      // Drag has not yet started and we are waiting for a long press.\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n\n      // At this point we are dragging\n      phase.hasMoved = true;\n      const {\n        clientX,\n        clientY\n      } = event.touches[0];\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      // We need to prevent the default event in order to block native scrolling\n      // Also because we are using it as part of a drag we prevent the default action\n      // as a sign that we are using the event\n      event.preventDefault();\n      phase.actions.move(point);\n    }\n  }, {\n    eventName: 'touchend',\n    fn: event => {\n      const phase = getPhase();\n\n      // drag had not started yet - do not prevent the default action\n      if (phase.type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n\n      // ending the drag\n      event.preventDefault();\n      phase.actions.drop({\n        shouldBlockNextClick: true\n      });\n      completed();\n    }\n  }, {\n    eventName: 'touchcancel',\n    fn: event => {\n      // drag had not started yet - do not prevent the default action\n      if (getPhase().type !== 'DRAGGING') {\n        cancel();\n        return;\n      }\n\n      // already dragging - this event is directly ending a drag\n      event.preventDefault();\n      cancel();\n    }\n  },\n  // Need to opt out of dragging if the user is a force press\n  // Only for webkit which has decided to introduce its own custom way of doing things\n  // https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/SafariJSProgTopics/RespondingtoForceTouchEventsfromJavaScript.html\n  {\n    eventName: 'touchforcechange',\n    fn: event => {\n      const phase = getPhase();\n      // needed to use phase.actions\n      invariant(phase.type !== 'IDLE');\n      // This is not fantastic logic, but it is done to account for\n      // and issue with forcepress on iOS\n      // Calling event.preventDefault() will currently opt out of scrolling and clicking\n      // https://github.com/atlassian/react-beautiful-dnd/issues/1401\n      const touch = event.touches[0];\n      if (!touch) {\n        return;\n      }\n      const isForcePress = touch.force >= forcePressThreshold;\n      if (!isForcePress) {\n        return;\n      }\n      const shouldRespect = phase.actions.shouldRespectForcePress();\n      if (phase.type === 'PENDING') {\n        if (shouldRespect) {\n          cancel();\n        }\n\n        // If not respecting we just let the event go through\n        // It will not have an impact on the browser until\n        // there has been a sufficient time ellapsed\n        return;\n      }\n\n      // 'DRAGGING'\n      if (shouldRespect) {\n        if (phase.hasMoved) {\n          // After the user has moved we do not allow the dragging item to be force pressed\n          // This prevents strange behaviour such as a link preview opening mid drag\n          event.preventDefault();\n          return;\n        }\n\n        // indirect cancel\n        cancel();\n        return;\n      }\n\n      // not respecting during a drag\n      event.preventDefault();\n    }\n  },\n  // Cancel on page visibility change\n  {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  } // Not adding a cancel on touchstart as this handler will pick up the initial touchstart event\n  ];\n}\n\nexport default function useTouchSensor(api) {\n  const phaseRef = useRef(idle);\n  const unbindEventsRef = useRef(noop);\n  const getPhase = useCallback(function getPhase() {\n    return phaseRef.current;\n  }, []);\n  const setPhase = useCallback(function setPhase(phase) {\n    phaseRef.current = phase;\n  }, []);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'touchstart',\n    fn: function onTouchStart(event) {\n      // Event already used by something else\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      // We need to NOT call event.preventDefault() so as to maintain as much standard\n      // browser interactions as possible.\n      // This includes navigation on anchors which we want to preserve\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const actions = api.tryGetLock(draggableId,\n      // eslint-disable-next-line no-use-before-define\n      stop, {\n        sourceEvent: event\n      });\n\n      // could not start a drag\n      if (!actions) {\n        return;\n      }\n      const touch = event.touches[0];\n      const {\n        clientX,\n        clientY\n      } = touch;\n      const point = {\n        x: clientX,\n        y: clientY\n      };\n      // unbind this event handler\n      unbindEventsRef.current();\n      // eslint-disable-next-line no-use-before-define\n      startPendingDrag(actions, point);\n    }\n  }),\n  // not including stop or startPendingDrag as it is not defined initially\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [api]);\n  const listenForCapture = useCallback(function listenForCapture() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);\n  }, [startCaptureBinding]);\n  const stop = useCallback(() => {\n    const current = phaseRef.current;\n    if (current.type === 'IDLE') {\n      return;\n    }\n\n    // aborting any pending drag\n    if (current.type === 'PENDING') {\n      clearTimeout(current.longPressTimerId);\n    }\n    setPhase(idle);\n    unbindEventsRef.current();\n    listenForCapture();\n  }, [listenForCapture, setPhase]);\n  const cancel = useCallback(() => {\n    const phase = phaseRef.current;\n    stop();\n    if (phase.type === 'DRAGGING') {\n      phase.actions.cancel({\n        shouldBlockNextClick: true\n      });\n    }\n    if (phase.type === 'PENDING') {\n      phase.actions.abort();\n    }\n  }, [stop]);\n  const bindCapturingEvents = useCallback(function bindCapturingEvents() {\n    const options = {\n      capture: true,\n      passive: false\n    };\n    const args = {\n      cancel,\n      completed: stop,\n      getPhase\n    };\n    // In prior versions of iOS it was required that touch listeners be added\n    // to the handle to work correctly (even if the handle got removed in a portal / clone)\n    // In the latest version it appears to be the opposite: for reparenting to work\n    // the events need to be attached to the window.\n    // For now i'll keep these two functions seperate in case we need to swap it back again\n    // Old behaviour:\n    // https://gist.github.com/parris/dda613e3ae78f14eb2dc9fa0f4bfce3d\n    // https://stackoverflow.com/questions/33298828/touch-move-event-dont-fire-after-touch-start-target-is-removed\n    const unbindTarget = bindEvents(window, getHandleBindings(args), options);\n    const unbindWindow = bindEvents(window, getWindowBindings(args), options);\n    unbindEventsRef.current = function unbindAll() {\n      unbindTarget();\n      unbindWindow();\n    };\n  }, [cancel, getPhase, stop]);\n  const startDragging = useCallback(function startDragging() {\n    const phase = getPhase();\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(phase.type === 'PENDING', `Cannot start dragging from phase ${phase.type}`);\n    const actions = phase.actions.fluidLift(phase.point);\n    setPhase({\n      type: 'DRAGGING',\n      actions,\n      hasMoved: false\n    });\n  }, [getPhase, setPhase]);\n  const startPendingDrag = useCallback(function startPendingDrag(actions, point) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(getPhase().type === 'IDLE', 'Expected to move from IDLE to PENDING drag');\n    const longPressTimerId = window.setTimeout(startDragging, timeForLongPress);\n    setPhase({\n      type: 'PENDING',\n      point,\n      actions,\n      longPressTimerId\n    });\n    bindCapturingEvents();\n  }, [bindCapturingEvents, getPhase, setPhase, startDragging]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    return function unmount() {\n      // remove any existing listeners\n      unbindEventsRef.current();\n      // need to kill any pending drag start timer\n      const phase = getPhase();\n      if (phase.type === 'PENDING') {\n        clearTimeout(phase.longPressTimerId);\n        setPhase(idle);\n      }\n    };\n  }, [getPhase, listenForCapture, setPhase]);\n  // This is needed for safari\n  // Simply adding a non capture, non passive 'touchmove' listener.\n  // This forces event.preventDefault() in dynamically added\n  // touchmove event handlers to actually work\n  // https://github.com/atlassian/react-beautiful-dnd/issues/1374\n  useLayoutEffect(function webkitHack() {\n    const unbind = bindEvents(window, [{\n      eventName: 'touchmove',\n      // using a new noop function for each usage as a single `removeEventListener()`\n      // call will remove all handlers with the same reference\n      // https://codesandbox.io/s/removing-multiple-handlers-with-same-reference-fxe15\n      fn: () => {},\n      options: {\n        capture: false,\n        passive: false\n      }\n    }]);\n    return unbind;\n  }, []);\n}\n//# sourceMappingURL=use-touch-sensor.js.map","export default function useDev(useHook) {\n  // Don't run any validation in production\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useHook();\n  }\n}\n//# sourceMappingURL=use-dev.js.map","import { useEffect } from 'react';\nimport { error } from '../dev-warning';\nimport useDev from './use-dev';\nexport default function useDevSetupWarning(fn, inputs) {\n  useDev(() => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      try {\n        fn();\n      } catch (e) {\n        error(`\n          A setup problem was encountered.\n\n          > ${e.message}\n        `);\n      } // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, inputs);\n  });\n}\n//# sourceMappingURL=use-dev-setup-warning.js.map","import { useState } from 'react';\nimport rafSchd from 'raf-schd';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { warning } from '../../dev-warning';\nimport { noop } from '../../empty';\nimport { invariant } from '../../invariant';\nimport { drop as dropAction, flush, lift as liftAction, move as moveAction, moveDown as moveDownAction, moveLeft as moveLeftAction, moveRight as moveRightAction, moveUp as moveUpAction } from '../../state/action-creators';\nimport canStartDrag from '../../state/can-start-drag';\nimport bindEvents from '../event-bindings/bind-events';\nimport getBorderBoxCenterPosition from '../get-border-box-center-position';\nimport findDraggable from '../get-elements/find-draggable';\nimport useLayoutEffect from '../use-isomorphic-layout-effect';\nimport findClosestDraggableIdFromEvent from './find-closest-draggable-id-from-event';\nimport isEventInInteractiveElement from './is-event-in-interactive-element';\nimport create from './lock';\nimport useMouseSensor from './sensors/use-mouse-sensor';\n// import useKeyboardSensor from './sensors/use-keyboard-sensor';\nimport useTouchSensor from './sensors/use-touch-sensor';\nimport useValidateSensorHooks from './use-validate-sensor-hooks';\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction isActive({\n  expected,\n  phase,\n  isLockActive,\n  shouldWarn\n}) {\n  // lock is no longer active\n  if (!isLockActive()) {\n    if (shouldWarn) {\n      warning(`\n        Cannot perform action.\n        The sensor no longer has an action lock.\n\n        Tips:\n\n        - Throw away your action handlers when forceStop() is called\n        - Check actions.isActive() if you really need to\n      `);\n    }\n    return false;\n  }\n\n  // wrong phase\n  if (expected !== phase) {\n    if (shouldWarn) {\n      warning(`\n        Cannot perform action.\n        The actions you used belong to an outdated phase\n\n        Current phase: ${expected}\n        You called an action from outdated phase: ${phase}\n\n        Tips:\n\n        - Do not use preDragActions actions after calling preDragActions.lift()\n      `);\n    }\n    return false;\n  }\n  return true;\n}\nfunction canStart({\n  lockAPI,\n  store,\n  registry,\n  draggableId\n}) {\n  // lock is already claimed - cannot start\n  if (lockAPI.isClaimed()) {\n    return false;\n  }\n  const entry = registry.draggable.findById(draggableId);\n  if (!entry) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    warning(`Unable to find draggable with id: ${draggableId}`);\n    return false;\n  }\n\n  // draggable is not enabled - cannot start\n  if (!entry.options.isEnabled) {\n    return false;\n  }\n\n  // Application might now allow dragging right now\n  if (!canStartDrag(store.getState(), draggableId)) {\n    return false;\n  }\n  return true;\n}\nfunction tryStart({\n  lockAPI,\n  contextId,\n  store,\n  registry,\n  draggableId,\n  forceSensorStop,\n  sourceEvent\n}) {\n  const shouldStart = canStart({\n    lockAPI,\n    store,\n    registry,\n    draggableId\n  });\n  if (!shouldStart) {\n    return null;\n  }\n  const entry = registry.draggable.getById(draggableId);\n  const el = findDraggable(contextId, entry.descriptor.id);\n  if (!el) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    warning(`Unable to find draggable element with id: ${draggableId}`);\n    return null;\n  }\n\n  // Do not allow dragging from interactive elements\n  if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el, sourceEvent)) {\n    return null;\n  }\n\n  // claiming lock\n  const lock = lockAPI.claim(forceSensorStop || noop);\n  let phase = 'PRE_DRAG';\n  function getShouldRespectForcePress() {\n    // not looking up the entry as it might have been removed in a virtual list\n    return entry.options.shouldRespectForcePress;\n  }\n  function isLockActive() {\n    return lockAPI.isActive(lock);\n  }\n  function tryDispatch(expected, getAction) {\n    if (isActive({\n      expected,\n      phase,\n      isLockActive,\n      shouldWarn: true\n    })) {\n      store.dispatch(getAction());\n    }\n  }\n  const tryDispatchWhenDragging = tryDispatch.bind(null, 'DRAGGING');\n  function lift(args) {\n    function completed() {\n      lockAPI.release();\n      phase = 'COMPLETED';\n    }\n\n    // Double lift = bad\n    if (phase !== 'PRE_DRAG') {\n      completed();\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      invariant(phase === 'PRE_DRAG', `Cannot lift in phase ${phase}`);\n    }\n    store.dispatch(liftAction(args.liftActionArgs));\n    // We are now in the DRAGGING phase\n    phase = 'DRAGGING';\n    function finish(reason, options = {\n      shouldBlockNextClick: false\n    }) {\n      args.cleanup();\n\n      // block next click if requested\n      if (options.shouldBlockNextClick) {\n        const unbind = bindEvents(window, [{\n          eventName: 'click',\n          fn: preventDefault,\n          options: {\n            // only blocking a single click\n            once: true,\n            passive: false,\n            capture: true\n          }\n        }]);\n        // Sometimes the click is swallowed, such as when there is reparenting\n        // The click event (in the message queue) will occur before the next setTimeout expiry\n        // https://codesandbox.io/s/click-behaviour-pkfk2\n        setTimeout(unbind);\n      }\n\n      // releasing\n      completed();\n      store.dispatch(dropAction({\n        reason\n      }));\n    }\n    return {\n      isActive: () => isActive({\n        expected: 'DRAGGING',\n        phase,\n        isLockActive,\n        // Do not want to want warnings for boolean checks\n        shouldWarn: false\n      }),\n      shouldRespectForcePress: getShouldRespectForcePress,\n      drop: options => finish('DROP', options),\n      cancel: options => finish('CANCEL', options),\n      ...args.actions\n    };\n  }\n  function fluidLift(clientSelection) {\n    const move = rafSchd(client => {\n      tryDispatchWhenDragging(() => moveAction({\n        client\n      }));\n    });\n    const api = lift({\n      liftActionArgs: {\n        id: draggableId,\n        clientSelection,\n        movementMode: 'FLUID'\n      },\n      cleanup: () => move.cancel(),\n      actions: {\n        move\n      }\n    });\n    return {\n      ...api,\n      move\n    };\n  }\n  function snapLift() {\n    const actions = {\n      moveUp: () => tryDispatchWhenDragging(moveUpAction),\n      moveRight: () => tryDispatchWhenDragging(moveRightAction),\n      moveDown: () => tryDispatchWhenDragging(moveDownAction),\n      moveLeft: () => tryDispatchWhenDragging(moveLeftAction)\n    };\n    return lift({\n      liftActionArgs: {\n        id: draggableId,\n        clientSelection: getBorderBoxCenterPosition(el),\n        movementMode: 'SNAP'\n      },\n      cleanup: noop,\n      actions\n    });\n  }\n  function abortPreDrag() {\n    const shouldRelease = isActive({\n      expected: 'PRE_DRAG',\n      phase,\n      isLockActive,\n      shouldWarn: true\n    });\n    if (shouldRelease) {\n      lockAPI.release();\n    }\n  }\n  const preDrag = {\n    isActive: () => isActive({\n      expected: 'PRE_DRAG',\n      phase,\n      isLockActive,\n      // Do not want to want warnings for boolean checks\n      shouldWarn: false\n    }),\n    shouldRespectForcePress: getShouldRespectForcePress,\n    fluidLift,\n    snapLift,\n    abort: abortPreDrag\n  };\n  return preDrag;\n}\n// default sensors are now exported to library consumers\nconst defaultSensors = [useMouseSensor, /* useKeyboardSensor,*/useTouchSensor];\nexport default function useSensorMarshal({\n  contextId,\n  store,\n  registry,\n  customSensors,\n  enableDefaultSensors\n}) {\n  const useSensors = [...(enableDefaultSensors ? defaultSensors : []), ...(customSensors || [])];\n  const lockAPI = useState(() => create())[0];\n  const tryAbandonLock = useCallback(function tryAbandonLock(previous, current) {\n    if (previous.isDragging && !current.isDragging) {\n      lockAPI.tryAbandon();\n    }\n  }, [lockAPI]);\n  // We need to abort any capturing if there is no longer a drag\n  useLayoutEffect(function listenToStore() {\n    let previous = store.getState();\n    const unsubscribe = store.subscribe(() => {\n      const current = store.getState();\n      tryAbandonLock(previous, current);\n      previous = current;\n    });\n    // unsubscribe from store when unmounting\n    return unsubscribe;\n  }, [lockAPI, store, tryAbandonLock]);\n  // abort any lock on unmount\n  useLayoutEffect(() => {\n    return lockAPI.tryAbandon;\n  }, [lockAPI.tryAbandon]);\n  const canGetLock = useCallback(draggableId => {\n    return canStart({\n      lockAPI,\n      registry,\n      store,\n      draggableId\n    });\n  }, [lockAPI, registry, store]);\n  const tryGetLock = useCallback((draggableId, forceStop, options) => tryStart({\n    lockAPI,\n    registry,\n    contextId,\n    store,\n    draggableId,\n    forceSensorStop: forceStop,\n    sourceEvent: options && options.sourceEvent ? options.sourceEvent : null\n  }), [contextId, lockAPI, registry, store]);\n  const findClosestDraggableId = useCallback(event => findClosestDraggableIdFromEvent(contextId, event), [contextId]);\n  const findOptionsForDraggable = useCallback(id => {\n    const entry = registry.draggable.findById(id);\n    return entry ? entry.options : null;\n  }, [registry.draggable]);\n  const tryReleaseLock = useCallback(function tryReleaseLock() {\n    if (!lockAPI.isClaimed()) {\n      return;\n    }\n    lockAPI.tryAbandon();\n    if (store.getState().phase !== 'IDLE') {\n      store.dispatch(flush());\n    }\n  }, [lockAPI, store]);\n  const isLockClaimed = useCallback(() => lockAPI.isClaimed(), [lockAPI]);\n  const api = useMemo(() => ({\n    canGetLock,\n    tryGetLock,\n    findClosestDraggableId,\n    findOptionsForDraggable,\n    tryReleaseLock,\n    isLockClaimed\n  }), [canGetLock, tryGetLock, findClosestDraggableId, findOptionsForDraggable, tryReleaseLock, isLockClaimed]);\n  // Bad ass\n  useValidateSensorHooks(useSensors);\n  for (let i = 0; i < useSensors.length; i++) {\n    useSensors[i](api);\n  }\n}\n//# sourceMappingURL=use-sensor-marshal.js.map","import { warning } from '../../dev-warning';\nimport { find, toArray } from '../../native-with-fallback';\nimport * as attributes from '../data-attributes';\nimport isHtmlElement from '../is-type-of-element/is-html-element';\nexport default function findDraggable(contextId, draggableId) {\n  // cannot create a selector with the draggable id as it might not be a valid attribute selector\n  const selector = `[${attributes.draggable.contextId}=\"${contextId}\"]`;\n  const possible = toArray(document.querySelectorAll(selector));\n  const draggable = find(possible, el => {\n    return el.getAttribute(attributes.draggable.id) === draggableId;\n  });\n  if (!draggable) {\n    return null;\n  }\n  if (!isHtmlElement(draggable)) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    warning('Draggable element is not a HTMLElement');\n    return null;\n  }\n  return draggable;\n}\n//# sourceMappingURL=find-draggable.js.map","import { invariant } from '../../invariant';\nexport default function create() {\n  let lock = null;\n  function isClaimed() {\n    return Boolean(lock);\n  }\n  function isActive(value) {\n    return value === lock;\n  }\n  function claim(abandon) {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(!lock, 'Cannot claim lock as it is already claimed');\n    const newLock = {\n      abandon\n    };\n    // update singleton\n    lock = newLock;\n    // return lock\n    return newLock;\n  }\n  function release() {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(lock, 'Cannot release lock when there is no lock');\n    lock = null;\n  }\n  function tryAbandon() {\n    if (lock) {\n      lock.abandon();\n      release();\n    }\n  }\n  return {\n    isClaimed,\n    isActive,\n    claim,\n    release,\n    tryAbandon\n  };\n}\n//# sourceMappingURL=lock.js.map","/* eslint-disable react-hooks/rules-of-hooks */\nimport { invariant } from '../../invariant';\nimport useDev from '../use-dev';\nimport useDevSetupWarning from '../use-dev-setup-warning';\nimport usePreviousRef from '../use-previous-ref';\nexport default function useValidateSensorHooks(sensorHooks) {\n  useDev(() => {\n    const previousRef = usePreviousRef(sensorHooks);\n    useDevSetupWarning(() => {\n      invariant(previousRef.current.length === sensorHooks.length,\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      'Cannot change the amount of sensor hooks after mounting');\n    });\n  });\n}\n//# sourceMappingURL=use-validate-sensor-hooks.js.map","import { transitions } from '../../animation';\nimport * as attributes from '../data-attributes';\nconst makeGetSelector = context => attribute => `[${attribute}=\"${context}\"]`;\nconst getStyles = (rules, property) => rules.map(rule => {\n  const value = rule.styles[property];\n  if (!value) {\n    return '';\n  }\n  return `${rule.selector} { ${value} }`;\n}).join(' ');\nconst noPointerEvents = 'pointer-events: none;';\nexport default (contextId => {\n  const getSelector = makeGetSelector(contextId);\n\n  // ## Drag handle styles\n  // -webkit-touch-callout\n  // A long press on anchors usually pops a content menu that has options for\n  // the link such as 'Open in new tab'. Because long press is used to start\n  // a drag we need to opt out of this behavior\n  // -webkit-tap-highlight-color\n  // Webkit based browsers add a grey overlay to anchors when they are active.\n  // We remove this tap overlay as it is confusing for users\n  // https://css-tricks.com/snippets/css/remove-gray-highlight-when-tapping-links-in-mobile-safari/\n  // touch-action: manipulation\n  // Avoid the *pull to refresh action* and *delayed anchor focus* on Android Chrome\n  // cursor: grab\n  // We apply this by default for an improved user experience. It is such a common default that we\n  // bake it right in. Consumers can opt out of this by adding a selector with higher specificity\n  // The cursor will not apply when pointer-events is set to none\n  // pointer-events: none\n  // this is used to prevent pointer events firing on draggables during a drag\n  // Reasons:\n  // 1. performance: it stops the other draggables from processing mouse events\n  // 2. scrolling: it allows the user to scroll through the current draggable\n  // to scroll the list behind\n  // 3.* function: it blocks other draggables from starting. This is not relied on though as there\n  // is a function on the context (canLift) which is a more robust way of controlling this\n  const dragHandle = (() => {\n    const grabCursor = `\n      cursor: -webkit-grab;\n      cursor: grab;\n    `;\n    return {\n      selector: getSelector(attributes.dragHandle.contextId),\n      styles: {\n        always: `\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        `,\n        resting: grabCursor,\n        dragging: noPointerEvents,\n        // it is fine for users to start dragging another item when a drop animation is occurring\n        dropAnimating: grabCursor // Not applying grab cursor during a user cancel as it is not possible for users to reorder\n        // items during a cancel\n      }\n    };\n  })();\n\n  // ## Draggable styles\n  // transition: transform\n  // This controls the animation of draggables that are moving out of the way\n  // The main draggable is controlled by react-motion.\n  const draggable = (() => {\n    const transition = `\n      transition: ${transitions.outOfTheWay};\n    `;\n    return {\n      selector: getSelector(attributes.draggable.contextId),\n      styles: {\n        dragging: transition,\n        dropAnimating: transition,\n        userCancel: transition\n      }\n    };\n  })();\n\n  // ## Droppable styles\n  // overflow-anchor: none;\n  // Opting out of the browser feature which tries to maintain\n  // the scroll position when the DOM changes above the fold.\n  // This does not work well with reordering DOM nodes.\n  // When we drop a Draggable it already has the correct scroll applied.\n  const droppable = {\n    selector: getSelector(attributes.droppable.contextId),\n    styles: {\n      always: `overflow-anchor: none;` // need pointer events on the droppable to allow manual scrolling\n    }\n  };\n  // ## Body styles\n  // cursor: grab\n  // We apply this by default for an improved user experience. It is such a common default that we\n  // bake it right in. Consumers can opt out of this by adding a selector with higher specificity\n  // user-select: none\n  // This prevents the user from selecting text on the page while dragging\n  // overflow-anchor: none\n  // We are in control and aware of all of the window scrolls that occur\n  // we do not want the browser to have behaviors we do not expect\n  const body = {\n    selector: 'body',\n    styles: {\n      dragging: `\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      `\n    }\n  };\n  const rules = [draggable, dragHandle, droppable, body];\n  return {\n    always: getStyles(rules, 'always'),\n    resting: getStyles(rules, 'resting'),\n    dragging: getStyles(rules, 'dragging'),\n    dropAnimating: getStyles(rules, 'dropAnimating'),\n    userCancel: getStyles(rules, 'userCancel')\n  };\n});\n//# sourceMappingURL=get-styles.js.map","import { useRef } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { invariant } from '../../invariant';\nimport { prefix } from '../data-attributes';\nimport useLayoutEffect from '../use-isomorphic-layout-effect';\nimport getStyles from './get-styles';\nconst getHead = () => {\n  const head = document.querySelector('head');\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(head, 'Cannot find the head to append a style to');\n  return head;\n};\nconst createStyleEl = nonce => {\n  const el = document.createElement('style');\n  if (nonce) {\n    el.setAttribute('nonce', nonce);\n  }\n  el.type = 'text/css';\n  return el;\n};\nexport default function useStyleMarshal(contextId, nonce) {\n  const styles = useMemo(() => getStyles(contextId), [contextId]);\n  const alwaysRef = useRef(null);\n  const dynamicRef = useRef(null);\n  // We can see that the only dependency here is from a ref. Disabling exhaustive check should be safe.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const setDynamicStyle = useCallback(\n  // Using memoizeOne to prevent frequent updates to textContext\n  memoizeOne(proposed => {\n    const el = dynamicRef.current;\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(el, 'Cannot set dynamic style element if it is not set');\n    el.textContent = proposed;\n  }), []);\n  const setAlwaysStyle = useCallback(proposed => {\n    const el = alwaysRef.current;\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(el, 'Cannot set dynamic style element if it is not set');\n    el.textContent = proposed;\n  }, []);\n  // using layout effect as programatic dragging might start straight away (such as for cypress)\n  useLayoutEffect(() => {\n    invariant(!alwaysRef.current && !dynamicRef.current, 'style elements already mounted');\n    const always = createStyleEl(nonce);\n    const dynamic = createStyleEl(nonce);\n    // store their refs\n    alwaysRef.current = always;\n    dynamicRef.current = dynamic;\n    // for easy identification\n    always.setAttribute(`${prefix}-always`, contextId);\n    dynamic.setAttribute(`${prefix}-dynamic`, contextId);\n    // add style tags to head\n    getHead().appendChild(always);\n    getHead().appendChild(dynamic);\n    // set initial style\n    setAlwaysStyle(styles.always);\n    setDynamicStyle(styles.resting);\n    return () => {\n      const remove = ref => {\n        const current = ref.current;\n        // eslint-disable-next-line @sas/i18n/jsx-to-localize\n        invariant(current, 'Cannot unmount ref as it is not set');\n        getHead().removeChild(current);\n        ref.current = null;\n      };\n      remove(alwaysRef);\n      remove(dynamicRef);\n    };\n  }, [nonce, setAlwaysStyle, setDynamicStyle, styles.always, styles.resting, contextId]);\n  const dragging = useCallback(() => setDynamicStyle(styles.dragging), [setDynamicStyle, styles.dragging]);\n  const dropping = useCallback(reason => {\n    if (reason === 'DROP') {\n      setDynamicStyle(styles.dropAnimating);\n      return;\n    }\n    setDynamicStyle(styles.userCancel);\n  }, [setDynamicStyle, styles.dropAnimating, styles.userCancel]);\n  const resting = useCallback(() => {\n    // Can be called defensively\n    if (!dynamicRef.current) {\n      return;\n    }\n    setDynamicStyle(styles.resting);\n  }, [setDynamicStyle, styles.resting]);\n  const marshal = useMemo(() => ({\n    dragging,\n    dropping,\n    resting\n  }), [dragging, dropping, resting]);\n  return marshal;\n}\n//# sourceMappingURL=use-style-marshal.js.map","// Not guarenteed to scroll by the entire amount\n\nexport default (change => {\n  window.scrollBy(change.x, change.y);\n});\n//# sourceMappingURL=scroll-window.js.map","import { createElement, useEffect, useRef } from 'react';\nimport { Provider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { warning } from '../../dev-warning';\nimport { invariant } from '../../invariant';\nimport { collectionStarting, flush, move, publishWhileDragging, updateDroppableIsCombineEnabled, updateDroppableIsEnabled, updateDroppableScroll } from '../../state/action-creators';\nimport createAutoScroller from '../../state/auto-scroller';\nimport canStartDrag from '../../state/can-start-drag';\nimport createStore from '../../state/create-store';\nimport createDimensionMarshal from '../../state/dimension-marshal/dimension-marshal';\nimport isMovementAllowed from '../../state/is-movement-allowed';\nimport useRegistry from '../../state/registry/use-registry';\nimport AppContext from '../context/app-context';\nimport StoreContext from '../context/store-context';\nimport useAnnouncer from '../use-announcer';\nimport useFocusMarshal from '../use-focus-marshal';\nimport useHiddenTextElement from '../use-hidden-text-element';\nimport usePrevious from '../use-previous-ref';\nimport useSensorMarshal from '../use-sensor-marshal/use-sensor-marshal';\nimport useStyleMarshal from '../use-style-marshal/use-style-marshal';\nimport scrollWindow from '../window/scroll-window';\nimport useStartupValidation from './use-startup-validation';\nconst createResponders = props => ({\n  onBeforeCapture: props.onBeforeCapture,\n  onBeforeDragStart: props.onBeforeDragStart,\n  onDragStart: props.onDragStart,\n  onDragEnd: props.onDragEnd,\n  onDragUpdate: props.onDragUpdate\n});\nfunction getStore(lazyRef) {\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(lazyRef.current, 'Could not find store from lazy ref');\n  return lazyRef.current;\n}\nexport default function App(props) {\n  const {\n    contextId,\n    setCallbacks,\n    sensors,\n    nonce,\n    dragHandleUsageInstructions\n  } = props;\n  const lazyStoreRef = useRef(null);\n  useStartupValidation();\n  // lazy collection of responders using a ref - update on ever render\n  const lastPropsRef = usePrevious(props);\n  const getResponders = useCallback(() => {\n    return createResponders(lastPropsRef.current);\n  }, [lastPropsRef]);\n  const announce = useAnnouncer(contextId);\n  const dragHandleUsageInstructionsId = useHiddenTextElement({\n    contextId,\n    text: dragHandleUsageInstructions\n  });\n  const styleMarshal = useStyleMarshal(contextId, nonce);\n  const lazyDispatch = useCallback(action => {\n    return getStore(lazyStoreRef).dispatch(action);\n  }, []);\n  const marshalCallbacks = useMemo(() => bindActionCreators({\n    publishWhileDragging,\n    updateDroppableScroll,\n    updateDroppableIsEnabled,\n    updateDroppableIsCombineEnabled,\n    collectionStarting\n  }, lazyDispatch // FIXME cast to any just to make TS happy\n  ), [lazyDispatch]);\n  const registry = useRegistry();\n  const dimensionMarshal = useMemo(() => {\n    return createDimensionMarshal(registry, marshalCallbacks);\n  }, [registry, marshalCallbacks]);\n  const autoScroller = useMemo(() => createAutoScroller({\n    scrollWindow,\n    scrollDroppable: dimensionMarshal.scrollDroppable,\n    ...bindActionCreators({\n      move\n    }, lazyDispatch // FIXME cast to any just to make TS happy\n    )\n  }), [dimensionMarshal.scrollDroppable, lazyDispatch]);\n  const focusMarshal = useFocusMarshal(contextId);\n  const store = useMemo(() => createStore({\n    announce,\n    autoScroller,\n    dimensionMarshal,\n    focusMarshal,\n    getResponders,\n    styleMarshal\n  }), [announce, autoScroller, dimensionMarshal, focusMarshal, getResponders, styleMarshal]);\n\n  // Checking for unexpected store changes\n  if (process.env.NODE_ENV !== 'production') {\n    if (lazyStoreRef.current && lazyStoreRef.current !== store) {\n      warning('unexpected store change');\n    }\n  }\n\n  // assigning lazy store ref\n  lazyStoreRef.current = store;\n  const tryResetStore = useCallback(() => {\n    const current = getStore(lazyStoreRef);\n    const state = current.getState();\n    if (state.phase !== 'IDLE') {\n      current.dispatch(flush());\n    }\n  }, []);\n  const isDragging = useCallback(() => {\n    const state = getStore(lazyStoreRef).getState();\n    return state.isDragging || state.phase === 'DROP_ANIMATING';\n  }, []);\n  const appCallbacks = useMemo(() => ({\n    isDragging,\n    tryAbort: tryResetStore\n  }), [isDragging, tryResetStore]);\n  // doing this in render rather than a side effect so any errors on the\n  // initial mount are caught\n  setCallbacks(appCallbacks);\n  const getCanLift = useCallback(id => canStartDrag(getStore(lazyStoreRef).getState(), id), []);\n  const getIsMovementAllowed = useCallback(() => isMovementAllowed(getStore(lazyStoreRef).getState()), []);\n  const appContext = useMemo(() => ({\n    marshal: dimensionMarshal,\n    focus: focusMarshal,\n    contextId,\n    canLift: getCanLift,\n    isMovementAllowed: getIsMovementAllowed,\n    dragHandleUsageInstructionsId,\n    registry\n  }), [contextId, dimensionMarshal, dragHandleUsageInstructionsId, focusMarshal, getCanLift, getIsMovementAllowed, registry]);\n  useSensorMarshal({\n    contextId,\n    store,\n    registry,\n    customSensors: sensors,\n    // default to 'true' unless 'false' is explicitly passed\n    enableDefaultSensors: props.enableDefaultSensors !== false\n  });\n  // Clean store when unmounting\n  useEffect(() => {\n    return tryResetStore;\n  }, [tryResetStore]);\n  return /*#__PURE__*/createElement(AppContext.Provider, {\n    value: appContext\n  }, /*#__PURE__*/createElement(Provider, {\n    context: StoreContext /* FIXME cast to any just to make TS happy */,\n    store: store\n  }, props.children));\n}\n//# sourceMappingURL=app.js.map","// import React from 'react';\n// import { peerDependencies } from '../../../package.json';\n// import checkReactVersion from './check-react-version';\nimport useDevSetupWarning from '../use-dev-setup-warning';\nimport checkDoctype from './check-doctype';\nexport default function useStartupValidation() {\n  useDevSetupWarning(() => {\n    // checkReactVersion(peerDependencies.react, React.version);\n    checkDoctype(document);\n  }, []);\n}\n//# sourceMappingURL=use-startup-validation.js.map","import { useEffect } from 'react';\nimport { useMemo } from 'use-memo-one';\nimport getBodyElement from '../get-body-element';\nimport useUniqueId from '../use-unique-id';\nexport function getElementId({\n  contextId,\n  uniqueId\n}) {\n  return `rbd-hidden-text-${contextId}-${uniqueId}`;\n}\nexport default function useHiddenTextElement({\n  contextId,\n  text\n}) {\n  const uniqueId = useUniqueId('hidden-text', {\n    separator: '-'\n  });\n  const id = useMemo(() => getElementId({\n    contextId,\n    uniqueId\n  }), [uniqueId, contextId]);\n  useEffect(function mount() {\n    const el = document.createElement('div');\n    // identifier\n    el.id = id;\n    // add the description text\n    el.textContent = text;\n    // Using `display: none` prevent screen readers from reading this element in the document flow\n    el.style.display = 'none';\n    // Add to body\n    getBodyElement().appendChild(el);\n    return function unmount() {\n      // checking if element exists as the body might have been changed by things like 'turbolinks'\n      const body = getBodyElement();\n      if (body.contains(el)) {\n        body.removeChild(el);\n      }\n    };\n  }, [id, text]);\n  return id;\n}\n//# sourceMappingURL=use-hidden-text-element.js.map","import { useEffect } from 'react';\nimport { useMemo } from 'use-memo-one';\nimport createRegistry from './create-registry';\nexport default function useRegistry() {\n  const registry = useMemo(createRegistry, []);\n  useEffect(() => {\n    return function unmount() {\n      // clean up the registry to avoid any leaks\n      // doing it after an animation frame so that other things unmounting\n      // can continue to interact with the registry\n      requestAnimationFrame(registry.clean);\n    };\n  }, [registry]);\n  return registry;\n}\n//# sourceMappingURL=use-registry.js.map","import { useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { dragHandle as dragHandleAttr } from '../data-attributes';\nimport findDragHandle from '../get-elements/find-drag-handle';\nimport useLayoutEffect from '../use-isomorphic-layout-effect';\nexport default function useFocusMarshal(contextId) {\n  const entriesRef = useRef({});\n  const recordRef = useRef(null);\n  const restoreFocusFrameRef = useRef(null);\n  const isMountedRef = useRef(false);\n  const register = useCallback(function register(id, focus) {\n    const entry = {\n      id,\n      focus\n    };\n    entriesRef.current[id] = entry;\n    return function unregister() {\n      const entries = entriesRef.current;\n      const current = entries[id];\n\n      // entry might have been overrided by another registration\n      if (current !== entry) {\n        delete entries[id];\n      }\n    };\n  }, []);\n  const tryGiveFocus = useCallback(function tryGiveFocus(tryGiveFocusTo) {\n    const handle = findDragHandle(contextId, tryGiveFocusTo);\n    if (handle && handle !== document.activeElement) {\n      handle.focus();\n    }\n  }, [contextId]);\n  const tryShiftRecord = useCallback(function tryShiftRecord(previous, redirectTo) {\n    if (recordRef.current === previous) {\n      recordRef.current = redirectTo;\n    }\n  }, []);\n  const tryRestoreFocusRecorded = useCallback(function tryRestoreFocusRecorded() {\n    // frame already queued\n    if (restoreFocusFrameRef.current) {\n      return;\n    }\n\n    // cannot give focus if unmounted\n    // this code path is generally not hit expect for some hot-reloading flows\n    if (!isMountedRef.current) {\n      return;\n    }\n    restoreFocusFrameRef.current = requestAnimationFrame(() => {\n      restoreFocusFrameRef.current = null;\n      const record = recordRef.current;\n      if (record) {\n        tryGiveFocus(record);\n      }\n    });\n  }, [tryGiveFocus]);\n  const tryRecordFocus = useCallback(function tryRecordFocus(id) {\n    // clear any existing record\n    recordRef.current = null;\n    const focused = document.activeElement;\n\n    // no item focused so it cannot be our item\n    if (!focused) {\n      return;\n    }\n\n    // focused element is not a drag handle or does not have the right id\n    if (focused.getAttribute(dragHandleAttr.draggableId) !== id) {\n      return;\n    }\n    recordRef.current = id;\n  }, []);\n  useLayoutEffect(() => {\n    isMountedRef.current = true;\n    return function clearFrameOnUnmount() {\n      isMountedRef.current = false;\n      const frameId = restoreFocusFrameRef.current;\n      if (frameId) {\n        cancelAnimationFrame(frameId);\n      }\n    };\n  }, []);\n  const marshal = useMemo(() => ({\n    register,\n    tryRecordFocus,\n    tryRestoreFocusRecorded,\n    tryShiftRecord\n  }), [register, tryRecordFocus, tryRestoreFocusRecorded, tryShiftRecord]);\n  return marshal;\n}\n//# sourceMappingURL=use-focus-marshal.js.map","import { createContext, createElement, Fragment, useContext, useEffect } from 'react';\nexport const EmbeddedDnDContext = /*#__PURE__*/createContext(null);\nexport let DragContextResponderTypes = /*#__PURE__*/function (DragContextResponderTypes) {\n  DragContextResponderTypes[DragContextResponderTypes[\"DragStart\"] = 0] = \"DragStart\";\n  DragContextResponderTypes[DragContextResponderTypes[\"DragUpdate\"] = 1] = \"DragUpdate\";\n  DragContextResponderTypes[DragContextResponderTypes[\"DragEnd\"] = 2] = \"DragEnd\";\n  DragContextResponderTypes[DragContextResponderTypes[\"BeforeDragStart\"] = 3] = \"BeforeDragStart\";\n  DragContextResponderTypes[DragContextResponderTypes[\"BeforeCapture\"] = 4] = \"BeforeCapture\";\n  return DragContextResponderTypes;\n}({});\nexport function useEmbeddedDnDContext() {\n  return useContext(EmbeddedDnDContext);\n}\nexport const EmbeddedDnDConsumer = function (props) {\n  const service = useEmbeddedDnDContext();\n  useEffect(() => {\n    if (service) {\n      const delinkDragStart = props.onDragStart && service.registerDragStart(props.onDragStart);\n      const delinkDragUpdate = props.onDragUpdate && service.registerDragUpdate(props.onDragUpdate);\n      const delinkDragEnd = props.onDragEnd && service.registerDragEnd(props.onDragEnd);\n      const delinkBeforeDragStart = props.onBeforeDragStart && service.registerBeforeDragStart(props.onBeforeDragStart);\n      const delinkBeforeCapture = props.onBeforeCapture && service.registerBeforeCapture(props.onBeforeCapture);\n      return () => {\n        delinkDragStart?.();\n        delinkDragUpdate?.();\n        delinkDragEnd?.();\n        delinkBeforeDragStart?.();\n        delinkBeforeCapture?.();\n      };\n    }\n  }, [service, props]);\n  return /*#__PURE__*/createElement(Fragment, null, props.children);\n};\n//# sourceMappingURL=embedded-drag-drop-context.js.map","import { Component } from 'react';\nimport { error, warning } from '../../dev-warning';\nimport { noop } from '../../empty';\nimport { RbdInvariant } from '../../invariant';\nimport bindEvents from '../event-bindings/bind-events';\nexport default class ErrorBoundary extends Component {\n  callbacks = null;\n  unbind = noop;\n  componentDidMount() {\n    this.unbind = bindEvents(window, [{\n      eventName: 'error',\n      fn: this.onWindowError\n    }]);\n  }\n  componentDidCatch(err) {\n    if (err instanceof RbdInvariant) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(err.message);\n      }\n      this.setState({});\n      return;\n    }\n\n    // throwing error for other error boundaries\n    // eslint-disable-next-line no-restricted-syntax\n    throw err;\n  }\n  componentWillUnmount() {\n    this.unbind();\n  }\n  onWindowError = event => {\n    const callbacks = this.getCallbacks();\n    if (callbacks.isDragging()) {\n      callbacks.tryAbort();\n      warning(`\n        An error was caught by our window 'error' event listener while a drag was occurring.\n        The active drag has been aborted.\n      `);\n    }\n    const err = event.error;\n    if (err instanceof RbdInvariant) {\n      // Marking the event as dealt with.\n      // This will prevent any 'uncaught' error warnings in the console\n      event.preventDefault();\n      if (process.env.NODE_ENV !== 'production') {\n        error(err.message);\n      }\n    }\n  };\n  getCallbacks = () => {\n    if (!this.callbacks) {\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error('Unable to find AppCallbacks in <ErrorBoundary/>');\n    }\n    return this.callbacks;\n  };\n  setCallbacks = callbacks => {\n    this.callbacks = callbacks;\n  };\n  render() {\n    return this.props.children(this.setCallbacks);\n  }\n}\n//# sourceMappingURL=error-boundary.js.map","import { useMemo } from 'use-memo-one';\nlet count = 0;\nexport function reset() {\n  count = 0;\n}\nexport default function useInstanceCount() {\n  return useMemo(() => `${count++}`, []);\n}\n//# sourceMappingURL=use-unique-context-id.js.map","import { createElement, useCallback, useMemo, useRef } from 'react';\nimport { getDefaultStyleNonce } from '@sas/nova-core/util';\nimport preset from '../../screen-reader-message-preset';\nimport { reset as resetUniqueIds } from '../use-unique-id';\nimport App from './app';\nimport { DragContextResponderTypes, EmbeddedDnDConsumer, EmbeddedDnDContext, useEmbeddedDnDContext } from './embedded-drag-drop-context';\nimport ErrorBoundary from './error-boundary';\nimport useUniqueContextId, { reset as resetContextId } from './use-unique-context-id';\n// Reset any context that gets persisted across server side renders\nexport function resetServerContext() {\n  resetContextId();\n  resetUniqueIds();\n}\nexport default function DragDropContext(props) {\n  const contextId = useUniqueContextId();\n  const dragHandleUsageInstructions = props.dragHandleUsageInstructions || preset.dragHandleUsageInstructions;\n  const listenersRef = useRef((() => {\n    // Just an internal API and trying to use other types is just making it more complicated\n    // Do not make this a public API in the future while still using \"Function\" as the type.\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const map = new Map();\n    map.set(DragContextResponderTypes.DragStart, []);\n    map.set(DragContextResponderTypes.DragUpdate, []);\n    map.set(DragContextResponderTypes.DragEnd, []);\n    map.set(DragContextResponderTypes.BeforeDragStart, []);\n    map.set(DragContextResponderTypes.BeforeCapture, []);\n    return map;\n  })());\n\n  // Just an internal API and trying to use other types is just making it more complicated\n  // Do no expose as public API with 'Function'\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  const registerListener = useCallback((type, listener) => {\n    const list = listenersRef.current.get(type);\n    list?.push(listener);\n    return () => {\n      listenersRef.current.set(type, listenersRef.current.get(type)?.filter(_listener => listener !== _listener) || []);\n    };\n  }, []);\n  const notify = useCallback((type, ...params) => {\n    listenersRef.current.get(type)?.forEach(fn => fn(...params));\n  }, []);\n  const service = useMemo(() => ({\n    registerDragEnd: listenerFn => registerListener(DragContextResponderTypes.DragEnd, listenerFn),\n    registerDragStart: listenerFn => registerListener(DragContextResponderTypes.DragStart, listenerFn),\n    registerDragUpdate: listenerFn => registerListener(DragContextResponderTypes.DragUpdate, listenerFn),\n    registerBeforeDragStart: listenerFn => registerListener(DragContextResponderTypes.BeforeDragStart, listenerFn),\n    registerBeforeCapture: listenerFn => registerListener(DragContextResponderTypes.BeforeCapture, listenerFn)\n  }), [registerListener]);\n  const embeddedDnDCtx = useEmbeddedDnDContext();\n\n  // We need the error boundary to be on the outside of App\n  // so that it can catch any errors caused by App\n\n  // The idea is for the nested dnd contexts to have their responders registered with\n  // the only DragDropContext, if any. This allows parent dnd context to not bother about\n  // composing all responders for dnd operations underneath it.\n  return !!embeddedDnDCtx ? /*#__PURE__*/createElement(EmbeddedDnDConsumer, props, props.children) : /*#__PURE__*/createElement(EmbeddedDnDContext.Provider, {\n    value: service\n  }, /*#__PURE__*/createElement(ErrorBoundary, null, setCallbacks => /*#__PURE__*/createElement(App, {\n    nonce: props.nonce ?? getDefaultStyleNonce(),\n    contextId: contextId,\n    setCallbacks: setCallbacks,\n    dragHandleUsageInstructions: dragHandleUsageInstructions,\n    enableDefaultSensors: props.enableDefaultSensors,\n    sensors: props.sensors,\n    onBeforeCapture: before => {\n      props.onBeforeCapture?.(before);\n      notify(DragContextResponderTypes.BeforeCapture, before);\n    },\n    onBeforeDragStart: start => {\n      props.onBeforeDragStart?.(start);\n      notify(DragContextResponderTypes.BeforeDragStart, start);\n    },\n    onDragStart: (start, provided) => {\n      props.onDragStart?.(start, provided);\n      notify(DragContextResponderTypes.DragStart, start, provided);\n    },\n    onDragUpdate: (update, provided) => {\n      props.onDragUpdate?.(update, provided);\n      notify(DragContextResponderTypes.DragUpdate, update, provided);\n    },\n    onDragEnd: (result, provided) => {\n      props.onDragEnd(result, provided);\n      notify(DragContextResponderTypes.DragEnd, result, provided);\n    }\n  }, props.children)));\n}\n//# sourceMappingURL=drag-drop-context.js.map","export default (result => {\n  const {\n    combine,\n    destination\n  } = result;\n  if (destination) {\n    return destination.droppableId;\n  }\n  if (combine) {\n    return combine.droppableId;\n  }\n  return null;\n});\n//# sourceMappingURL=what-is-dragged-over-from-result.js.map","export default ((a, b) => a === b);\n//# sourceMappingURL=is-strict-equal.js.map","import React from 'react';\n// Using a class here rather than hooks because\n// getDerivedStateFromProps results in far less renders.\n// Using hooks to implement this was quite messy and resulted in lots of additional renders\nexport default class AnimateInOut extends React.PureComponent {\n  state = {\n    isVisible: Boolean(this.props.on),\n    data: this.props.on,\n    // not allowing to animate close on mount\n    animate: this.props.shouldAnimate && this.props.on ? 'open' : 'none'\n  };\n  static getDerivedStateFromProps(props, state) {\n    if (!props.shouldAnimate) {\n      return {\n        isVisible: Boolean(props.on),\n        data: props.on,\n        animate: 'none'\n      };\n    }\n\n    // need to animate in\n    if (props.on) {\n      return {\n        isVisible: true,\n        // have new data to animate in with\n        data: props.on,\n        animate: 'open'\n      };\n    }\n\n    // need to animate out if there was data\n    if (state.isVisible) {\n      return {\n        isVisible: true,\n        // use old data for animating out\n        data: state.data,\n        animate: 'close'\n      };\n    }\n\n    // close animation no longer visible\n    return {\n      isVisible: false,\n      animate: 'close',\n      data: null\n    };\n  }\n  onClose = () => {\n    if (this.state.animate !== 'close') {\n      return;\n    }\n    this.setState({\n      isVisible: false\n    });\n  };\n  render() {\n    if (!this.state.isVisible) {\n      return null;\n    }\n    const provided = {\n      onClose: this.onClose,\n      data: this.state.data,\n      animate: this.state.animate\n    };\n    return this.props.children(provided);\n  }\n}\n//# sourceMappingURL=animate-in-out.js.map","import React from 'react';\nexport default /*#__PURE__*/React.createContext(null);\n//# sourceMappingURL=droppable-context.js.map","import { useContext } from 'react';\nimport { invariant } from '../invariant';\nexport default function useRequiredContext(Context) {\n  const result = useContext(Context);\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(result, 'Could not find required context');\n  return result;\n}\n//# sourceMappingURL=use-required-context.js.map","import { useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { invariant } from '../../invariant';\nimport useLayoutEffect from '../use-isomorphic-layout-effect';\nimport useUniqueId from '../use-unique-id';\nimport makeDimension from './get-dimension';\nexport default function useDraggablePublisher(args) {\n  const uniqueId = useUniqueId('draggable');\n  const {\n    descriptor,\n    registry,\n    getDraggableRef,\n    canDragInteractiveElements,\n    shouldRespectForcePress,\n    isEnabled\n  } = args;\n  const options = useMemo(() => ({\n    canDragInteractiveElements,\n    shouldRespectForcePress,\n    isEnabled\n  }), [canDragInteractiveElements, isEnabled, shouldRespectForcePress]);\n  const getDimension = useCallback(windowScroll => {\n    const el = getDraggableRef();\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(el, 'Cannot get dimension when no ref is set');\n    return makeDimension(descriptor, el, windowScroll);\n  }, [descriptor, getDraggableRef]);\n  const entry = useMemo(() => ({\n    uniqueId,\n    descriptor,\n    options,\n    getDimension\n  }), [descriptor, getDimension, options, uniqueId]);\n  const publishedRef = useRef(entry);\n  const isFirstPublishRef = useRef(true);\n  // mounting and unmounting\n  useLayoutEffect(() => {\n    registry.draggable.register(publishedRef.current);\n    return () => registry.draggable.unregister(publishedRef.current);\n  }, [registry.draggable]);\n  // updates while mounted\n  useLayoutEffect(() => {\n    if (isFirstPublishRef.current) {\n      isFirstPublishRef.current = false;\n      return;\n    }\n    const last = publishedRef.current;\n    publishedRef.current = entry;\n    registry.draggable.update(entry, last);\n  }, [entry, registry.draggable]);\n}\n//# sourceMappingURL=use-draggable-publisher.js.map","import { calculateBox, withScroll } from 'css-box-model';\nimport { origin } from '../../state/position';\nexport default function getDimension(descriptor, el, windowScroll = origin) {\n  const computedStyles = window.getComputedStyle(el);\n  const borderBox = el.getBoundingClientRect();\n  const client = calculateBox(borderBox, computedStyles);\n  const page = withScroll(client, windowScroll);\n  const placeholder = {\n    client,\n    tagName: el.tagName.toLowerCase(),\n    display: computedStyles.display\n  };\n  const displaceBy = {\n    x: client.marginBox.width,\n    y: client.marginBox.height\n  };\n  const dimension = {\n    descriptor,\n    placeholder,\n    displaceBy,\n    client,\n    page\n  };\n  return dimension;\n}\n//# sourceMappingURL=get-dimension.js.map","import { combine, transforms, transitions } from '../../animation';\nexport const zIndexOptions = {\n  dragging: 5000,\n  dropAnimating: 4500\n};\nconst getDraggingTransition = (shouldAnimateDragMovement, dropping) => {\n  if (dropping) {\n    return transitions.drop(dropping.duration);\n  }\n  if (shouldAnimateDragMovement) {\n    return transitions.snap;\n  }\n  return transitions.fluid;\n};\nconst getDraggingOpacity = (isCombining, isDropAnimating) => {\n  // if not combining: no not impact opacity\n  if (!isCombining) {\n    return undefined;\n  }\n  return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;\n};\nconst getShouldDraggingAnimate = dragging => {\n  if (dragging.forceShouldAnimate !== null && dragging.forceShouldAnimate !== undefined) {\n    return dragging.forceShouldAnimate;\n  }\n  return dragging.mode === 'SNAP';\n};\nfunction getDraggingStyle(dragging) {\n  const dimension = dragging.dimension;\n  const box = dimension.client;\n  const {\n    offset,\n    combineWith,\n    dropping\n  } = dragging;\n  const isCombining = Boolean(combineWith);\n  const shouldAnimate = getShouldDraggingAnimate(dragging);\n  const isDropAnimating = Boolean(dropping);\n  const transform = isDropAnimating ? transforms.drop(offset, isCombining) : transforms.moveTo(offset);\n  const style = {\n    // ## Placement\n    position: 'fixed',\n    // As we are applying the margins we need to align to the start of the marginBox\n    top: box.marginBox.top,\n    left: box.marginBox.left,\n    // ## Sizing\n    // Locking these down as pulling the node out of the DOM could cause it to change size\n    boxSizing: 'border-box',\n    width: box.borderBox.width,\n    height: box.borderBox.height,\n    // ## Movement\n    // Opting out of the standard css transition for the dragging item\n    transition: getDraggingTransition(shouldAnimate, dropping),\n    transform,\n    opacity: getDraggingOpacity(isCombining, isDropAnimating),\n    // ## Layering\n    zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,\n    // ## Blocking any pointer events on the dragging or dropping item\n    // global styles on cover while dragging\n    pointerEvents: 'none'\n  };\n  return style;\n}\nfunction getSecondaryStyle(secondary) {\n  return {\n    transform: transforms.moveTo(secondary.offset),\n    // transition style is applied in the head\n    transition: secondary.shouldAnimateDisplacement ? undefined : 'none'\n  };\n}\nexport default function getStyle(mapped) {\n  return mapped.type === 'DRAGGING' ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);\n}\n//# sourceMappingURL=get-style.js.map","import { useRef } from 'react';\nimport { invariant } from '../../invariant';\nimport { isInteger } from '../../native-with-fallback';\nimport checkIsValidInnerRef from '../check-is-valid-inner-ref';\nimport findDragHandle from '../get-elements/find-drag-handle';\nimport useDev from '../use-dev';\nimport useDevSetupWarning from '../use-dev-setup-warning';\nexport function useValidation(props, contextId, getRef) {\n  // running after every update in development\n  useDevSetupWarning(() => {\n    function prefix(id) {\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      return `Draggable[id: ${id}]: `;\n    }\n\n    // wrapping entire block for better minification\n    const id = props.draggableId;\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(id, 'Draggable requires a draggableId');\n    invariant(typeof id === 'string',\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    `Draggable requires a [string] draggableId.\n      Provided: [type: ${typeof id}] (value: ${id})`);\n    invariant(isInteger(props.index), `${prefix(id)} requires an integer index prop`);\n    if (props.mapped.type === 'DRAGGING') {\n      return;\n    }\n\n    // Checking provided ref (only when not dragging as it might be removed)\n    checkIsValidInnerRef(getRef());\n\n    // Checking that drag handle is provided\n    // Only running check when enabled.\n    // When not enabled there is no drag handle props\n    if (props.isEnabled) {\n      invariant(findDragHandle(contextId, id), `${prefix(id)} Unable to find drag handle`);\n    }\n  });\n}\n// we expect isClone not to change for entire component's life\nexport function useClonePropValidation(isClone) {\n  useDev(() => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const initialRef = useRef(isClone);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDevSetupWarning(() => {\n      invariant(isClone === initialRef.current,\n      // eslint-disable-next-line @sas/i18n/jsx-to-localize\n      'Draggable isClone prop value changed during component life');\n    }, [isClone]);\n  });\n}\n//# sourceMappingURL=use-validation.js.map","import { useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport AppContext from '../context/app-context';\nimport DroppableContext from '../context/droppable-context';\nimport useDraggablePublisher from '../use-draggable-publisher/use-draggable-publisher';\nimport useRequiredContext from '../use-required-context';\nimport getStyle from './get-style';\nimport { useClonePropValidation, useValidation } from './use-validation';\nfunction preventHtml5Dnd(event) {\n  event.preventDefault();\n}\nexport default function Draggable(props) {\n  // reference to DOM node\n  const ref = useRef(null);\n  const setRef = useCallback(el => {\n    ref.current = el;\n  }, []);\n  const getRef = useCallback(() => ref.current, []);\n  // context\n  const {\n    contextId,\n    /* dragHandleUsageInstructionsId, */registry\n  } = useRequiredContext(AppContext);\n  const {\n    type,\n    droppableId\n  } = useRequiredContext(DroppableContext);\n  const descriptor = useMemo(() => ({\n    id: props.draggableId,\n    index: props.index,\n    type,\n    droppableId\n  }), [props.draggableId, props.index, type, droppableId]);\n  // props\n  const {\n    // ownProps\n    children,\n    draggableId,\n    isEnabled,\n    shouldRespectForcePress,\n    canDragInteractiveElements,\n    isClone,\n    // mapProps\n    mapped,\n    // dispatchProps\n    dropAnimationFinished: dropAnimationFinishedAction\n  } = props;\n  // Validating props and innerRef\n  useValidation(props, contextId, getRef);\n  // Clones do not speak to the dimension marshal\n  // We are violating the rules of hooks here: conditional hooks.\n  // In this specific use case it is okay as an item will always either be a\n  // clone or not for it's whole lifecycle\n\n  /* eslint-disable react-hooks/rules-of-hooks */\n  // Being super sure that isClone is not changing during a draggable lifecycle\n  useClonePropValidation(isClone);\n  if (!isClone) {\n    const forPublisher = useMemo(() => ({\n      descriptor,\n      registry,\n      getDraggableRef: getRef,\n      canDragInteractiveElements,\n      shouldRespectForcePress,\n      isEnabled\n    }), [descriptor, registry, getRef, canDragInteractiveElements, shouldRespectForcePress, isEnabled]);\n    useDraggablePublisher(forPublisher);\n  }\n\n  /* eslint-enable react-hooks/rules-of-hooks */\n  const dragHandleProps = useMemo(() => isEnabled ? {\n    // See `draggable-types` for an explanation of why these are used\n    tabIndex: 0,\n    // role: 'button',\n    // 'aria-describedby': dragHandleUsageInstructionsId,\n    'data-rbd-drag-handle-draggable-id': draggableId,\n    'data-rbd-drag-handle-context-id': contextId,\n    draggable: false,\n    onDragStart: preventHtml5Dnd\n  } : null, [contextId, draggableId, isEnabled]);\n  const onMoveEnd = useCallback(event => {\n    if (mapped.type !== 'DRAGGING') {\n      return;\n    }\n    if (!mapped.dropping) {\n      return;\n    }\n\n    // There might be other properties on the element that are\n    // being transitioned. We do not want those to end a drop animation!\n    if (event.propertyName !== 'transform') {\n      return;\n    }\n    dropAnimationFinishedAction();\n  }, [dropAnimationFinishedAction, mapped]);\n  const provided = useMemo(() => {\n    const style = getStyle(mapped);\n    const onTransitionEnd = mapped.type === 'DRAGGING' && mapped.dropping ? onMoveEnd : undefined;\n    const result = {\n      innerRef: setRef,\n      draggableProps: {\n        'data-rbd-draggable-context-id': contextId,\n        'data-rbd-draggable-id': draggableId,\n        style,\n        onTransitionEnd\n      },\n      dragHandleProps\n    };\n    return result;\n  }, [contextId, dragHandleProps, draggableId, mapped, onMoveEnd, setRef]);\n  const rubric = useMemo(() => ({\n    draggableId: descriptor.id,\n    type: descriptor.type,\n    source: {\n      index: descriptor.index,\n      droppableId: descriptor.droppableId\n    }\n  }), [descriptor.droppableId, descriptor.id, descriptor.index, descriptor.type]);\n  return children(provided, mapped.snapshot, rubric);\n}\n//# sourceMappingURL=draggable.js.map","import { connect } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport * as animation from '../../animation';\nimport { dropAnimationFinished as dropAnimationFinishedAction } from '../../state/action-creators';\nimport whatIsDraggedOver from '../../state/droppable/what-is-dragged-over';\nimport whatIsDraggedOverFromResult from '../../state/droppable/what-is-dragged-over-from-result';\nimport { tryGetCombine } from '../../state/get-impact-location';\nimport { negate, origin } from '../../state/position';\nimport StoreContext from '../context/store-context';\nimport isStrictEqual from '../is-strict-equal';\nimport Draggable from './draggable';\nconst getCombineWithFromResult = result => {\n  return result.combine ? result.combine.draggableId : null;\n};\nconst getCombineWithFromImpact = impact => {\n  return impact.at && impact.at.type === 'COMBINE' ? impact.at.combine.draggableId : null;\n};\nfunction getDraggableSelector() {\n  const memoizedOffset = memoizeOne((x, y) => ({\n    x,\n    y\n  }));\n  const getMemoizedSnapshot = memoizeOne((mode, isClone, draggingOver, combineWith, dropping) => ({\n    isDragging: true,\n    isClone,\n    isDropAnimating: Boolean(dropping),\n    dropAnimation: dropping,\n    mode,\n    draggingOver,\n    combineWith,\n    combineTargetFor: null\n  }));\n  const getMemoizedProps = memoizeOne((offset, mode, dimension, isClone, draggingOver, combineWith, forceShouldAnimate) => ({\n    mapped: {\n      type: 'DRAGGING',\n      dropping: null,\n      draggingOver,\n      combineWith,\n      mode,\n      offset,\n      dimension,\n      forceShouldAnimate,\n      snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)\n    }\n  }));\n  const selector = (state, ownProps) => {\n    // Dragging\n    if (state.phase === 'DRAGGING') {\n      // not the dragging item\n      if (state.critical.draggable.id !== ownProps.draggableId) {\n        return null;\n      }\n      const offset = state.current.client.offset;\n      const dimension = state.dimensions.draggables[ownProps.draggableId];\n      // const shouldAnimateDragMovement: boolean = state.shouldAnimate;\n      const draggingOver = whatIsDraggedOver(state.impact);\n      const combineWith = getCombineWithFromImpact(state.impact);\n      const forceShouldAnimate = state.forceShouldAnimate;\n      return getMemoizedProps(memoizedOffset(offset.x, offset.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);\n    }\n\n    // Dropping\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (completed.result.draggableId !== ownProps.draggableId) {\n        return null;\n      }\n      const isClone = ownProps.isClone;\n      const dimension = state.dimensions.draggables[ownProps.draggableId];\n      const result = completed.result;\n      const mode = result.mode;\n      // these need to be pulled from the result as they can be different to the final impact\n      const draggingOver = whatIsDraggedOverFromResult(result);\n      const combineWith = getCombineWithFromResult(result);\n      const duration = state.dropDuration;\n      // not memoized as it is the only execution\n      const dropping = {\n        duration,\n        curve: animation.curves.drop,\n        moveTo: state.newHomeClientOffset,\n        opacity: combineWith ? animation.combine.opacity.drop : null,\n        scale: combineWith ? animation.combine.scale.drop : null\n      };\n      return {\n        mapped: {\n          type: 'DRAGGING',\n          offset: state.newHomeClientOffset,\n          dimension,\n          dropping,\n          draggingOver,\n          combineWith,\n          mode,\n          forceShouldAnimate: null,\n          snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, dropping)\n        }\n      };\n    }\n    return null;\n  };\n  return selector;\n}\nfunction getSecondarySnapshot(combineTargetFor) {\n  return {\n    isDragging: false,\n    isDropAnimating: false,\n    isClone: false,\n    dropAnimation: null,\n    mode: null,\n    draggingOver: null,\n    combineTargetFor,\n    combineWith: null\n  };\n}\nconst atRest = {\n  mapped: {\n    type: 'SECONDARY',\n    offset: origin,\n    combineTargetFor: null,\n    shouldAnimateDisplacement: true,\n    snapshot: getSecondarySnapshot(null)\n  }\n};\nfunction getSecondarySelector() {\n  const memoizedOffset = memoizeOne((x, y) => ({\n    x,\n    y\n  }));\n  const getMemoizedSnapshot = memoizeOne(getSecondarySnapshot);\n  const getMemoizedProps = memoizeOne((offset, combineTargetFor = null, shouldAnimateDisplacement) => ({\n    mapped: {\n      type: 'SECONDARY',\n      offset,\n      combineTargetFor,\n      shouldAnimateDisplacement,\n      snapshot: getMemoizedSnapshot(combineTargetFor)\n    }\n  }));\n\n  // Is we are the combine target for something then we need to publish that\n  // otherwise we will return null to get the default props\n  const getFallback = combineTargetFor => {\n    return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;\n  };\n  const getProps = (ownId, draggingId, impact, afterCritical) => {\n    const visualDisplacement = impact.displaced.visible[ownId];\n    const isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);\n    const combine = tryGetCombine(impact);\n    const combineTargetFor = combine && combine.draggableId === ownId ? draggingId : null;\n    if (!visualDisplacement) {\n      if (!isAfterCriticalInVirtualList) {\n        return getFallback(combineTargetFor);\n      }\n\n      // After critical but not visibly displaced in a virtual list\n      // This can occur if:\n      // 1. the item is not visible (displaced.invisible)\n      // 2. We have moved out of the home list.\n      // Don't need to do anything - item is invisible\n      if (impact.displaced.invisible[ownId]) {\n        return null;\n      }\n\n      // We are no longer over the home list.\n      // We need to move backwards to close the gap that the dragging item has left\n      const change = negate(afterCritical.displacedBy.point);\n      const offset = memoizedOffset(change.x, change.y);\n      return getMemoizedProps(offset, combineTargetFor, true);\n    }\n    if (isAfterCriticalInVirtualList) {\n      // In a virtual list the removal of a dragging item does\n      // not cause the list to collapse. So when something is 'displaced'\n      // we can just leave it in the original spot.\n      return getFallback(combineTargetFor);\n    }\n    const displaceBy = impact.displacedBy.point;\n    const offset = memoizedOffset(displaceBy.x, displaceBy.y);\n    return getMemoizedProps(offset, combineTargetFor, visualDisplacement.shouldAnimate);\n  };\n  const selector = (state, ownProps) => {\n    // Dragging\n    if (state.phase === 'DRAGGING') {\n      // we do not care about the dragging item\n      if (state.critical.draggable.id === ownProps.draggableId) {\n        return null;\n      }\n      return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);\n    }\n\n    // Dropping\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n\n      // do nothing if this was the dragging item\n      if (completed.result.draggableId === ownProps.draggableId) {\n        return null;\n      }\n      return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);\n    }\n\n    // Otherwise\n    return null;\n  };\n  return selector;\n}\n\n// Returning a function to ensure each\n// Draggable gets its own selector\nexport const makeMapStateToProps = () => {\n  const draggingSelector = getDraggableSelector();\n  const secondarySelector = getSecondarySelector();\n  const selector = (state, ownProps) => draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;\n  return selector;\n};\nconst mapDispatchToProps = {\n  dropAnimationFinished: dropAnimationFinishedAction\n};\n\n// Leaning heavily on the default shallow equality checking\n// that `connect` provides.\n// It avoids needing to do it own within `<Draggable />`\nconst ConnectedDraggable = connect(\n// returning a function so each component can do its own memoization\nmakeMapStateToProps, mapDispatchToProps,\n// @ts-ignore FIXME\nnull, {\n  // Using our own context for the store to avoid clashing with consumers\n  context: StoreContext,\n  // When pure, compares the result of mapStateToProps to its previous value.\n  // Default value: shallowEqual\n  // Switching to a strictEqual as we return a memoized object on changes\n  areStatePropsEqual: isStrictEqual\n})(Draggable); // FIXME cast to any just to make TS happy\nexport default ConnectedDraggable;\n//# sourceMappingURL=connected-draggable.js.map","import _extends from \"@babel/runtime/helpers/extends\";\nimport { createElement } from 'react';\nimport DroppableContext from '../context/droppable-context';\nimport useRequiredContext from '../use-required-context';\nimport ConnectedDraggable from './connected-draggable';\n// We can use this to render a draggable with more control\n// It is used by a Droppable to render a clone\nexport function PrivateDraggable(props) {\n  const droppableContext = useRequiredContext(DroppableContext);\n  // The droppable can render a clone of the draggable item.\n  // In that case we unmount the existing dragging item\n  const isUsingCloneFor = droppableContext.isUsingCloneFor;\n  if (isUsingCloneFor === props.draggableId && !props.isClone) {\n    return null;\n  }\n  return /*#__PURE__*/createElement(ConnectedDraggable, props);\n}\n// What we give to consumers\nexport function PublicDraggable(props) {\n  // default values for props\n  const isEnabled = typeof props.isDragDisabled === 'boolean' ? !props.isDragDisabled : true;\n  const canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);\n  const shouldRespectForcePress = Boolean(props.shouldRespectForcePress);\n  return /*#__PURE__*/createElement(PrivateDraggable, _extends({}, props, {\n    isClone: false,\n    isEnabled: isEnabled,\n    canDragInteractiveElements: canDragInteractiveElements,\n    shouldRespectForcePress: shouldRespectForcePress\n  }));\n}\n//# sourceMappingURL=draggable-api.js.map","import React, { useEffect, useRef, useState } from 'react';\nimport { useCallback } from 'use-memo-one';\nimport { transitions } from '../../animation';\nimport { noSpacing } from '../../state/spacing';\nfunction noop() {}\nconst empty = {\n  width: 0,\n  height: 0,\n  margin: noSpacing\n};\nconst getSize = ({\n  isAnimatingOpenOnMount,\n  placeholder,\n  animate\n}) => {\n  if (isAnimatingOpenOnMount) {\n    return empty;\n  }\n  if (animate === 'close') {\n    return empty;\n  }\n  return {\n    height: placeholder.client.borderBox.height,\n    width: placeholder.client.borderBox.width,\n    margin: placeholder.client.margin\n  };\n};\nconst getStyle = ({\n  isAnimatingOpenOnMount,\n  placeholder,\n  animate\n}) => {\n  const size = getSize({\n    isAnimatingOpenOnMount,\n    placeholder,\n    animate\n  });\n  return {\n    display: placeholder.display,\n    // ## Recreating the box model\n    // We created the borderBox and then apply the margins directly\n    // this is to maintain any margin collapsing behaviour\n    // creating borderBox\n    // background: 'green',\n    boxSizing: 'border-box',\n    width: size.width,\n    height: size.height,\n    // creating marginBox\n    marginTop: size.margin.top,\n    marginRight: size.margin.right,\n    marginBottom: size.margin.bottom,\n    marginLeft: size.margin.left,\n    // ## Avoiding collapsing\n    // Avoiding the collapsing or growing of this element when pushed by flex child siblings.\n    // We have already taken a snapshot the current dimensions we do not want this element\n    // to recalculate its dimensions\n    // It is okay for these properties to be applied on elements that are not flex children\n    flexShrink: '0',\n    flexGrow: '0',\n    // Just a little performance optimisation: avoiding the browser needing\n    // to worry about pointer events for this element\n    pointerEvents: 'none',\n    // Animate the placeholder size and margin\n    transition: animate !== 'none' ? transitions.placeholder : null\n  };\n};\nfunction Placeholder(props) {\n  const animateOpenTimerRef = useRef(null);\n  const tryClearAnimateOpenTimer = useCallback(() => {\n    if (!animateOpenTimerRef.current) {\n      return;\n    }\n    clearTimeout(animateOpenTimerRef.current);\n    animateOpenTimerRef.current = null;\n  }, []);\n  const {\n    animate,\n    onTransitionEnd,\n    onClose,\n    contextId\n  } = props;\n  const [isAnimatingOpenOnMount, setIsAnimatingOpenOnMount] = useState(props.animate === 'open');\n  // Will run after a render is flushed\n  // Still need to wait a timeout to ensure that the\n  // update is completely applied to the DOM\n  useEffect(() => {\n    // No need to do anything\n    if (!isAnimatingOpenOnMount) {\n      return noop;\n    }\n\n    // might need to clear the timer\n    if (animate !== 'open') {\n      tryClearAnimateOpenTimer();\n      setIsAnimatingOpenOnMount(false);\n      return noop;\n    }\n\n    // timer already pending\n    if (animateOpenTimerRef.current) {\n      return noop;\n    }\n    animateOpenTimerRef.current = setTimeout(() => {\n      animateOpenTimerRef.current = null;\n      setIsAnimatingOpenOnMount(false);\n    });\n    // clear the timer if needed\n    return tryClearAnimateOpenTimer;\n  }, [animate, isAnimatingOpenOnMount, tryClearAnimateOpenTimer]);\n  const onSizeChangeEnd = useCallback(event => {\n    // We transition height, width and margin\n    // each of those transitions will independently call this callback\n    // Because they all have the same duration we can just respond to one of them\n    // 'height' was chosen for no particular reason :D\n    if (event.propertyName !== 'height') {\n      return;\n    }\n    onTransitionEnd();\n    if (animate === 'close') {\n      onClose();\n    }\n  }, [animate, onClose, onTransitionEnd]);\n  const style = getStyle({\n    isAnimatingOpenOnMount,\n    animate: props.animate,\n    placeholder: props.placeholder\n  });\n  return /*#__PURE__*/React.createElement(props.placeholder.tagName, {\n    style,\n    'data-rbd-placeholder-context-id': contextId,\n    onTransitionEnd: onSizeChangeEnd,\n    ref: props.innerRef\n  });\n}\nexport default /*#__PURE__*/React.memo(Placeholder); // enzyme does not work well with memo, so exporting the non-memo version\n\nexport const WithoutMemo = Placeholder;\n//# sourceMappingURL=placeholder.js.map","import { warning } from '../../dev-warning';\nimport { invariant } from '../../invariant';\nimport getBodyElement from '../get-body-element';\nconst isEqual = base => value => base === value;\nconst isScroll = isEqual('scroll');\nconst isAuto = isEqual('auto');\nconst isVisible = isEqual('visible');\nconst isEither = (overflow, fn) => fn(overflow.overflowX) || fn(overflow.overflowY);\nconst isBoth = (overflow, fn) => fn(overflow.overflowX) && fn(overflow.overflowY);\nconst isElementScrollable = el => {\n  const style = window.getComputedStyle(el);\n  const overflow = {\n    overflowX: style.overflowX,\n    overflowY: style.overflowY\n  };\n  return isEither(overflow, isScroll) || isEither(overflow, isAuto);\n};\n\n// Special case for a body element\n// Playground: https://codepen.io/alexreardon/pen/ZmyLgX?editors=1111\nconst isBodyScrollable = () => {\n  // Because we always return false for now, we can skip any actual processing in production\n  if (process.env.NODE_ENV === 'production') {\n    return false;\n  }\n  const body = getBodyElement();\n  const html = document.documentElement;\n  invariant(html);\n\n  // 1. The `body` has `overflow-[x|y]: auto | scroll`\n  if (!isElementScrollable(body)) {\n    return false;\n  }\n  const htmlStyle = window.getComputedStyle(html);\n  const htmlOverflow = {\n    overflowX: htmlStyle.overflowX,\n    overflowY: htmlStyle.overflowY\n  };\n  if (isBoth(htmlOverflow, isVisible)) {\n    return false;\n  }\n  warning(`\n    We have detected that your <body> element might be a scroll container.\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\n\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\n    we will be treating the <body> as *not* a scroll container\n\n    More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-detect-scroll-containers.md\n  `);\n  return false;\n};\nconst getClosestScrollable = el => {\n  // cannot do anything else!\n  if (!el) {\n    return null;\n  }\n\n  // not allowing us to go higher then body\n  if (el === document.body) {\n    return isBodyScrollable() ? el : null;\n  }\n\n  // Should never get here, but just being safe\n  if (el === document.documentElement) {\n    return null;\n  }\n  if (!isElementScrollable(el)) {\n    // keep recursing\n    return getClosestScrollable(el.parentElement);\n  }\n\n  // success!\n  return el;\n};\nexport default getClosestScrollable;\n//# sourceMappingURL=get-closest-scrollable.js.map","export default (el => ({\n  x: el.scrollLeft,\n  y: el.scrollTop\n}));\n//# sourceMappingURL=get-scroll.js.map","import { createBox, expand, getBox, withScroll } from 'css-box-model';\nimport getDroppableDimension from '../../state/droppable/get-droppable';\nimport getScroll from './get-scroll';\nconst getClient = (targetRef, closestScrollable) => {\n  const base = getBox(targetRef);\n\n  // Droppable has no scroll parent\n  if (!closestScrollable) {\n    return base;\n  }\n\n  // Droppable is not the same as the closest scrollable\n  if (targetRef !== closestScrollable) {\n    return base;\n  }\n\n  // Droppable is scrollable\n  // Element.getBoundingClient() returns a clipped padding box:\n  // When not scrollable: the full size of the element\n  // When scrollable: the visible size of the element\n  // (which is not the full width of its scrollable content)\n  // So we recalculate the borderBox of a scrollable droppable to give\n  // it its full dimensions. This will be cut to the correct size by the frame\n  // Creating the paddingBox based on scrollWidth / scrollTop\n  // scrollWidth / scrollHeight are based on the paddingBox of an element\n  // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n  const top = base.paddingBox.top - closestScrollable.scrollTop;\n  const left = base.paddingBox.left - closestScrollable.scrollLeft;\n  const bottom = top + closestScrollable.scrollHeight;\n  const right = left + closestScrollable.scrollWidth;\n  // unclipped padding box\n  const paddingBox = {\n    top,\n    right,\n    bottom,\n    left\n  };\n  // Creating the borderBox by adding the borders to the paddingBox\n  const borderBox = expand(paddingBox, base.border);\n  // We are not accounting for scrollbars\n  // Adjusting for scrollbars is hard because:\n  // - they are different between browsers\n  // - scrollbars can be activated and removed during a drag\n  // We instead account for this slightly in our auto scroller\n  const client = createBox({\n    borderBox,\n    margin: base.margin,\n    border: base.border,\n    padding: base.padding\n  });\n  return client;\n};\nexport default (({\n  ref,\n  descriptor,\n  env,\n  windowScroll,\n  direction,\n  isDropDisabled,\n  isCombineEnabled,\n  shouldClipSubject\n}) => {\n  const closestScrollable = env.closestScrollable;\n  const client = getClient(ref, closestScrollable);\n  const page = withScroll(client, windowScroll);\n  const closest = (() => {\n    if (!closestScrollable) {\n      return null;\n    }\n    const frameClient = getBox(closestScrollable);\n    const scrollSize = {\n      scrollHeight: closestScrollable.scrollHeight,\n      scrollWidth: closestScrollable.scrollWidth\n    };\n    return {\n      client: frameClient,\n      page: withScroll(frameClient, windowScroll),\n      scroll: getScroll(closestScrollable),\n      scrollSize,\n      shouldClipSubject\n    };\n  })();\n  const dimension = getDroppableDimension({\n    descriptor,\n    isEnabled: !isDropDisabled,\n    isCombineEnabled,\n    isFixedOnPage: env.isFixedOnPage,\n    direction,\n    client,\n    page,\n    closest\n  });\n  return dimension;\n});\n//# sourceMappingURL=get-dimension.js.map","import { horizontal, vertical } from '../axis';\nimport getMaxScroll from '../get-max-scroll';\nimport { origin } from '../position';\nimport getSubject from './util/get-subject';\nexport default (({\n  descriptor,\n  isEnabled,\n  isCombineEnabled,\n  isFixedOnPage,\n  direction,\n  client,\n  page,\n  closest\n}) => {\n  const frame = (() => {\n    if (!closest) {\n      return null;\n    }\n    const {\n      scrollSize,\n      client: frameClient\n    } = closest;\n    // scrollHeight and scrollWidth are based on the padding box\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    const maxScroll = getMaxScroll({\n      scrollHeight: scrollSize.scrollHeight,\n      scrollWidth: scrollSize.scrollWidth,\n      height: frameClient.paddingBox.height,\n      width: frameClient.paddingBox.width\n    });\n    return {\n      pageMarginBox: closest.page.marginBox,\n      frameClient,\n      scrollSize,\n      shouldClipSubject: closest.shouldClipSubject,\n      scroll: {\n        initial: closest.scroll,\n        current: closest.scroll,\n        max: maxScroll,\n        diff: {\n          value: origin,\n          displacement: origin\n        }\n      }\n    };\n  })();\n  const axis = direction === 'vertical' ? vertical : horizontal;\n  const subject = getSubject({\n    page,\n    withPlaceholder: null,\n    axis,\n    frame\n  });\n  const dimension = {\n    descriptor,\n    isCombineEnabled,\n    isFixedOnPage,\n    axis,\n    isEnabled,\n    client,\n    page,\n    frame,\n    subject\n  };\n  return dimension;\n});\n//# sourceMappingURL=get-droppable.js.map","import getClosestScrollable from './get-closest-scrollable';\n// TODO: do this check at the same time as the closest scrollable\n// in order to avoid double calling getComputedStyle\n// Do this when we move to multiple scroll containers\nconst getIsFixed = el => {\n  if (!el) {\n    return false;\n  }\n  const style = window.getComputedStyle(el);\n  if (style.position === 'fixed') {\n    return true;\n  }\n  return getIsFixed(el.parentElement);\n};\nexport default (start => {\n  const closestScrollable = getClosestScrollable(start);\n  const isFixedOnPage = getIsFixed(start);\n  return {\n    closestScrollable,\n    isFixedOnPage\n  };\n});\n//# sourceMappingURL=get-env.js.map","const immediate = {\n  passive: false\n};\nconst delayed = {\n  passive: true\n};\nexport default (options => options.shouldPublishImmediately ? immediate : delayed);\n//# sourceMappingURL=get-listener-options.js.map","import { useRef } from 'react';\nimport memoizeOne from 'memoize-one';\nimport rafSchedule from 'raf-schd';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { warning } from '../../dev-warning';\nimport { invariant } from '../../invariant';\nimport { origin } from '../../state/position';\nimport AppContext from '../context/app-context';\nimport * as dataAttr from '../data-attributes';\nimport useLayoutEffect from '../use-isomorphic-layout-effect';\nimport usePreviousRef from '../use-previous-ref';\nimport useRequiredContext from '../use-required-context';\nimport useUniqueId from '../use-unique-id';\nimport checkForNestedScrollContainers from './check-for-nested-scroll-container';\nimport getDimension from './get-dimension';\nimport getEnv from './get-env';\nimport getListenerOptions from './get-listener-options';\nimport getScroll from './get-scroll';\nconst getClosestScrollableFromDrag = dragging => dragging && dragging.env.closestScrollable || null;\nexport default function useDroppablePublisher(args) {\n  const whileDraggingRef = useRef(null);\n  const appContext = useRequiredContext(AppContext);\n  const uniqueId = useUniqueId('droppable');\n  const {\n    registry,\n    marshal\n  } = appContext;\n  const previousRef = usePreviousRef(args);\n  const descriptor = useMemo(() => ({\n    id: args.droppableId,\n    type: args.type,\n    mode: args.mode\n  }), [args.droppableId, args.mode, args.type]);\n  const publishedDescriptorRef = useRef(descriptor);\n  const memoizedUpdateScroll = useMemo(() => memoizeOne((x, y) => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(whileDraggingRef.current, 'Can only update scroll when dragging');\n    const scroll = {\n      x,\n      y\n    };\n    marshal.updateDroppableScroll(descriptor.id, scroll);\n  }), [descriptor.id, marshal]);\n  const getClosestScroll = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    if (!dragging || !dragging.env.closestScrollable) {\n      return origin;\n    }\n    return getScroll(dragging.env.closestScrollable);\n  }, []);\n  const updateScroll = useCallback(() => {\n    // reading scroll value when called so value will be the latest\n    const scroll = getClosestScroll();\n    memoizedUpdateScroll(scroll.x, scroll.y);\n  }, [getClosestScroll, memoizedUpdateScroll]);\n  const scheduleScrollUpdate = useMemo(() => rafSchedule(updateScroll), [updateScroll]);\n  const onClosestScroll = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    const closest = getClosestScrollableFromDrag(dragging);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(dragging && closest, 'Could not find scroll options while scrolling');\n    const options = dragging.scrollOptions;\n    if (options.shouldPublishImmediately) {\n      updateScroll();\n      return;\n    }\n    scheduleScrollUpdate();\n  }, [scheduleScrollUpdate, updateScroll]);\n  const getDimensionAndWatchScroll = useCallback((windowScroll, options) => {\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(!whileDraggingRef.current, 'Cannot collect a droppable while a drag is occurring');\n    const previous = previousRef.current;\n    const maybeRef = previous.getDroppableRef();\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(maybeRef, 'Cannot collect without a droppable ref');\n    const ref = maybeRef;\n    const env = getEnv(ref);\n    const dragging = {\n      ref,\n      descriptor,\n      env,\n      scrollOptions: options\n    };\n    // side effect\n    whileDraggingRef.current = dragging;\n    const dimension = getDimension({\n      ref,\n      descriptor,\n      env,\n      windowScroll,\n      direction: previous.direction,\n      isDropDisabled: previous.isDropDisabled,\n      isCombineEnabled: previous.isCombineEnabled,\n      shouldClipSubject: !previous.ignoreContainerClipping\n    });\n    const scrollable = env.closestScrollable;\n    if (scrollable) {\n      scrollable.setAttribute(dataAttr.scrollContainer.contextId, appContext.contextId);\n      // bind scroll listener\n      scrollable.addEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));\n\n      // print a debug warning if using an unsupported nested scroll container setup\n      if (process.env.NODE_ENV !== 'production') {\n        checkForNestedScrollContainers(scrollable);\n      }\n    }\n    return dimension;\n  }, [appContext.contextId, descriptor, onClosestScroll, previousRef]);\n  const getScrollWhileDragging = useCallback(() => {\n    const dragging = whileDraggingRef.current;\n    const closest = getClosestScrollableFromDrag(dragging);\n    invariant(dragging && closest,\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    'Can only recollect Droppable client for Droppables that have a scroll container');\n    return getScroll(closest);\n  }, []);\n  const dragStopped = useCallback(() => {\n    const maybeDragging = whileDraggingRef.current;\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(maybeDragging, 'Cannot stop drag when no active drag');\n    const dragging = maybeDragging;\n    const closest = getClosestScrollableFromDrag(dragging);\n    whileDraggingRef.current = null;\n    if (!closest) {\n      return;\n    }\n\n    // unwatch scroll\n    scheduleScrollUpdate.cancel();\n    closest.removeAttribute(dataAttr.scrollContainer.contextId);\n    closest.removeEventListener('scroll', onClosestScroll, getListenerOptions(dragging.scrollOptions));\n  }, [onClosestScroll, scheduleScrollUpdate]);\n  const scroll = useCallback(change => {\n    // arrange\n    const dragging = whileDraggingRef.current;\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(dragging, 'Cannot scroll when there is no drag');\n    const closest = getClosestScrollableFromDrag(dragging);\n    // eslint-disable-next-line @sas/i18n/jsx-to-localize\n    invariant(closest, 'Cannot scroll a droppable with no closest scrollable');\n    // act\n    closest.scrollTop += change.y;\n    closest.scrollLeft += change.x;\n  }, []);\n  const callbacks = useMemo(() => {\n    return {\n      getDimensionAndWatchScroll,\n      getScrollWhileDragging,\n      dragStopped,\n      scroll\n    };\n  }, [dragStopped, getDimensionAndWatchScroll, getScrollWhileDragging, scroll]);\n  const entry = useMemo(() => ({\n    uniqueId,\n    descriptor,\n    callbacks\n  }), [callbacks, descriptor, uniqueId]);\n  // Register with the marshal and let it know of:\n  // - any descriptor changes\n  // - when it unmounts\n  useLayoutEffect(() => {\n    publishedDescriptorRef.current = entry.descriptor;\n    registry.droppable.register(entry);\n    return () => {\n      if (whileDraggingRef.current) {\n        // eslint-disable-next-line @sas/i18n/jsx-to-localize\n        warning('Unsupported: changing the droppableId or type of a Droppable during a drag');\n        dragStopped();\n      }\n      registry.droppable.unregister(entry);\n    };\n  }, [callbacks, descriptor, dragStopped, entry, marshal, registry.droppable]);\n  // update is enabled with the marshal\n  // only need to update when there is a drag\n  useLayoutEffect(() => {\n    if (!whileDraggingRef.current) {\n      return;\n    }\n    marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);\n  }, [args.isDropDisabled, marshal]);\n  // update is combine enabled with the marshal\n  // only need to update when there is a drag\n  useLayoutEffect(() => {\n    if (!whileDraggingRef.current) {\n      return;\n    }\n    marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);\n  }, [args.isCombineEnabled, marshal]);\n}\n//# sourceMappingURL=use-droppable-publisher.js.map","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport memoizeOne from 'memoize-one';\nimport { invariant } from '../../invariant';\nimport { updateViewportMaxScroll as updateViewportMaxScrollAction } from '../../state/action-creators';\nimport whatIsDraggedOver from '../../state/droppable/what-is-dragged-over';\nimport whatIsDraggedOverFromResult from '../../state/droppable/what-is-dragged-over-from-result';\nimport StoreContext from '../context/store-context';\nimport isStrictEqual from '../is-strict-equal';\nimport Droppable from './droppable';\nconst isMatchingType = (type, critical) => type === critical.droppable.type;\nconst getDraggable = (critical, dimensions) => dimensions.draggables[critical.draggable.id];\n\n// Returning a function to ensure each\n// Droppable gets its own selector\nexport const makeMapStateToProps = () => {\n  const idleWithAnimation = {\n    placeholder: null,\n    shouldAnimatePlaceholder: true,\n    snapshot: {\n      isDraggingOver: false,\n      draggingOverWith: null,\n      draggingFromThisWith: null,\n      isUsingPlaceholder: false\n    },\n    useClone: null\n  };\n  const idleWithoutAnimation = {\n    ...idleWithAnimation,\n    shouldAnimatePlaceholder: false\n  };\n  const getDraggableRubric = memoizeOne(descriptor => ({\n    draggableId: descriptor.id,\n    type: descriptor.type,\n    source: {\n      index: descriptor.index,\n      droppableId: descriptor.droppableId\n    }\n  }));\n  const getMapProps = memoizeOne((id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) => {\n    const draggableId = dragging.descriptor.id;\n    const isHome = dragging.descriptor.droppableId === id;\n    if (isHome) {\n      const useClone = renderClone ? {\n        render: renderClone,\n        dragging: getDraggableRubric(dragging.descriptor)\n      } : null;\n      const snapshot = {\n        isDraggingOver: isDraggingOverForConsumer,\n        draggingOverWith: isDraggingOverForConsumer ? draggableId : null,\n        draggingFromThisWith: draggableId,\n        isUsingPlaceholder: true\n      };\n      return {\n        placeholder: dragging.placeholder,\n        shouldAnimatePlaceholder: false,\n        snapshot,\n        useClone\n      };\n    }\n    if (!isEnabled) {\n      return idleWithoutAnimation;\n    }\n\n    // not over foreign list - return idle\n    if (!isDraggingOverForImpact) {\n      return idleWithAnimation;\n    }\n    const snapshot = {\n      isDraggingOver: isDraggingOverForConsumer,\n      draggingOverWith: draggableId,\n      draggingFromThisWith: null,\n      isUsingPlaceholder: true\n    };\n    return {\n      placeholder: dragging.placeholder,\n      // Animating placeholder in foreign list\n      shouldAnimatePlaceholder: true,\n      snapshot,\n      useClone: null\n    };\n  });\n  const isDragging = state => {\n    return state.isDragging;\n  };\n  const selector = (state, ownProps) => {\n    // not checking if item is disabled as we need the home list to display a placeholder\n    const id = ownProps.droppableId;\n    const type = ownProps.type;\n    const isEnabled = !ownProps.isDropDisabled;\n    const renderClone = ownProps.renderClone;\n    if (isDragging(state)) {\n      const critical = state.critical;\n      if (!isMatchingType(type, critical)) {\n        return idleWithoutAnimation;\n      }\n      const dragging = getDraggable(critical, state.dimensions);\n      const isDraggingOver = whatIsDraggedOver(state.impact) === id;\n      return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);\n    }\n    if (state.phase === 'DROP_ANIMATING') {\n      const completed = state.completed;\n      if (!isMatchingType(type, completed.critical)) {\n        return idleWithoutAnimation;\n      }\n      const dragging = getDraggable(completed.critical, state.dimensions);\n      // Snapshot based on result and not impact\n      // The result might be null (cancel) but the impact is populated\n      // to move everything back\n      return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, dragging, renderClone);\n    }\n    if (state.phase === 'IDLE' && state.completed && !state.shouldFlush) {\n      const completed = state.completed;\n      if (!isMatchingType(type, completed.critical)) {\n        return idleWithoutAnimation;\n      }\n\n      // Looking at impact as this controls the placeholder\n      const wasOver = whatIsDraggedOver(completed.impact) === id;\n      const wasCombining = Boolean(completed.impact.at && completed.impact.at.type === 'COMBINE');\n      const isHome = completed.critical.droppable.id === id;\n      if (wasOver) {\n        // if reordering we need to cut an animation immediately\n        // if merging: animate placeholder closed after drop\n        return wasCombining ? idleWithAnimation : idleWithoutAnimation;\n      }\n\n      // we need to animate the home placeholder closed if it is not\n      // being dropped into\n      if (isHome) {\n        return idleWithAnimation;\n      }\n      return idleWithoutAnimation;\n    }\n\n    // default: including when flushed\n    return idleWithoutAnimation;\n  };\n  return selector; // FIXME cast to any just to make TS happy\n};\n\nconst mapDispatchToProps = {\n  updateViewportMaxScroll: updateViewportMaxScrollAction\n};\nfunction getBody() {\n  invariant(document.body, 'document.body is not ready');\n  return document.body;\n}\nconst defaultProps = {\n  mode: 'standard',\n  type: 'DEFAULT',\n  direction: 'vertical',\n  isDropDisabled: false,\n  isCombineEnabled: false,\n  ignoreContainerClipping: false,\n  renderClone: null,\n  getContainerForClone: getBody\n};\n\n// Abstract class allows to specify props and defaults to component.\n// All other ways give any or do not let add default props.\nclass DroppableType extends Component {\n  static defaultProps = defaultProps;\n}\n\n// Leaning heavily on the default shallow equality checking\n// that `connect` provides.\n// It avoids needing to do it own within `Droppable`\nconst partialConnectedDroppable = connect(\n// returning a function so each component can do its own memoization\nmakeMapStateToProps,\n// no dispatch props for droppable\nmapDispatchToProps,\n// @ts-ignore FIXME\nnull, {\n  // Ensuring our context does not clash with consumers\n  context: StoreContext,\n  // When pure, compares the result of mapStateToProps to its previous value.\n  // Default value: shallowEqual\n  // Switching to a strictEqual as we return a memoized object on changes\n  areStatePropsEqual: isStrictEqual\n})(Droppable);\npartialConnectedDroppable.defaultProps = defaultProps;\nconst ConnectedDroppable = partialConnectedDroppable;\nexport default ConnectedDroppable;\n//# sourceMappingURL=connected-droppable.js.map","import { createElement, useContext, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { invariant } from '../../invariant';\nimport AnimateInOut from '../animate-in-out/animate-in-out';\nimport AppContext from '../context/app-context';\nimport DroppableContext from '../context/droppable-context';\nimport { PrivateDraggable } from '../draggable/draggable-api';\nimport Placeholder from '../placeholder';\nimport useDroppablePublisher from '../use-droppable-publisher';\nimport getMaxWindowScroll from '../window/get-max-window-scroll';\nimport useValidation from './use-validation';\nexport default function Droppable(props) {\n  const appContext = useContext(AppContext);\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(appContext, 'Could not find app context');\n  const {\n    contextId,\n    isMovementAllowed\n  } = appContext;\n  const droppableRef = useRef(null);\n  const placeholderRef = useRef(null);\n  const {\n    // own props\n    children,\n    droppableId,\n    type,\n    mode,\n    direction,\n    ignoreContainerClipping,\n    isDropDisabled,\n    isCombineEnabled,\n    // map props\n    snapshot,\n    useClone,\n    // dispatch props\n    updateViewportMaxScroll,\n    // clone (ownProps)\n    getContainerForClone\n  } = props;\n  const getDroppableRef = useCallback(() => droppableRef.current, []);\n  const setDroppableRef = useCallback(value => {\n    droppableRef.current = value;\n  }, []);\n  const getPlaceholderRef = useCallback(() => placeholderRef.current, []);\n  const setPlaceholderRef = useCallback(value => {\n    placeholderRef.current = value;\n  }, []);\n  useValidation({\n    props,\n    getDroppableRef,\n    getPlaceholderRef\n  });\n  const onPlaceholderTransitionEnd = useCallback(() => {\n    // A placeholder change can impact the window's max scroll\n    if (isMovementAllowed()) {\n      updateViewportMaxScroll({\n        maxScroll: getMaxWindowScroll()\n      });\n    }\n  }, [isMovementAllowed, updateViewportMaxScroll]);\n  useDroppablePublisher({\n    droppableId,\n    type,\n    mode,\n    direction,\n    isDropDisabled,\n    isCombineEnabled,\n    ignoreContainerClipping,\n    getDroppableRef\n  });\n  const placeholder = useMemo(() => /*#__PURE__*/createElement(AnimateInOut, {\n    on: props.placeholder,\n    shouldAnimate: props.shouldAnimatePlaceholder\n  }, ({\n    onClose,\n    data,\n    animate\n  }) => /*#__PURE__*/createElement(Placeholder, {\n    placeholder: data,\n    onClose: onClose,\n    innerRef: setPlaceholderRef // TODO this may be incorrect conversion from flow.js\n    ,\n    animate: animate,\n    contextId: contextId,\n    onTransitionEnd: onPlaceholderTransitionEnd\n  })), [contextId, onPlaceholderTransitionEnd, props.placeholder, props.shouldAnimatePlaceholder, setPlaceholderRef]);\n  const provided = useMemo(() => ({\n    innerRef: setDroppableRef,\n    placeholder,\n    droppableProps: {\n      'data-rbd-droppable-id': droppableId,\n      'data-rbd-droppable-context-id': contextId\n    }\n  }), [contextId, droppableId, placeholder, setDroppableRef]);\n  const isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;\n  const droppableContext = useMemo(() => ({\n    droppableId,\n    type,\n    isUsingCloneFor\n  }), [droppableId, isUsingCloneFor, type]);\n  function getClone() {\n    if (!useClone) {\n      return null;\n    }\n    const {\n      dragging,\n      render\n    } = useClone;\n    const node = /*#__PURE__*/createElement(PrivateDraggable, {\n      draggableId: dragging.draggableId,\n      index: dragging.source.index,\n      isClone: true,\n      isEnabled: true // not important as drag has already started\n      ,\n      shouldRespectForcePress: false,\n      canDragInteractiveElements: true\n    }, (draggableProvided, draggableSnapshot) => render(draggableProvided, draggableSnapshot, dragging));\n    return /*#__PURE__*/ReactDOM.createPortal(node, getContainerForClone());\n  }\n  return /*#__PURE__*/createElement(DroppableContext.Provider, {\n    value: droppableContext\n  }, children(provided, snapshot), getClone());\n}\n//# sourceMappingURL=droppable.js.map","import { warning } from '../../dev-warning';\nimport { invariant } from '../../invariant';\nimport checkIsValidInnerRef from '../check-is-valid-inner-ref';\nimport useDevSetupWarning from '../use-dev-setup-warning';\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\nfunction runChecks(args, checks) {\n  checks.forEach(check => check(args));\n}\nconst shared = [function required({\n  props\n}) {\n  invariant(props.droppableId, 'A Droppable requires a droppableId prop');\n  invariant(typeof props.droppableId === 'string', `A Droppable requires a [string] droppableId. Provided: [${typeof props.droppableId}]`);\n}, function boolean({\n  props\n}) {\n  invariant(isBoolean(props.isDropDisabled), 'isDropDisabled must be a boolean');\n  invariant(isBoolean(props.isCombineEnabled), 'isCombineEnabled must be a boolean');\n  invariant(isBoolean(props.ignoreContainerClipping), 'ignoreContainerClipping must be a boolean');\n}, function ref({\n  getDroppableRef\n}) {\n  checkIsValidInnerRef(getDroppableRef());\n}];\nconst standard = [function placeholder({\n  props,\n  getPlaceholderRef\n}) {\n  if (!props.placeholder) {\n    return;\n  }\n  const ref = getPlaceholderRef();\n  if (ref) {\n    return;\n  }\n  warning(`\n      Droppable setup issue [droppableId: \"${props.droppableId}\"]:\n      DroppableProvided > placeholder could not be found.\n\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\n      More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/droppable.md\n    `);\n}];\nconst virtual = [function hasClone({\n  props\n}) {\n  invariant(props.renderClone,\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  'Must provide a clone render function (renderClone) for virtual lists');\n}, function hasNoPlaceholder({\n  getPlaceholderRef\n}) {\n  // eslint-disable-next-line @sas/i18n/jsx-to-localize\n  invariant(!getPlaceholderRef(), 'Expected virtual list to not have a placeholder');\n}];\nexport default function useValidation(args) {\n  useDevSetupWarning(() => {\n    // wrapping entire block for better minification\n    runChecks(args, shared);\n    if (args.props.mode === 'standard') {\n      runChecks(args, standard);\n    }\n    if (args.props.mode === 'virtual') {\n      runChecks(args, virtual);\n    }\n  });\n}\n//# sourceMappingURL=use-validation.js.map","import { useRef } from 'react';\nimport { useCallback, useMemo } from 'use-memo-one';\nimport { invariant } from '../../../invariant';\nimport bindEvents from '../../event-bindings/bind-events';\nimport * as keyCodes from '../../key-codes';\nimport useLayoutEffect from '../../use-isomorphic-layout-effect';\nimport preventStandardKeyEvents from './util/prevent-standard-key-events';\nimport supportedPageVisibilityEventName from './util/supported-page-visibility-event-name';\nfunction noop() {}\nconst scrollJumpKeys = {\n  [keyCodes.pageDown]: true,\n  [keyCodes.pageUp]: true,\n  [keyCodes.home]: true,\n  [keyCodes.end]: true\n};\nfunction getDraggingBindings(actions, stop) {\n  function cancel() {\n    stop();\n    actions.cancel();\n  }\n  function drop() {\n    stop();\n    actions.drop();\n  }\n  return [{\n    eventName: 'keydown',\n    fn: event => {\n      if (event.keyCode === keyCodes.escape) {\n        event.preventDefault();\n        cancel();\n        return;\n      }\n\n      // Dropping\n      if (event.keyCode === keyCodes.space) {\n        // need to stop parent Draggable's thinking this is a lift\n        event.preventDefault();\n        drop();\n        return;\n      }\n\n      // Movement\n      if (event.keyCode === keyCodes.arrowDown) {\n        event.preventDefault();\n        actions.moveDown();\n        return;\n      }\n      if (event.keyCode === keyCodes.arrowUp) {\n        event.preventDefault();\n        actions.moveUp();\n        return;\n      }\n      if (event.keyCode === keyCodes.arrowRight) {\n        event.preventDefault();\n        actions.moveRight();\n        return;\n      }\n      if (event.keyCode === keyCodes.arrowLeft) {\n        event.preventDefault();\n        actions.moveLeft();\n        return;\n      }\n\n      // preventing scroll jumping at this time\n      if (scrollJumpKeys[event.keyCode]) {\n        event.preventDefault();\n        return;\n      }\n      preventStandardKeyEvents(event);\n    }\n  },\n  // any mouse actions kills a drag\n  {\n    eventName: 'mousedown',\n    fn: cancel\n  }, {\n    eventName: 'mouseup',\n    fn: cancel\n  }, {\n    eventName: 'click',\n    fn: cancel\n  }, {\n    eventName: 'touchstart',\n    fn: cancel\n  },\n  // resizing the browser kills a drag\n  {\n    eventName: 'resize',\n    fn: cancel\n  },\n  // kill if the user is using the mouse wheel\n  // We are not supporting wheel / trackpad scrolling with keyboard dragging\n  {\n    eventName: 'wheel',\n    fn: cancel,\n    // chrome says it is a violation for this to not be passive\n    // it is fine for it to be passive as we just cancel as soon as we get\n    // any event\n    options: {\n      passive: true\n    }\n  },\n  // Cancel on page visibility change\n  {\n    eventName: supportedPageVisibilityEventName,\n    fn: cancel\n  }];\n}\nexport default function useKeyboardSensor(api) {\n  const unbindEventsRef = useRef(noop);\n  const startCaptureBinding = useMemo(() => ({\n    eventName: 'keydown',\n    fn: function onKeyDown(event) {\n      // Event already used\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      // Need to start drag with a spacebar press\n      if (event.keyCode !== keyCodes.space) {\n        return;\n      }\n      const draggableId = api.findClosestDraggableId(event);\n      if (!draggableId) {\n        return;\n      }\n      const preDrag = api.tryGetLock(draggableId,\n      // abort function not defined yet\n      // eslint-disable-next-line no-use-before-define\n      stop, {\n        sourceEvent: event\n      });\n\n      // Cannot start capturing at this time\n      if (!preDrag) {\n        return;\n      }\n\n      // we are consuming the event\n      event.preventDefault();\n      let isCapturing = true;\n      // There is no pending period for a keyboard drag\n      // We can lift immediately\n      const actions = preDrag.snapLift();\n      // unbind this listener\n      unbindEventsRef.current();\n\n      // setup our function to end everything\n      function stop() {\n        // eslint-disable-next-line @sas/i18n/jsx-to-localize\n        invariant(isCapturing, 'Cannot stop capturing a keyboard drag when not capturing');\n        isCapturing = false;\n        // unbind dragging bindings\n        unbindEventsRef.current();\n        // start listening for capture again\n        // eslint-disable-next-line no-use-before-define\n        listenForCapture();\n      }\n\n      // bind dragging listeners\n      unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {\n        capture: true,\n        passive: false\n      });\n    }\n  }),\n  // not including startPendingDrag as it is not defined initially\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [api]);\n  const listenForCapture = useCallback(function tryStartCapture() {\n    const options = {\n      passive: false,\n      capture: true\n    };\n    unbindEventsRef.current = bindEvents(window, [startCaptureBinding], options);\n  }, [startCaptureBinding]);\n  useLayoutEffect(function mount() {\n    listenForCapture();\n    // kill any pending window events when unmounting\n    return function unmount() {\n      unbindEventsRef.current();\n    };\n  }, [listenForCapture]);\n}\n//# sourceMappingURL=use-keyboard-sensor.js.map","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n"],"names":["position","index","withLocation","source","destination","isInHomeList","droppableId","startPosition","endPosition","withCombine","id","combine","draggableId","returnedToStart","preset","dragHandleUsageInstructions","onDragStart","start","onDragUpdate","update","location","onDragEnd","result","reason","count","defaults","separator","useUniqueId","prefix","options","batch","callback","getBatch","useSyncExternalStoreWithSelector","_excluded","pureFinalPropsSelectorFactory","mapStateToProps","mapDispatchToProps","mergeProps","dispatch","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","state","ownProps","stateProps","dispatchProps","mergedProps","hasRunAtLeastOnce","handleSubsequentCalls","nextState","nextOwnProps","propsChanged","stateChanged","dependsOnOwnProps","nextStateProps","statePropsChanged","handleNewState","wrapMapToPropsConstant","getConstant","constant","constantSelector","getDependsOnOwnProps","mapToProps","Boolean","length","wrapMapToPropsFunc","methodName","displayName","proxy","stateOrDispatch","undefined","props","createInvalidArgFactory","arg","name","Error","wrappedComponentName","defaultMergeProps","nullListeners","notify","get","createSubscription","store","parentSub","unsubscribe","listeners","handleChangeWrapper","subscription","onStateChange","trySubscribe","addNestedSub","subscribe","first","last","clear","listener","next","push","isSubscribed","prev","createListenerCollection","notifyNestedSubs","tryUnsubscribe","getListeners","useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","useEffect","is","x","y","shallowEqual","objA","objB","keysA","Object","keys","keysB","i","prototype","hasOwnProperty","call","useSyncExternalStore","NO_SUBSCRIPTION_ARRAY","captureWrapperProps","lastWrapperProps","lastChildProps","renderIsScheduled","wrapperProps","childPropsFromStoreUpdate","current","strictEqual","a","b","pure","areMergedPropsEqual","forwardRef","context","Context","initMapStateToProps","mapStateToPropsFactory","initMapDispatchToProps","actionCreators","boundActionCreators","key","actionCreator","args","bindActionCreators","mapDispatchToPropsFactory","initMergeProps","hasRunOnce","nextMergedProps","wrapMergePropsFunc","mergePropsFactory","shouldHandleStateChanges","WrappedComponent","selectorFactoryOptions","ConnectFunction","propsContext","reactReduxForwardedRef","useMemo","ContextToUse","Consumer","isContextConsumer","contextValue","useContext","didStoreComeFromProps","getState","didStoreComeFromContext","getServerState","childPropsSelector","_ref","bind","overriddenContextValue","useRef","isMounted","latestSubscriptionCallbackError","actualChildPropsSelector","subscribeForReact","reactListener","additionalSubscribeListener","didUnsubscribe","lastThrownError","checkForUpdates","latestStoreState","newChildProps","error","e","subscribeUpdates","effectFunc","effectArgs","dependencies","actualChildProps","err","message","stack","renderedWrappedComponent","ref","Provider","value","Connect","forwarded","children","serverState","previousState","fn","newBatch","initializeConnect","formatProdErrorMessage","code","$$observable","Symbol","observable","randomString","Math","random","toString","substring","split","join","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","obj","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","arguments","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","indexOf","splice","action","type","replaceReducer","nextReducer","outerSubscribe","observer","observeState","this","bindActionCreator","apply","compose","_len","funcs","Array","_key","reduce","log","RbdInvariant","constructor","invariant","condition","payload","publishWhileDragging","collectionStarting","updateDroppableScroll","updateDroppableIsEnabled","updateDroppableIsCombineEnabled","moveUp","moveDown","moveRight","moveLeft","flush","completeDrop","drop","dropAnimationFinished","lastArgs","frameId","wrapperFn","requestAnimationFrame","cancel","cancelAnimationFrame","finish","impact","at","values","map","findIndex","list","predicate","find","toArray","toDroppableMap","droppables","previous","descriptor","toDraggableMap","draggables","toDroppableList","toDraggableList","lowerBound","upperBound","isPositionInFrame","frame","isWithinVertical","top","bottom","isWithinHorizontal","left","right","point","getScrollableDroppables","filter","droppable","isEnabled","center","dimension","target","pageMarginBox","getScrollableDroppableOver","origin","add","point1","point2","subtract","isEqual","negate","patch","line","otherValue","sqrt","pow","closest","points","min","smallestSigned","getOverlap","getRemainder","max","change","targetScroll","overlap","canPartiallyScroll","rawMax","smallestChange","canScrollWindow","viewport","scroll","canScrollDroppable","vertical","direction","crossAxisLine","end","size","crossAxisStart","crossAxisEnd","crossAxisSize","horizontal","startFromPercentage","maxScrollAtPercentage","maxPixelScroll","ease","percentage","durationDampening","stopDampeningAt","accelerateAt","startOfRange","endOfRange","range","stopAt","distanceToEdge","thresholds","dragStartTime","shouldUseTimeDampening","startScrollingFrom","maxScrollValueAt","percentageFromStartScrollingFrom","ceil","proposedScroll","runTime","Date","now","betweenAccelerateAtAndStopAtPercentage","container","distanceToEdges","axis","subject","required","limited","isTooBigVertically","height","isTooBigHorizontally","width","scrollWindow","scrollDroppable","page","borderBoxCenter","dimensions","critical","draggable","marginBox","isWindowScrollAllowed","move","scrollDroppableAsMuchAsItCan","getDroppableOverlap","whatTheDroppableCanScroll","scrollWindowAsMuchAsItCan","getWindowOverlap","whatTheWindowCanScroll","request","scrollJumpRequest","droppableRemainder","windowRemainder","offset","client","selection","moveByOffset","fluidScroller","scheduleWindowScroll","scheduleDroppableScroll","dragging","tryScroll","wasScrollNeeded","fakeScrollCallback","stop","jumpScroll","phase","movementMode","completed","bindEvents","el","bindings","sharedOptions","unbindings","binding","shared","fromBinding","getOptions","addEventListener","eventName","removeEventListener","forEach","unbind","capture","passive","once","tryGetDestination","tryGetCombine","curves","combining","timings","outOfTheWay","minDropTime","maxDropTime","outOfTheWayTiming","transitions","fluid","snap","duration","timing","placeholder","moveTo","transforms","isCombining","translate","dropTimeRange","noDisplacedBy","emptyGroups","invisible","visible","all","displaced","displacedBy","getRect","expand","expandBy","shrink","shrinkBy","noSpacing","createBox","borderBox","_ref2$margin","margin","_ref2$border","border","_ref2$padding","padding","paddingBox","contentBox","parse","raw","Number","isNaN","original","shiftBy","shifted","withScroll","pageXOffset","pageYOffset","calculateBox","styles","marginTop","marginRight","marginBottom","marginLeft","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","getBox","getBoundingClientRect","getComputedStyle","offsetByPosition","spacing","getCorners","isPartiallyVisibleVertically","isPartiallyVisibleHorizontally","isBiggerVertically","isBiggerHorizontally","isVisible","toBeDisplaced","withDroppableDisplacement","isVisibleThroughFrameFn","displacedTarget","displacement","diff","getDroppableDisplaced","active","isVisibleInDroppable","isVisibleInViewport","isPartiallyVisible","isTotallyVisible","getShouldAnimate","forceShouldAnimate","shouldAnimate","getDisplacementGroups","afterDragging","groups","getTarget","ids","getDraggables","afterCritical","effected","combineWith","displaceBy","isDisplaced","sort","distanceFromStartToBorderBoxCenter","box","getCrossAxisBorderBoxCenter","isMoving","goAfter","moveRelativeTo","goBefore","distanceFromEndToBorderBoxCenter","insideDestination","draggablePage","moveInto","goIntoStart","closestAfter","withDisplacement","withoutDisplacement","getResultWithoutDroppableDisplacement","pageBorderBoxCenter","withoutPageScrollChange","dropPending","isWaiting","draggingOrDropPendingState","didDropInsideDroppable","lastImpact","home","onLiftImpact","recompute","mode","newHomeClientOffset","newClientCenter","dropDuration","distance","toFixed","animateDrop","postActionState","entries","timerId","setTimeout","item","entry","execute","shallow","clearTimeout","withTimings","getDragStart","responder","data","announce","getDefaultMessage","willExpire","wasCalled","isExpired","timeoutId","getResponders","publisher","asyncMarshal","beforeCapture","onBeforeCapture","beforeStart","onBeforeDragStart","lastCritical","lastLocation","lastCombine","hasCriticalChanged","second","isDraggableEqual","isDroppableEqual","isCriticalEqual","hasLocationChanged","hasGroupingChanged","isCombineEqual","abort","noop","getScrollListener","onWindowScroll","scheduled","event","getWindowScrollBinding","isActive","newScroll","shouldEnd","shouldClipSubject","withPlaceholder","scrolled","increased","increasedBy","increase","scrollable","scrollDiff","initial","scrollDisplacement","insideHome","rawIndex","inVirtualList","isMovementAllowed","getKnownActive","rect","getCurrentPageBorderBoxCenter","getCurrentPageBorderBox","remove","goAtEnd","inHomeList","newIndex","indexOfLastItem","getIndexOfLastItem","calculateReorderImpact","match","withoutDragging","sliceFrom","withMaxScroll","addPlaceholder","placeholderSize","requiredGrowth","availableSpace","needsToGrowBy","sum","getRequiredGrowthForPlaceholder","added","oldFrameMaxScroll","maxScroll","newFrame","newPageBorderBoxCenter","onlyOnMainAxis","changeNeeded","isTotallyVisibleOnAxis","isMovingForward","previousPageBorderBoxCenter","isOver","isBetweenSourceClipped","candidates","activeOfTarget","isBetweenDestinationClipped","_index","array","contains","isWithinDroppable","distanceToA","distanceToB","proposed","proposedPageBorderBoxCenter","isGoingBeforeTarget","proposedIndex","relativeTo","clientSelection","previousImpact","wasAt","isReorder","currentIndex","firstIndex","lastIndex","isCombineEnabled","combineId","combineWithIndex","previousClientSelection","getImpact","closestId","withoutDraggable","indexOfClosest","d","cautious","maxScrollChange","scrolledViewport","scrolledDroppable","withViewportScroll","withDroppableScroll","tryGetVisible","isActuallyOver","getDroppableOver","isMainAxisMovementAllowed","isMovingOnMainAxis","updated","pageBorderBox","childCenter","isContained","isStartContained","isEndContained","startCenter","sorted","candidate","getFurthestAway","offsetRectByPosition","getIsDisplaced","pageOffset","destinationId","pageBorderBoxWithDroppableScroll","area","targetRect","targetStart","targetEnd","child","childRect","threshold","didStartAfterCritical","atIndex","childStart","childBottom","clearUnusedPlaceholder","lastDroppable","oldMaxScroll","removePlaceholder","forcedClientSelection","forcedDimensions","forcedViewport","forcedImpact","newImpact","withUpdatedPlaceholders","cleaned","patched","needsVisibilityCheck","additions","updatedDroppables","windowScrollChange","droppableScrollChange","moved","initialWindowScroll","isSnapping","postDroppableChange","isEnabledChanging","removeScrollJumpRequest","isDragging","idle","shouldFlush","every","isFixedOnPage","published","withScrollChange","modified","existing","updatedAdditions","removals","wasOverId","wasOver","draggingState","movementAllowedState","String","maybeTarget","composeEnhancers","dimensionMarshal","focusMarshal","styleMarshal","autoScroller","middlewares","_dispatch","middlewareAPI","chain","middleware","applyMiddleware","marshal","dropping","resting","stopPublishing","scrollOptions","shouldPublishImmediately","startPublishing","lift","shouldStop","isWatching","tryRecordFocus","tryRestoreFocusRecorded","tryShiftRecord","doc","documentElement","scrollHeight","scrollWidth","clientWidth","clientHeight","registry","windowScroll","getAllByType","callbacks","getDimensionAndWatchScroll","getDimension","shouldPublishUpdate","getById","collection","staging","collect","getScrollWhileDragging","publish","createPublisher","subscriber","exists","dragStopped","createRegistry","subscribers","cb","findDraggableById","findDroppableById","register","uniqueId","unregister","findById","clean","body","overflow","clip","getId","contextId","base","scrollContainer","ownerDocument","defaultView","isHtmlElement","HTMLElement","findDragHandle","selector","possible","querySelectorAll","handle","getAttribute","usePrevious","supportedMatchesName","Element","closestPonyfill","matcher","parentElement","findClosestDragHandleFromEvent","getSelector","interactiveTagNames","input","button","textarea","select","option","optgroup","video","audio","isAnInteractiveElement","parent","tagName","toLowerCase","attribute","isEventInInteractiveElement","tab","enter","space","pageUp","pageDown","arrowLeft","arrowUp","arrowRight","arrowDown","preventedKeys","keyCode","preventDefault","primaryButton","sloppyClickThreshold","getCaptureBindings","getPhase","setPhase","clientX","clientY","actions","pending","abs","fluidLift","shouldBlockNextClick","shouldRespectForcePress","useMouseSensor","api","phaseRef","unbindEventsRef","startCaptureBinding","defaultPrevented","ctrlKey","metaKey","shiftKey","altKey","findClosestDraggableId","tryGetLock","sourceEvent","startPendingDrag","preventForcePressBinding","findOptionsForDraggable","canGetLock","listenForCapture","bindCapturingEvents","timeForLongPress","forcePressThreshold","useTouchSensor","touch","touches","longPressTimerId","unbindTarget","hasMoved","force","shouldRespect","getHandleBindings","unbindWindow","getWindowBindings","startDragging","useDev","useHook","useDevSetupWarning","inputs","expected","isLockActive","shouldWarn","canStart","lockAPI","isClaimed","tryStart","forceSensorStop","findDraggable","canDragInteractiveElements","lock","claim","getShouldRespectForcePress","tryDispatchWhenDragging","getAction","release","cleanup","liftActionArgs","snapLift","defaultSensors","useSensorMarshal","customSensors","enableDefaultSensors","useSensors","useState","abandon","newLock","tryAbandon","create","tryAbandonLock","forceStop","tryReleaseLock","isLockClaimed","getStyles","rules","property","rule","dragHandle","grabCursor","always","dropAnimating","transition","userCancel","getHead","head","querySelector","createStyleEl","nonce","setAttribute","scrollBy","createResponders","getStore","lazyRef","App","setCallbacks","sensors","lazyStoreRef","lastPropsRef","assign","style","appendChild","removeChild","textContent","useAnnouncer","dragHandleUsageInstructionsId","text","getElementId","display","useHiddenTextElement","alwaysRef","dynamicRef","setDynamicStyle","setAlwaysStyle","dynamic","useStyleMarshal","lazyDispatch","marshalCallbacks","useRegistry","entriesRef","recordRef","restoreFocusFrameRef","isMountedRef","focus","tryGiveFocus","tryGiveFocusTo","activeElement","redirectTo","record","focused","useFocusMarshal","tryResetStore","tryAbort","getCanLift","getIsMovementAllowed","appContext","canLift","EmbeddedDnDContext","createContext","DragContextResponderTypes","useEmbeddedDnDContext","EmbeddedDnDConsumer","service","delinkDragStart","registerDragStart","delinkDragUpdate","registerDragUpdate","delinkDragEnd","registerDragEnd","delinkBeforeDragStart","registerBeforeDragStart","delinkBeforeCapture","registerBeforeCapture","Fragment","ErrorBoundary","Component","componentDidMount","onWindowError","componentDidCatch","setState","componentWillUnmount","getCallbacks","render","resetServerContext","DragDropContext","listenersRef","Map","set","DragStart","DragUpdate","DragEnd","BeforeDragStart","BeforeCapture","registerListener","useCallback","_listener","params","listenerFn","before","provided","AnimateInOut","on","animate","getDerivedStateFromProps","onClose","useRequiredContext","useDraggablePublisher","getDraggableRef","computedStyles","publishedRef","isFirstPublishRef","zIndexOptions","getDraggingTransition","shouldAnimateDragMovement","getDraggingOpacity","isDropAnimating","getShouldDraggingAnimate","getStyle","mapped","transform","boxSizing","opacity","zIndex","pointerEvents","getDraggingStyle","secondary","shouldAnimateDisplacement","useValidation","getRef","preventHtml5Dnd","getSecondarySnapshot","combineTargetFor","isClone","dropAnimation","draggingOver","atRest","snapshot","ConnectedDraggable","draggingSelector","memoizedOffset","getMemoizedSnapshot","getMemoizedProps","getCombineWithFromResult","curve","scale","getDraggableSelector","secondarySelector","getFallback","getProps","ownId","draggingId","visualDisplacement","isAfterCriticalInVirtualList","getSecondarySelector","setRef","dropAnimationFinishedAction","dragHandleProps","tabIndex","onMoveEnd","propertyName","onTransitionEnd","innerRef","draggableProps","rubric","PrivateDraggable","isUsingCloneFor","PublicDraggable","isDragDisabled","disableInteractiveElementBlocking","empty","isAnimatingOpenOnMount","getSize","flexShrink","flexGrow","Placeholder","animateOpenTimerRef","tryClearAnimateOpenTimer","setIsAnimatingOpenOnMount","onSizeChangeEnd","isScroll","isAuto","isEither","overflowX","overflowY","isElementScrollable","scrollLeft","scrollTop","env","isDropDisabled","closestScrollable","targetRef","getClient","frameClient","scrollSize","getIsFixed","immediate","delayed","getClosestScrollableFromDrag","isMatchingType","getDraggable","updateViewportMaxScroll","defaultProps","ignoreContainerClipping","renderClone","getContainerForClone","partialConnectedDroppable","idleWithAnimation","shouldAnimatePlaceholder","isDraggingOver","draggingOverWith","draggingFromThisWith","isUsingPlaceholder","useClone","idleWithoutAnimation","getDraggableRubric","getMapProps","isDraggingOverForConsumer","isDraggingOverForImpact","wasCombining","isHome","droppableRef","placeholderRef","getDroppableRef","setDroppableRef","setPlaceholderRef","onPlaceholderTransitionEnd","whileDraggingRef","previousRef","publishedDescriptorRef","memoizedUpdateScroll","getClosestScroll","updateScroll","scheduleScrollUpdate","onClosestScroll","maybeRef","maybeDragging","removeAttribute","useDroppablePublisher","droppableProps","droppableContext","node","draggableProvided","draggableSnapshot","getClone","scrollJumpKeys","getDraggingBindings","useKeyboardSensor","preDrag","isCapturing","u","for","c","f","g","h","k","l","m","n","p","q","t","v","r","$$typeof","exports","module"],"sourceRoot":""}